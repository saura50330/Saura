

Microchip Technology PIC LITE Macro Assembler V1.31 build 56723 
                                                                                               Mon May 30 03:10:34 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	_abc11_text,global,class=CODE,delta=2
     8                           	psect	_abc12_text,global,class=CODE,delta=2
     9                           	psect	_eep0_text,global,class=CODE,delta=2
    10                           	psect	_eep1_text,global,class=CODE,delta=2
    11                           	psect	_eep10_text,global,class=CODE,delta=2
    12                           	psect	_eep2_text,global,class=CODE,delta=2
    13                           	psect	_eep3_text,global,class=CODE,delta=2
    14                           	psect	_eep4_text,global,class=CODE,delta=2
    15                           	psect	_eep5_text,global,class=CODE,delta=2
    16                           	psect	_eep6_text,global,class=CODE,delta=2
    17                           	psect	_eep7_text,global,class=CODE,delta=2
    18                           	psect	_eep8_text,global,class=CODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    29                           	psect	maintext,global,class=CODE,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2
    41                           	psect	text12,local,class=CODE,merge=1,delta=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	functab,global,reloc=256,class=CODE,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011E                     	;# 
   131  011F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  019D                     	;# 
   135  019E                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0115                     	;# 
   198  0116                     	;# 
   199  0118                     	;# 
   200  0119                     	;# 
   201  011A                     	;# 
   202  011B                     	;# 
   203  011E                     	;# 
   204  011F                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  019D                     	;# 
   208  019E                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0095                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009E                     	;# 
   264  009F                     	;# 
   265  010C                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010E                     	;# 
   269  010F                     	;# 
   270  0115                     	;# 
   271  0116                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011E                     	;# 
   277  011F                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  019D                     	;# 
   281  019E                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  000A                     	;# 
   291  000B                     	;# 
   292  000C                     	;# 
   293  000D                     	;# 
   294  000E                     	;# 
   295  000E                     	;# 
   296  000F                     	;# 
   297  0010                     	;# 
   298  0011                     	;# 
   299  0012                     	;# 
   300  0013                     	;# 
   301  0014                     	;# 
   302  0015                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001C                     	;# 
   310  001D                     	;# 
   311  001E                     	;# 
   312  001F                     	;# 
   313  0081                     	;# 
   314  0085                     	;# 
   315  0086                     	;# 
   316  0087                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  008E                     	;# 
   320  008F                     	;# 
   321  0090                     	;# 
   322  0092                     	;# 
   323  0093                     	;# 
   324  0093                     	;# 
   325  0093                     	;# 
   326  0094                     	;# 
   327  0095                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0096                     	;# 
   331  0097                     	;# 
   332  0098                     	;# 
   333  0099                     	;# 
   334  009A                     	;# 
   335  009B                     	;# 
   336  009E                     	;# 
   337  009F                     	;# 
   338  010C                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  010E                     	;# 
   342  010F                     	;# 
   343  0115                     	;# 
   344  0116                     	;# 
   345  0118                     	;# 
   346  0119                     	;# 
   347  011A                     	;# 
   348  011B                     	;# 
   349  011E                     	;# 
   350  011F                     	;# 
   351  018C                     	;# 
   352  018D                     	;# 
   353  019D                     	;# 
   354  019E                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  000E                     	;# 
   369  000F                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0014                     	;# 
   375  0015                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001C                     	;# 
   383  001D                     	;# 
   384  001E                     	;# 
   385  001F                     	;# 
   386  0081                     	;# 
   387  0085                     	;# 
   388  0086                     	;# 
   389  0087                     	;# 
   390  008C                     	;# 
   391  008D                     	;# 
   392  008E                     	;# 
   393  008F                     	;# 
   394  0090                     	;# 
   395  0092                     	;# 
   396  0093                     	;# 
   397  0093                     	;# 
   398  0093                     	;# 
   399  0094                     	;# 
   400  0095                     	;# 
   401  0095                     	;# 
   402  0096                     	;# 
   403  0096                     	;# 
   404  0097                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009A                     	;# 
   408  009B                     	;# 
   409  009E                     	;# 
   410  009F                     	;# 
   411  010C                     	;# 
   412  010C                     	;# 
   413  010D                     	;# 
   414  010E                     	;# 
   415  010F                     	;# 
   416  0115                     	;# 
   417  0116                     	;# 
   418  0118                     	;# 
   419  0119                     	;# 
   420  011A                     	;# 
   421  011B                     	;# 
   422  011E                     	;# 
   423  011F                     	;# 
   424  018C                     	;# 
   425  018D                     	;# 
   426  019D                     	;# 
   427  019E                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  000A                     	;# 
   437  000B                     	;# 
   438  000C                     	;# 
   439  000D                     	;# 
   440  000E                     	;# 
   441  000E                     	;# 
   442  000F                     	;# 
   443  0010                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0015                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001C                     	;# 
   456  001D                     	;# 
   457  001E                     	;# 
   458  001F                     	;# 
   459  0081                     	;# 
   460  0085                     	;# 
   461  0086                     	;# 
   462  0087                     	;# 
   463  008C                     	;# 
   464  008D                     	;# 
   465  008E                     	;# 
   466  008F                     	;# 
   467  0090                     	;# 
   468  0092                     	;# 
   469  0093                     	;# 
   470  0093                     	;# 
   471  0093                     	;# 
   472  0094                     	;# 
   473  0095                     	;# 
   474  0095                     	;# 
   475  0096                     	;# 
   476  0096                     	;# 
   477  0097                     	;# 
   478  0098                     	;# 
   479  0099                     	;# 
   480  009A                     	;# 
   481  009B                     	;# 
   482  009E                     	;# 
   483  009F                     	;# 
   484  010C                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0115                     	;# 
   490  0116                     	;# 
   491  0118                     	;# 
   492  0119                     	;# 
   493  011A                     	;# 
   494  011B                     	;# 
   495  011E                     	;# 
   496  011F                     	;# 
   497  018C                     	;# 
   498  018D                     	;# 
   499  019D                     	;# 
   500  019E                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000D                     	;# 
   513  000E                     	;# 
   514  000E                     	;# 
   515  000F                     	;# 
   516  0010                     	;# 
   517  0011                     	;# 
   518  0012                     	;# 
   519  0013                     	;# 
   520  0014                     	;# 
   521  0015                     	;# 
   522  0015                     	;# 
   523  0016                     	;# 
   524  0017                     	;# 
   525  0018                     	;# 
   526  0019                     	;# 
   527  001A                     	;# 
   528  001C                     	;# 
   529  001D                     	;# 
   530  001E                     	;# 
   531  001F                     	;# 
   532  0081                     	;# 
   533  0085                     	;# 
   534  0086                     	;# 
   535  0087                     	;# 
   536  008C                     	;# 
   537  008D                     	;# 
   538  008E                     	;# 
   539  008F                     	;# 
   540  0090                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0093                     	;# 
   544  0093                     	;# 
   545  0094                     	;# 
   546  0095                     	;# 
   547  0095                     	;# 
   548  0096                     	;# 
   549  0096                     	;# 
   550  0097                     	;# 
   551  0098                     	;# 
   552  0099                     	;# 
   553  009A                     	;# 
   554  009B                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  010E                     	;# 
   561  010F                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0118                     	;# 
   565  0119                     	;# 
   566  011A                     	;# 
   567  011B                     	;# 
   568  011E                     	;# 
   569  011F                     	;# 
   570  018C                     	;# 
   571  018D                     	;# 
   572  019D                     	;# 
   573  019E                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  000E                     	;# 
   587  000E                     	;# 
   588  000F                     	;# 
   589  0010                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0014                     	;# 
   594  0015                     	;# 
   595  0015                     	;# 
   596  0016                     	;# 
   597  0017                     	;# 
   598  0018                     	;# 
   599  0019                     	;# 
   600  001A                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  0081                     	;# 
   606  0085                     	;# 
   607  0086                     	;# 
   608  0087                     	;# 
   609  008C                     	;# 
   610  008D                     	;# 
   611  008E                     	;# 
   612  008F                     	;# 
   613  0090                     	;# 
   614  0092                     	;# 
   615  0093                     	;# 
   616  0093                     	;# 
   617  0093                     	;# 
   618  0094                     	;# 
   619  0095                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009E                     	;# 
   629  009F                     	;# 
   630  010C                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  010F                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0118                     	;# 
   638  0119                     	;# 
   639  011A                     	;# 
   640  011B                     	;# 
   641  011E                     	;# 
   642  011F                     	;# 
   643  018C                     	;# 
   644  018D                     	;# 
   645  019D                     	;# 
   646  019E                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  000E                     	;# 
   661  000F                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  0081                     	;# 
   679  0085                     	;# 
   680  0086                     	;# 
   681  0087                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0092                     	;# 
   688  0093                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0094                     	;# 
   692  0095                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0096                     	;# 
   696  0097                     	;# 
   697  0098                     	;# 
   698  0099                     	;# 
   699  009A                     	;# 
   700  009B                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  010C                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  010F                     	;# 
   708  0115                     	;# 
   709  0116                     	;# 
   710  0118                     	;# 
   711  0119                     	;# 
   712  011A                     	;# 
   713  011B                     	;# 
   714  011E                     	;# 
   715  011F                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  019D                     	;# 
   719  019E                     	;# 
   720  0000                     	;# 
   721  0001                     	;# 
   722  0002                     	;# 
   723  0003                     	;# 
   724  0004                     	;# 
   725  0005                     	;# 
   726  0006                     	;# 
   727  0007                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001C                     	;# 
   748  001D                     	;# 
   749  001E                     	;# 
   750  001F                     	;# 
   751  0081                     	;# 
   752  0085                     	;# 
   753  0086                     	;# 
   754  0087                     	;# 
   755  008C                     	;# 
   756  008D                     	;# 
   757  008E                     	;# 
   758  008F                     	;# 
   759  0090                     	;# 
   760  0092                     	;# 
   761  0093                     	;# 
   762  0093                     	;# 
   763  0093                     	;# 
   764  0094                     	;# 
   765  0095                     	;# 
   766  0095                     	;# 
   767  0096                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009E                     	;# 
   775  009F                     	;# 
   776  010C                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  010E                     	;# 
   780  010F                     	;# 
   781  0115                     	;# 
   782  0116                     	;# 
   783  0118                     	;# 
   784  0119                     	;# 
   785  011A                     	;# 
   786  011B                     	;# 
   787  011E                     	;# 
   788  011F                     	;# 
   789  018C                     	;# 
   790  018D                     	;# 
   791  019D                     	;# 
   792  019E                     	;# 
   793  0000                     	;# 
   794  0001                     	;# 
   795  0002                     	;# 
   796  0003                     	;# 
   797  0004                     	;# 
   798  0005                     	;# 
   799  0006                     	;# 
   800  0007                     	;# 
   801  000A                     	;# 
   802  000B                     	;# 
   803  000C                     	;# 
   804  000D                     	;# 
   805  000E                     	;# 
   806  000E                     	;# 
   807  000F                     	;# 
   808  0010                     	;# 
   809  0011                     	;# 
   810  0012                     	;# 
   811  0013                     	;# 
   812  0014                     	;# 
   813  0015                     	;# 
   814  0015                     	;# 
   815  0016                     	;# 
   816  0017                     	;# 
   817  0018                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001C                     	;# 
   821  001D                     	;# 
   822  001E                     	;# 
   823  001F                     	;# 
   824  0081                     	;# 
   825  0085                     	;# 
   826  0086                     	;# 
   827  0087                     	;# 
   828  008C                     	;# 
   829  008D                     	;# 
   830  008E                     	;# 
   831  008F                     	;# 
   832  0090                     	;# 
   833  0092                     	;# 
   834  0093                     	;# 
   835  0093                     	;# 
   836  0093                     	;# 
   837  0094                     	;# 
   838  0095                     	;# 
   839  0095                     	;# 
   840  0096                     	;# 
   841  0096                     	;# 
   842  0097                     	;# 
   843  0098                     	;# 
   844  0099                     	;# 
   845  009A                     	;# 
   846  009B                     	;# 
   847  009E                     	;# 
   848  009F                     	;# 
   849  010C                     	;# 
   850  010C                     	;# 
   851  010D                     	;# 
   852  010E                     	;# 
   853  010F                     	;# 
   854  0115                     	;# 
   855  0116                     	;# 
   856  0118                     	;# 
   857  0119                     	;# 
   858  011A                     	;# 
   859  011B                     	;# 
   860  011E                     	;# 
   861  011F                     	;# 
   862  018C                     	;# 
   863  018D                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  0000                     	;# 
   867  0001                     	;# 
   868  0002                     	;# 
   869  0003                     	;# 
   870  0004                     	;# 
   871  0005                     	;# 
   872  0006                     	;# 
   873  0007                     	;# 
   874  000A                     	;# 
   875  000B                     	;# 
   876  000C                     	;# 
   877  000D                     	;# 
   878  000E                     	;# 
   879  000E                     	;# 
   880  000F                     	;# 
   881  0010                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0014                     	;# 
   886  0015                     	;# 
   887  0015                     	;# 
   888  0016                     	;# 
   889  0017                     	;# 
   890  0018                     	;# 
   891  0019                     	;# 
   892  001A                     	;# 
   893  001C                     	;# 
   894  001D                     	;# 
   895  001E                     	;# 
   896  001F                     	;# 
   897  0081                     	;# 
   898  0085                     	;# 
   899  0086                     	;# 
   900  0087                     	;# 
   901  008C                     	;# 
   902  008D                     	;# 
   903  008E                     	;# 
   904  008F                     	;# 
   905  0090                     	;# 
   906  0092                     	;# 
   907  0093                     	;# 
   908  0093                     	;# 
   909  0093                     	;# 
   910  0094                     	;# 
   911  0095                     	;# 
   912  0095                     	;# 
   913  0096                     	;# 
   914  0096                     	;# 
   915  0097                     	;# 
   916  0098                     	;# 
   917  0099                     	;# 
   918  009A                     	;# 
   919  009B                     	;# 
   920  009E                     	;# 
   921  009F                     	;# 
   922  010C                     	;# 
   923  010C                     	;# 
   924  010D                     	;# 
   925  010E                     	;# 
   926  010F                     	;# 
   927  0115                     	;# 
   928  0116                     	;# 
   929  0118                     	;# 
   930  0119                     	;# 
   931  011A                     	;# 
   932  011B                     	;# 
   933  011E                     	;# 
   934  011F                     	;# 
   935  018C                     	;# 
   936  018D                     	;# 
   937  019D                     	;# 
   938  019E                     	;# 
   939  0000                     	;# 
   940  0001                     	;# 
   941  0002                     	;# 
   942  0003                     	;# 
   943  0004                     	;# 
   944  0005                     	;# 
   945  0006                     	;# 
   946  0007                     	;# 
   947  000A                     	;# 
   948  000B                     	;# 
   949  000C                     	;# 
   950  000D                     	;# 
   951  000E                     	;# 
   952  000E                     	;# 
   953  000F                     	;# 
   954  0010                     	;# 
   955  0011                     	;# 
   956  0012                     	;# 
   957  0013                     	;# 
   958  0014                     	;# 
   959  0015                     	;# 
   960  0015                     	;# 
   961  0016                     	;# 
   962  0017                     	;# 
   963  0018                     	;# 
   964  0019                     	;# 
   965  001A                     	;# 
   966  001C                     	;# 
   967  001D                     	;# 
   968  001E                     	;# 
   969  001F                     	;# 
   970  0081                     	;# 
   971  0085                     	;# 
   972  0086                     	;# 
   973  0087                     	;# 
   974  008C                     	;# 
   975  008D                     	;# 
   976  008E                     	;# 
   977  008F                     	;# 
   978  0090                     	;# 
   979  0092                     	;# 
   980  0093                     	;# 
   981  0093                     	;# 
   982  0093                     	;# 
   983  0094                     	;# 
   984  0095                     	;# 
   985  0095                     	;# 
   986  0096                     	;# 
   987  0096                     	;# 
   988  0097                     	;# 
   989  0098                     	;# 
   990  0099                     	;# 
   991  009A                     	;# 
   992  009B                     	;# 
   993  009E                     	;# 
   994  009F                     	;# 
   995  010C                     	;# 
   996  010C                     	;# 
   997  010D                     	;# 
   998  010E                     	;# 
   999  010F                     	;# 
  1000  0115                     	;# 
  1001  0116                     	;# 
  1002  0118                     	;# 
  1003  0119                     	;# 
  1004  011A                     	;# 
  1005  011B                     	;# 
  1006  011E                     	;# 
  1007  011F                     	;# 
  1008  018C                     	;# 
  1009  018D                     	;# 
  1010  019D                     	;# 
  1011  019E                     	;# 
  1012                           
  1013                           	psect	idataBANK0
  1014  06FA                     __pidataBANK0:	
  1015                           
  1016                           ;initializer for num_to_string@num_string
  1017  06FA  3430               	retlw	48
  1018  06FB  3430               	retlw	48
  1019  06FC  3430               	retlw	48
  1020  06FD  3400               	retlw	0
  1021                           
  1022                           	psect	idataBANK1
  1023  062E                     __pidataBANK1:	
  1024                           
  1025                           ;initializer for _Nano_Os
  1026  062E  3422               	retlw	low (_Os_10ms_Task| (0+32768))
  1027  062F  3487               	retlw	high (_Os_10ms_Task| (0+32768))
  1028  0630  342F               	retlw	low (_Os_50ms_Task| (0+32768))
  1029  0631  3487               	retlw	high (_Os_50ms_Task| (0+32768))
  1030  0632  342D               	retlw	low (_Os_100ms_Task| (0+32768))
  1031  0633  3487               	retlw	high (_Os_100ms_Task| (0+32768))
  1032  0634  3425               	retlw	low (_Os_200ms_Task| (0+32768))
  1033  0635  3487               	retlw	high (_Os_200ms_Task| (0+32768))
  1034  0636  342B               	retlw	low (_Os_1000ms_Task| (0+32768))
  1035  0637  3487               	retlw	high (_Os_1000ms_Task| (0+32768))
  1036  0638  3428               	retlw	low (_Os_Back_Ground_Task| (0+32768))
  1037  0639  3487               	retlw	high (_Os_Back_Ground_Task| (0+32768))
  1038  063A  3400               	retlw	0
  1039  063B  3400               	retlw	0
  1040  063C  3400               	retlw	0
  1041  063D  3400               	retlw	0
  1042  063E  3400               	retlw	0
  1043  063F  3400               	retlw	0
  1044  0640  3400               	retlw	0
  1045  0641  3400               	retlw	0
  1046  0642  3400               	retlw	0
  1047  0643  3400               	retlw	0
  1048  0644  3400               	retlw	0
  1049  0645  3401               	retlw	1
  1050  0646  34FF               	retlw	255
  1051  0647  34FF               	retlw	255
  1052  0648  34FF               	retlw	255
  1053  0649  34FF               	retlw	255
  1054  064A  34FF               	retlw	255
  1055  064B  34FF               	retlw	255
  1056                           
  1057                           	psect	stringtext
  1058  0700                     __pstringtext:	
  1059  0700                     stringtab:	
  1060  0700                     __stringtab:	
  1061                           
  1062                           ;	String table - string pointers are 2 bytes each
  1063  0700  1BFF               	btfsc	btemp+1,7
  1064  0701  2F0A               	ljmp	stringcode
  1065  0702  1383               	bcf	3,7
  1066  0703  187F               	btfsc	btemp+1,0
  1067  0704  1783               	bsf	3,7
  1068  0705  0800               	movf	0,w
  1069  0706  0A84               	incf	4,f
  1070  0707  1903               	skipnz
  1071  0708  0AFF               	incf	btemp+1,f
  1072  0709  0008               	return
  1073  070A                     stringcode:	
  1074  070A  087F               	movf	btemp+1,w
  1075  070B  397F               	andlw	127
  1076  070C  008A               	movwf	10
  1077  070D  0804               	movf	4,w
  1078  070E  0A84               	incf	4,f
  1079  070F  1903               	skipnz
  1080  0710  0AFF               	incf	btemp+1,f
  1081  0711  0082               	movwf	2
  1082  0712                     __stringbase:	
  1083  0712                     __end_of__stringtab:	
  1084  0712                     _Led_Matrix:	
  1085  0712  3400               	retlw	0
  1086  0713  3401               	retlw	1
  1087  0714  3401               	retlw	1
  1088  0715  3400               	retlw	0
  1089  0716  3402               	retlw	2
  1090  0717  3401               	retlw	1
  1091  0718                     __end_of_Led_Matrix:	
  1092  0718                     _Switch_Matrix:	
  1093  0718  3400               	retlw	0
  1094  0719  3400               	retlw	0
  1095  071A  3401               	retlw	1
  1096  071B  3401               	retlw	1
  1097  071C  3402               	retlw	2
  1098  071D  3400               	retlw	0
  1099  071E                     __end_of_Switch_Matrix:	
  1100  071E                     _BACKGROUND_TASK:	
  1101  071E  3405               	retlw	5
  1102  071F                     __end_of_BACKGROUND_TASK:	
  1103  210A                     _abc11_absaddr	set	8458
  1104  210B                     _abc12_absaddr	set	8459
  1105  2100                     _eep0_absaddr	set	8448
  1106  2101                     _eep1_absaddr	set	8449
  1107  2109                     _eep10_absaddr	set	8457
  1108  2102                     _eep2_absaddr	set	8450
  1109  2103                     _eep3_absaddr	set	8451
  1110  2104                     _eep4_absaddr	set	8452
  1111  2105                     _eep5_absaddr	set	8453
  1112  2106                     _eep6_absaddr	set	8454
  1113  2107                     _eep7_absaddr	set	8455
  1114  2108                     _eep8_absaddr	set	8456
  1115  071F                     _Kernel_vHWReset:	
  1116  071F  3403               	retlw	(fp__Systm_Ini_Proc_1-fpbase)& (0+255)
  1117  0720  3401               	retlw	(fp__Systm_Ini_Proc_2-fpbase)& (0+255)
  1118  0721  3400               	retlw	0
  1119  0722                     __end_of_Kernel_vHWReset:	
  1120  0722                     _Os_10ms_Task:	
  1121  0722  340F               	retlw	(fp__Uart_Manager-fpbase)& (0+255)
  1122  0723  3407               	retlw	(fp__adc_updator-fpbase)& (0+255)
  1123  0724  3400               	retlw	0
  1124  0725                     __end_of_Os_10ms_Task:	
  1125  0725                     _Os_200ms_Task:	
  1126  0725  3413               	retlw	(fp__System_Status_Indicator-fpbase)& (0+255)
  1127  0726  3409               	retlw	(fp__Led_Manager-fpbase)& (0+255)
  1128  0727  3400               	retlw	0
  1129  0728                     __end_of_Os_200ms_Task:	
  1130  0728                     _Os_Back_Ground_Task:	
  1131  0728  340D               	retlw	(fp__Eep_Manager-fpbase)& (0+255)
  1132  0729  3415               	retlw	(fp__Sw_Timer_Updator-fpbase)& (0+255)
  1133  072A  3400               	retlw	0
  1134  072B                     __end_of_Os_Back_Ground_Task:	
  1135  072B                     _Os_1000ms_Task:	
  1136  072B  3405               	retlw	(fp__usege_timer-fpbase)& (0+255)
  1137  072C  3400               	retlw	0
  1138  072D                     __end_of_Os_1000ms_Task:	
  1139  072D                     _Os_100ms_Task:	
  1140  072D  340B               	retlw	(fp__Switch_Manager-fpbase)& (0+255)
  1141  072E  3400               	retlw	0
  1142  072F                     __end_of_Os_100ms_Task:	
  1143  072F                     _Os_50ms_Task:	
  1144  072F  3411               	retlw	(fp__Api_Uart_Read_Rx-fpbase)& (0+255)
  1145  0730  3400               	retlw	0
  1146  0731                     __end_of_Os_50ms_Task:	
  1147  210A                     _abc11_absaddr	set	8458
  1148                           
  1149                           	psect	_abc11_text
  1150  210A                     __p_abc11_text:	
  1151  210A                     _abc11:	
  1152  210A  34FF               	retlw	255
  1153  210B                     __end_of_abc11:	
  1154  210B                     _abc12_absaddr	set	8459
  1155                           
  1156                           	psect	_abc12_text
  1157  210B                     __p_abc12_text:	
  1158  210B                     _abc12:	
  1159  210B  34FF               	retlw	255
  1160  210C                     __end_of_abc12:	
  1161  2100                     _eep0_absaddr	set	8448
  1162                           
  1163                           	psect	_eep0_text
  1164  2100                     __p_eep0_text:	
  1165  2100                     _eep0:	
  1166  2100  34FF               	retlw	255
  1167  2101                     __end_of_eep0:	
  1168  2101                     _eep1_absaddr	set	8449
  1169                           
  1170                           	psect	_eep1_text
  1171  2101                     __p_eep1_text:	
  1172  2101                     _eep1:	
  1173  2101  340C               	retlw	12
  1174  2102                     __end_of_eep1:	
  1175  2109                     _eep10_absaddr	set	8457
  1176                           
  1177                           	psect	_eep10_text
  1178  2109                     __p_eep10_text:	
  1179  2109                     _eep10:	
  1180  2109  34FF               	retlw	255
  1181  210A                     __end_of_eep10:	
  1182  2102                     _eep2_absaddr	set	8450
  1183                           
  1184                           	psect	_eep2_text
  1185  2102                     __p_eep2_text:	
  1186  2102                     _eep2:	
  1187  2102  3466               	retlw	102
  1188  2103                     __end_of_eep2:	
  1189  2103                     _eep3_absaddr	set	8451
  1190                           
  1191                           	psect	_eep3_text
  1192  2103                     __p_eep3_text:	
  1193  2103                     _eep3:	
  1194  2103  34FF               	retlw	255
  1195  2104                     __end_of_eep3:	
  1196  2104                     _eep4_absaddr	set	8452
  1197                           
  1198                           	psect	_eep4_text
  1199  2104                     __p_eep4_text:	
  1200  2104                     _eep4:	
  1201  2104  3400               	retlw	0
  1202  2105                     __end_of_eep4:	
  1203  2105                     _eep5_absaddr	set	8453
  1204                           
  1205                           	psect	_eep5_text
  1206  2105                     __p_eep5_text:	
  1207  2105                     _eep5:	
  1208  2105  3400               	retlw	0
  1209  2106                     __end_of_eep5:	
  1210  2106                     _eep6_absaddr	set	8454
  1211                           
  1212                           	psect	_eep6_text
  1213  2106                     __p_eep6_text:	
  1214  2106                     _eep6:	
  1215  2106  3400               	retlw	0
  1216  2107                     __end_of_eep6:	
  1217  2107                     _eep7_absaddr	set	8455
  1218                           
  1219                           	psect	_eep7_text
  1220  2107                     __p_eep7_text:	
  1221  2107                     _eep7:	
  1222  2107  3400               	retlw	0
  1223  2108                     __end_of_eep7:	
  1224  2108                     _eep8_absaddr	set	8456
  1225                           
  1226                           	psect	_eep8_text
  1227  2108                     __p_eep8_text:	
  1228  2108                     _eep8:	
  1229  2108  34FF               	retlw	255
  1230  2109                     __end_of_eep8:	
  1231  000E                     _TMR1	set	14
  1232  001F                     _ADCON0	set	31
  1233  001E                     _ADRESH	set	30
  1234  0017                     _CCP1CON	set	23
  1235  0015                     _CCPR1L	set	21
  1236  0005                     _PORTA	set	5
  1237  0006                     _PORTB	set	6
  1238  0007                     _PORTC	set	7
  1239  001A                     _RCREG	set	26
  1240  0012                     _T2CON	set	18
  1241  0001                     _TMR0	set	1
  1242  0011                     _TMR2	set	17
  1243  0019                     _TXREG	set	25
  1244  00FF                     _ADFM	set	255
  1245  0066                     _ADIF	set	102
  1246  00F8                     _ADON	set	248
  1247  00FA                     _CHS0	set	250
  1248  00FB                     _CHS1	set	251
  1249  00C4                     _CREN	set	196
  1250  006C                     _EEIF	set	108
  1251  005F                     _GIE	set	95
  1252  00F9                     _GO	set	249
  1253  0059                     _INTF	set	89
  1254  00C1                     _OERR	set	193
  1255  005E                     _PEIE	set	94
  1256  0058                     _RABIF	set	88
  1257  0065                     _RCIF	set	101
  1258  00C7                     _SPEN	set	199
  1259  005D                     _T0IE	set	93
  1260  005A                     _T0IF	set	90
  1261  0083                     _T1OSCEN	set	131
  1262  0081                     _TMR1CS	set	129
  1263  0060                     _TMR1IF	set	96
  1264  0080                     _TMR1ON	set	128
  1265  0061                     _TMR2IF	set	97
  1266  0092                     _TMR2ON	set	146
  1267  0064                     _TXIF	set	100
  1268  00FE                     _VCFG	set	254
  1269  009F                     _ADCON1	set	159
  1270  009E                     _ADRESL	set	158
  1271  0081                     _OPTION_REGbits	set	129
  1272  008F                     _OSCCON	set	143
  1273  0092                     _PR2	set	146
  1274  0099                     _SPBRG	set	153
  1275  0466                     _ADIE	set	1126
  1276  04DB                     _BRG16	set	1243
  1277  04C2                     _BRGH	set	1218
  1278  046C                     _EEIE	set	1132
  1279  047A                     _HTS	set	1146
  1280  0465                     _RCIE	set	1125
  1281  04C4                     _SYNC	set	1220
  1282  0460                     _TMR1IE	set	1120
  1283  0428                     _TRISA0	set	1064
  1284  0429                     _TRISA1	set	1065
  1285  042A                     _TRISA2	set	1066
  1286  042B                     _TRISA3	set	1067
  1287  042C                     _TRISA4	set	1068
  1288  042D                     _TRISA5	set	1069
  1289  0434                     _TRISB4	set	1076
  1290  0435                     _TRISB5	set	1077
  1291  0436                     _TRISB6	set	1078
  1292  0437                     _TRISB7	set	1079
  1293  0438                     _TRISC0	set	1080
  1294  0439                     _TRISC1	set	1081
  1295  043A                     _TRISC2	set	1082
  1296  043B                     _TRISC3	set	1083
  1297  043C                     _TRISC4	set	1084
  1298  043D                     _TRISC5	set	1085
  1299  043E                     _TRISC6	set	1086
  1300  043F                     _TRISC7	set	1087
  1301  04C5                     _TXEN	set	1221
  1302  011E                     _ANSEL	set	286
  1303  011F                     _ANSELH	set	287
  1304  010D                     _EEADR	set	269
  1305  010C                     _EEDAT	set	268
  1306  08F0                     _ANS0	set	2288
  1307  08F1                     _ANS1	set	2289
  1308  08F3                     _ANS3	set	2291
  1309  08F4                     _ANS4	set	2292
  1310  08F5                     _ANS5	set	2293
  1311  018D                     _EECON2	set	397
  1312  019D                     _PSTRCON	set	413
  1313  0C60                     _RD	set	3168
  1314  0C61                     _WR	set	3169
  1315  0C62                     _WREN	set	3170
  1316                           
  1317                           ; #config settings
  1318  0000                     
  1319                           	psect	cinit
  1320  0013                     start_initialization:	
  1321  0013                     __initialization:	
  1322                           
  1323                           ; Clear objects allocated to COMMON
  1324  0013  3078               	movlw	low __pbssCOMMON
  1325  0014  0084               	movwf	4
  1326  0015  307E               	movlw	low (__pbssCOMMON+6)
  1327  0016  118A  2080  118A   	fcall	clear_ram0
  1328                           
  1329                           ; Clear objects allocated to BANK0
  1330  0019  1383               	bcf	3,7	;select IRP bank0
  1331  001A  3020               	movlw	low __pbssBANK0
  1332  001B  0084               	movwf	4
  1333  001C  3052               	movlw	low (__pbssBANK0+50)
  1334  001D  118A  2080  118A   	fcall	clear_ram0
  1335                           
  1336                           ; Clear objects allocated to BANK1
  1337  0020  30BE               	movlw	low __pbssBANK1
  1338  0021  0084               	movwf	4
  1339  0022  30D5               	movlw	low (__pbssBANK1+23)
  1340  0023  118A  2080  118A   	fcall	clear_ram0
  1341                           
  1342                           ; Initialize objects allocated to BANK1
  1343  0026  30BE               	movlw	low (__pdataBANK1+30)
  1344  0027  00FD               	movwf	btemp+-1
  1345  0028  3006               	movlw	high __pidataBANK1
  1346  0029  00FE               	movwf	btemp
  1347  002A  302E               	movlw	low __pidataBANK1
  1348  002B  00FF               	movwf	btemp+1
  1349  002C  30A0               	movlw	low __pdataBANK1
  1350  002D  0084               	movwf	4
  1351  002E  118A  2056  118A   	fcall	init_ram0
  1352                           
  1353                           ; Initialize objects allocated to BANK0
  1354  0031  306B               	movlw	low (__pdataBANK0+4)
  1355  0032  00FD               	movwf	btemp+-1
  1356  0033  3006               	movlw	high __pidataBANK0
  1357  0034  00FE               	movwf	btemp
  1358  0035  30FA               	movlw	low __pidataBANK0
  1359  0036  00FF               	movwf	btemp+1
  1360  0037  3067               	movlw	low __pdataBANK0
  1361  0038  0084               	movwf	4
  1362  0039  118A  2056         	fcall	init_ram0
  1363  003B                     end_of_initialization:	
  1364                           ;End of C runtime variable initialization code
  1365                           
  1366  003B                     __end_of__initialization:	
  1367  003B  0183               	clrf	3
  1368  003C  118A  2A88         	ljmp	_main	;jump to C main() function
  1369                           
  1370                           	psect	bssCOMMON
  1371  0078                     __pbssCOMMON:	
  1372  0078                     _usage_time:	
  1373  0078                     	ds	2
  1374  007A                     Kernel_Co_Op_Timer_ISR@ms10_ctr:	
  1375  007A                     	ds	1
  1376  007B                     _maintainace_status:	
  1377  007B                     	ds	1
  1378  007C                     _start_stop_tmr_val:	
  1379  007C                     	ds	1
  1380  007D                     usege_timer@usage_time_res_count:	
  1381  007D                     	ds	1
  1382                           
  1383                           	psect	bssBANK0
  1384  0020                     __pbssBANK0:	
  1385  0020                     _Kernel_stTimer:	
  1386  0020                     	ds	8
  1387  0028                     _EEPRAM_SYSTEM_DATA:	
  1388  0028                     	ds	6
  1389  002E                     _Eep_Mgr:	
  1390  002E                     	ds	4
  1391  0032                     _EEPRAM_APP_DATA:	
  1392  0032                     	ds	2
  1393  0034                     _adc_chn0_data:	
  1394  0034                     	ds	2
  1395  0036                     _adc_chn1_data:	
  1396  0036                     	ds	2
  1397  0038                     _adc_chn2_data:	
  1398  0038                     	ds	2
  1399  003A                     _adc_chn3_data:	
  1400  003A                     	ds	2
  1401  003C                     Api_Get_Pwm@dutycycle_old:	
  1402  003C                     	ds	1
  1403  003D                     Kernel_Co_Op_Timer_ISR@ms200_ctr:	
  1404  003D                     	ds	1
  1405  003E                     Kernel_Co_Op_Timer_ISR@ms50_ctr:	
  1406  003E                     	ds	1
  1407  003F                     _Os_Task_Ptr_Temp:	
  1408  003F                     	ds	1
  1409  0040                     _Sys_u8_st_Globle_System_Status:	
  1410  0040                     	ds	1
  1411  0041                     _i:	
  1412  0041                     	ds	1
  1413  0042                     adc_updator@adc_no:	
  1414  0042                     	ds	1
  1415  0043                     _Dio:	
  1416  0043                     	ds	15
  1417                           
  1418                           	psect	dataBANK0
  1419  0067                     __pdataBANK0:	
  1420  0067                     num_to_string@num_string:	
  1421  0067                     	ds	4
  1422                           
  1423                           	psect	bssBANK1
  1424  00BE                     __pbssBANK1:	
  1425  00BE                     _Uart_Net_Mgr:	
  1426  00BE                     	ds	23
  1427                           
  1428                           	psect	dataBANK1
  1429  00A0                     __pdataBANK1:	
  1430  00A0                     _Nano_Os:	
  1431  00A0                     	ds	30
  1432                           
  1433                           	psect	clrtext
  1434  0080                     clear_ram0:	
  1435                           ;	Called with FSR containing the base address, and
  1436                           ;	W with the last address+1
  1437                           
  1438  0080  0064               	clrwdt	;clear the watchdog before getting into this loop
  1439  0081                     clrloop0:	
  1440  0081  0180               	clrf	0	;clear RAM location pointed to by FSR
  1441  0082  0A84               	incf	4,f	;increment pointer
  1442  0083  0604               	xorwf	4,w	;XOR with final address
  1443  0084  1903               	btfsc	3,2	;have we reached the end yet?
  1444  0085  3400               	retlw	0	;all done for this memory range, return
  1445  0086  0604               	xorwf	4,w	;XOR again to restore value
  1446  0087  2881               	goto	clrloop0	;do the next byte
  1447                           
  1448                           	psect	inittext
  1449  0052                     init_fetch0:	
  1450                           ;	Called with low address in FSR and high address in W
  1451                           
  1452  0052  087E               	movf	126,w
  1453  0053  008A               	movwf	10
  1454  0054  087F               	movf	127,w
  1455  0055  0082               	movwf	2
  1456  0056                     init_ram0:	
  1457                           ;Called with:
  1458                           ;	high address of idata address in btemp 
  1459                           ;	low address of idata address in btemp+1 
  1460                           ;	low address of data in FSR
  1461                           ;	high address + 1 of data in btemp-1
  1462                           
  1463  0056  2052  118A         	fcall	init_fetch0
  1464  0058  0080               	movwf	0
  1465  0059  0A84               	incf	4,f
  1466  005A  0804               	movf	4,w
  1467  005B  067D               	xorwf	125,w
  1468  005C  1903               	btfsc	3,2
  1469  005D  3400               	retlw	0
  1470  005E  0AFF               	incf	127,f
  1471  005F  1903               	btfsc	3,2
  1472  0060  0AFE               	incf	126,f
  1473  0061  2856               	goto	init_ram0
  1474                           
  1475                           	psect	cstackCOMMON
  1476  0070                     __pcstackCOMMON:	
  1477  0070                     ?_Systm_Ini_Proc_1:	
  1478  0070                     ?_Systm_Ini_Proc_2:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_Uart_Manager:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_Api_Uart_Read_Rx:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_System_Status_Indicator:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_Sw_Timer_Updator:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_Uart_Isr:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ??_Uart_Isr:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_Uart_Ini:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_Adc_Ini:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_adc_updator:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_Dio_Ini:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_Led_Manager:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_Switch_Manager:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_Eep_Ini:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_Eep_Manager:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_EEP_to_RAM:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_usage_time_ini:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_usege_timer:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_main:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_Kernel_Co_Op_Timer_ISR:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ??_Kernel_Co_Op_Timer_ISR:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_Os_Ini:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_Pwm_Ini:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_isr:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_check_eep_checksum:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_EEP_READ:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556                           
  1557                           ; 1 bytes @ 0x0
  1558  0070                     	ds	1
  1559  0071                     Kernel_Co_Op_Timer_ISR@i:	
  1560                           
  1561                           ; 1 bytes @ 0x1
  1562  0071                     	ds	1
  1563  0072                     ??_isr:	
  1564                           
  1565                           ; 0 bytes @ 0x2
  1566  0072                     	ds	4
  1567  0076                     ?_Dio_Write:	
  1568  0076                     ??_Uart_Manager:	
  1569                           ; 0 bytes @ 0x6
  1570                           
  1571  0076                     ??_Api_Uart_Read_Rx:	
  1572                           ; 0 bytes @ 0x6
  1573                           
  1574  0076                     ??_Uart_Ini:	
  1575                           ; 0 bytes @ 0x6
  1576                           
  1577  0076                     ??_Adc_Ini:	
  1578                           ; 0 bytes @ 0x6
  1579                           
  1580  0076                     ??_adc_updator:	
  1581                           ; 0 bytes @ 0x6
  1582                           
  1583  0076                     ??_Dio_Ini:	
  1584                           ; 0 bytes @ 0x6
  1585                           
  1586  0076                     ?_Api_Led_Control:	
  1587                           ; 0 bytes @ 0x6
  1588                           
  1589  0076                     ??_Eep_Ini:	
  1590                           ; 0 bytes @ 0x6
  1591                           
  1592  0076                     ??_Eep_Manager:	
  1593                           ; 0 bytes @ 0x6
  1594                           
  1595  0076                     ??_EEP_READ:	
  1596                           ; 0 bytes @ 0x6
  1597                           
  1598  0076                     ??_usege_timer:	
  1599                           ; 0 bytes @ 0x6
  1600                           
  1601  0076                     ??_Os_Ini:	
  1602                           ; 0 bytes @ 0x6
  1603                           
  1604  0076                     ?_delay_ms:	
  1605                           ; 0 bytes @ 0x6
  1606                           
  1607  0076                     ?_Dio_Read:	
  1608                           ; 0 bytes @ 0x6
  1609                           
  1610  0076                     ?_set_bit_position:	
  1611                           ; 1 bytes @ 0x6
  1612                           
  1613  0076                     Api_Led_Control@led_status:	
  1614                           ; 1 bytes @ 0x6
  1615                           
  1616  0076                     Dio_Read@pin_no:	
  1617                           ; 1 bytes @ 0x6
  1618                           
  1619  0076                     Dio_Write@pin_no:	
  1620                           ; 1 bytes @ 0x6
  1621                           
  1622  0076                     Sw_Timer_Updator@i:	
  1623                           ; 1 bytes @ 0x6
  1624                           
  1625  0076                     set_bit_position@bit_position:	
  1626                           ; 1 bytes @ 0x6
  1627                           
  1628  0076                     usage_time_ini@maint_time:	
  1629                           ; 1 bytes @ 0x6
  1630                           
  1631  0076                     delay_ms@delay_count:	
  1632                           ; 2 bytes @ 0x6
  1633                           
  1634                           
  1635                           ; 2 bytes @ 0x6
  1636  0076                     	ds	1
  1637  0077                     ??_check_eep_checksum:	
  1638  0077                     ??_set_bit_position:	
  1639                           ; 0 bytes @ 0x7
  1640                           
  1641  0077                     ??_Api_Led_Control:	
  1642                           ; 0 bytes @ 0x7
  1643                           
  1644  0077                     Dio_Write@bit_value:	
  1645                           ; 0 bytes @ 0x7
  1646                           
  1647  0077                     Eep_Manager@temp_data:	
  1648                           ; 1 bytes @ 0x7
  1649                           
  1650                           
  1651                           ; 1 bytes @ 0x7
  1652  0077                     	ds	1
  1653  0078                     ??_Systm_Ini_Proc_2:	
  1654  0078                     ??_Kernel_vRunContainer:	
  1655                           ; 0 bytes @ 0x8
  1656                           
  1657  0078                     ??_Pwm_Ini:	
  1658                           ; 0 bytes @ 0x8
  1659                           
  1660                           
  1661                           	psect	cstackBANK0
  1662  0052                     __pcstackBANK0:	
  1663                           ; 0 bytes @ 0x8
  1664                           
  1665  0052                     ??_Dio_Write:	
  1666  0052                     ??_Dio_Read:	
  1667                           ; 0 bytes @ 0x0
  1668                           
  1669  0052                     ??_Sw_Timer_Updator:	
  1670                           ; 0 bytes @ 0x0
  1671                           
  1672  0052                     ??_usage_time_ini:	
  1673                           ; 0 bytes @ 0x0
  1674                           
  1675  0052                     ??_delay_ms:	
  1676                           ; 0 bytes @ 0x0
  1677                           
  1678  0052                     Api_Led_Control@led_no:	
  1679                           ; 0 bytes @ 0x0
  1680                           
  1681  0052                     EEP_READ@Index:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0052                     set_bit_position@number1:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0052                     adc_updator@temp_data:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690                           
  1691                           ; 2 bytes @ 0x0
  1692  0052                     	ds	1
  1693  0053                     ??_System_Status_Indicator:	
  1694  0053                     EEP_READ@temp_data:	
  1695                           ; 0 bytes @ 0x1
  1696                           
  1697  0053                     delay_ms@i:	
  1698                           ; 1 bytes @ 0x1
  1699                           
  1700                           
  1701                           ; 1 bytes @ 0x1
  1702  0053                     	ds	1
  1703  0054                     Dio_Read@port_no:	
  1704  0054                     check_eep_checksum@checksum_data:	
  1705                           ; 1 bytes @ 0x2
  1706                           
  1707                           
  1708                           ; 1 bytes @ 0x2
  1709  0054                     	ds	1
  1710  0055                     Dio_Read@temp_port_data:	
  1711  0055                     check_eep_checksum@i:	
  1712                           ; 1 bytes @ 0x3
  1713                           
  1714                           
  1715                           ; 1 bytes @ 0x3
  1716  0055                     	ds	1
  1717  0056                     ??_Switch_Manager:	
  1718  0056                     ??_EEP_to_RAM:	
  1719                           ; 0 bytes @ 0x4
  1720                           
  1721                           
  1722                           ; 0 bytes @ 0x4
  1723  0056                     	ds	1
  1724  0057                     Dio_Write@port_no:	
  1725  0057                     EEP_to_RAM@eep_error_stetegy:	
  1726                           ; 1 bytes @ 0x5
  1727                           
  1728                           
  1729                           ; 1 bytes @ 0x5
  1730  0057                     	ds	1
  1731  0058                     EEP_to_RAM@temp_data:	
  1732  0058                     _Dio_Write$120:	
  1733                           ; 1 bytes @ 0x6
  1734                           
  1735                           
  1736                           ; 2 bytes @ 0x6
  1737  0058                     	ds	1
  1738  0059                     Switch_Manager@u8_st_temp_switch_ststus:	
  1739  0059                     EEP_to_RAM@j:	
  1740                           ; 1 bytes @ 0x7
  1741                           
  1742                           
  1743                           ; 1 bytes @ 0x7
  1744  0059                     	ds	1
  1745  005A                     Switch_Manager@i:	
  1746  005A                     EEP_to_RAM@j_192:	
  1747                           ; 1 bytes @ 0x8
  1748                           
  1749  005A                     _Dio_Write$121:	
  1750                           ; 1 bytes @ 0x8
  1751                           
  1752                           
  1753                           ; 2 bytes @ 0x8
  1754  005A                     	ds	1
  1755  005B                     EEP_to_RAM@i:	
  1756                           
  1757                           ; 1 bytes @ 0x9
  1758  005B                     	ds	1
  1759  005C                     EEP_to_RAM@i_191:	
  1760  005C                     _Dio_Write$122:	
  1761                           ; 1 bytes @ 0xA
  1762                           
  1763                           
  1764                           ; 2 bytes @ 0xA
  1765  005C                     	ds	1
  1766  005D                     ??_Systm_Ini_Proc_1:	
  1767                           
  1768                           ; 0 bytes @ 0xB
  1769  005D                     	ds	1
  1770  005E                     ?_Kernel_vRunContainer:	
  1771  005E                     ??_Led_Manager:	
  1772                           ; 0 bytes @ 0xC
  1773                           
  1774  005E                     Kernel_vRunContainer@afpContainerArray:	
  1775                           ; 0 bytes @ 0xC
  1776                           
  1777                           
  1778                           ; 2 bytes @ 0xC
  1779  005E                     	ds	3
  1780  0061                     Led_Manager@u8_temp_led:	
  1781                           
  1782                           ; 1 bytes @ 0xF
  1783  0061                     	ds	1
  1784  0062                     Led_Manager@i:	
  1785                           
  1786                           ; 1 bytes @ 0x10
  1787  0062                     	ds	1
  1788  0063                     ??_main:	
  1789                           
  1790                           ; 0 bytes @ 0x11
  1791  0063                     	ds	4
  1792                           
  1793                           	psect	maintext
  1794  0288                     __pmaintext:	
  1795 ;;
  1796 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1797 ;;
  1798 ;; *************** function _main *****************
  1799 ;; Defined at:
  1800 ;;		line 36 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/os.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;		None               void
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 17F/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1814 ;;      Params:         0       0       0       0
  1815 ;;      Locals:         0       0       0       0
  1816 ;;      Temps:          0       4       0       0
  1817 ;;      Totals:         0       4       0       0
  1818 ;;Total ram usage:        4 bytes
  1819 ;; Hardware stack levels required when called:    7
  1820 ;; This function calls:
  1821 ;;		Absolute function
  1822 ;;		_Api_Uart_Read_Rx
  1823 ;;		_Eep_Manager
  1824 ;;		_Kernel_vRunContainer
  1825 ;;		_Led_Manager
  1826 ;;		_Sw_Timer_Updator
  1827 ;;		_Switch_Manager
  1828 ;;		_System_Status_Indicator
  1829 ;;		_Uart_Manager
  1830 ;;		_adc_updator
  1831 ;;		_usege_timer
  1832 ;; This function is called by:
  1833 ;;		Startup code after reset
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _main
  1839  0288                     _main:	
  1840                           
  1841                           ;os.c: 39: Kernel_vRunContainer(Kernel_vHWReset);
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1845  0288  301F               	movlw	low (_Kernel_vHWReset| (0+32768))
  1846  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1847  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1848  028B  00DE               	movwf	Kernel_vRunContainer@afpContainerArray
  1849  028C  3087               	movlw	high (_Kernel_vHWReset| (0+32768))
  1850  028D  00DF               	movwf	Kernel_vRunContainer@afpContainerArray+1
  1851  028E  118A  27AD  118A   	fcall	_Kernel_vRunContainer
  1852  0291                     l2899:	
  1853                           ;os.c: 42: while(1)
  1854                           
  1855                           
  1856                           ;os.c: 43: {
  1857                           ;os.c: 46: Os_Task_Ptr_Temp=0;
  1858  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0293  01BF               	clrf	_Os_Task_Ptr_Temp
  1861                           
  1862                           ;os.c: 47: for(i=0;i<6;i++)
  1863  0294  01C1               	clrf	_i
  1864  0295  3006               	movlw	6
  1865  0296  0241               	subwf	_i,w
  1866  0297  1803               	btfsc	3,0
  1867  0298  2B0C               	goto	l2929
  1868  0299                     l2907:	
  1869                           
  1870                           ;os.c: 48: {
  1871                           ;os.c: 49: if(Nano_Os.Os_ms_Task_Sts[i]==1)
  1872  0299  0841               	movf	_i,w
  1873  029A  3EB2               	addlw	(_Nano_Os+18)& (0+255)
  1874  029B  0084               	movwf	4
  1875  029C  1383               	bcf	3,7	;select IRP bank1
  1876  029D  0800               	movf	0,w
  1877  029E  3A01               	xorlw	1
  1878  029F  1D03               	skipz
  1879  02A0  2B04               	goto	l2925
  1880                           
  1881                           ;os.c: 50: {
  1882                           ;os.c: 51: if((*(Nano_Os.Os_ms_Task_Ptr[i]+ Nano_Os.Os_ms_Task_Func_Num[i]))!=0)
  1883  02A1  0841               	movf	_i,w
  1884  02A2  00E3               	movwf	??_main
  1885  02A3  0763               	addwf	??_main,w
  1886  02A4  3EA0               	addlw	_Nano_Os& (0+255)
  1887  02A5  0084               	movwf	4
  1888  02A6  0800               	movf	0,w
  1889  02A7  00E4               	movwf	??_main+1
  1890  02A8  0A84               	incf	4,f
  1891  02A9  0800               	movf	0,w
  1892  02AA  00E5               	movwf	??_main+2
  1893  02AB  0841               	movf	_i,w
  1894  02AC  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1895  02AD  0084               	movwf	4
  1896  02AE  0800               	movf	0,w
  1897  02AF  0764               	addwf	??_main+1,w
  1898  02B0  0084               	movwf	4
  1899  02B1  0865               	movf	??_main+2,w
  1900  02B2  1803               	skipnc
  1901  02B3  0A65               	incf	??_main+2,w
  1902  02B4  00FF               	movwf	127
  1903  02B5  118A  2700  118A   	fcall	stringtab
  1904  02B8  3A00               	xorlw	0
  1905  02B9  1903               	skipnz
  1906  02BA  2AF0               	goto	l2919
  1907                           
  1908                           ;os.c: 52: {
  1909                           ;os.c: 53: if((Nano_Os.Os_ms_Task_Func_Mask[i]>>Nano_Os.Os_ms_Task_Func_Num[i])&0x01)
  1910  02BB  0841               	movf	_i,w
  1911  02BC  3EB8               	addlw	(_Nano_Os+24)& (0+255)
  1912  02BD  0084               	movwf	4
  1913  02BE  1383               	bcf	3,7	;select IRP bank1
  1914  02BF  0800               	movf	0,w
  1915  02C0  00E3               	movwf	??_main
  1916  02C1  0841               	movf	_i,w
  1917  02C2  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1918  02C3  0084               	movwf	4
  1919  02C4  0A00               	incf	0,w
  1920  02C5  2AC8               	goto	u2454
  1921  02C6                     u2455:	
  1922  02C6  1003               	clrc
  1923  02C7  0CE3               	rrf	??_main,f
  1924  02C8                     u2454:	
  1925  02C8  3EFF               	addlw	-1
  1926  02C9  1D03               	skipz
  1927  02CA  2AC6               	goto	u2455
  1928  02CB  1C63               	btfss	??_main,0
  1929  02CC  2AE7               	goto	l2915
  1930                           
  1931                           ;os.c: 54: {
  1932                           ;os.c: 55: Os_Task_Ptr_Temp=(*(Nano_Os.Os_ms_Task_Ptr[i] +Nano_Os.Os_ms_Task_Func_Num[i]
      +                           ));
  1933  02CD  0841               	movf	_i,w
  1934  02CE  00E3               	movwf	??_main
  1935  02CF  0763               	addwf	??_main,w
  1936  02D0  3EA0               	addlw	_Nano_Os& (0+255)
  1937  02D1  0084               	movwf	4
  1938  02D2  0800               	movf	0,w
  1939  02D3  00E4               	movwf	??_main+1
  1940  02D4  0A84               	incf	4,f
  1941  02D5  0800               	movf	0,w
  1942  02D6  00E5               	movwf	??_main+2
  1943  02D7  0841               	movf	_i,w
  1944  02D8  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1945  02D9  0084               	movwf	4
  1946  02DA  0800               	movf	0,w
  1947  02DB  0764               	addwf	??_main+1,w
  1948  02DC  0084               	movwf	4
  1949  02DD  0865               	movf	??_main+2,w
  1950  02DE  1803               	skipnc
  1951  02DF  0A65               	incf	??_main+2,w
  1952  02E0  00FF               	movwf	127
  1953  02E1  118A  2700  118A   	fcall	stringtab
  1954  02E4  00E6               	movwf	??_main+3
  1955  02E5  0866               	movf	??_main+3,w
  1956  02E6  00BF               	movwf	_Os_Task_Ptr_Temp
  1957  02E7                     l2915:	
  1958                           
  1959                           ;os.c: 57: }
  1960                           ;os.c: 59: Nano_Os.Os_ms_Task_Func_Num[i]++;
  1961  02E7  3001               	movlw	1
  1962  02E8  00E3               	movwf	??_main
  1963  02E9  0841               	movf	_i,w
  1964  02EA  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1965  02EB  0084               	movwf	4
  1966  02EC  0863               	movf	??_main,w
  1967  02ED  1383               	bcf	3,7	;select IRP bank1
  1968  02EE  0780               	addwf	0,f
  1969                           
  1970                           ;os.c: 60: break;
  1971  02EF  2B0C               	goto	l2929
  1972  02F0                     l2919:	
  1973                           ;os.c: 61: }
  1974                           
  1975                           
  1976                           ;os.c: 62: else
  1977                           ;os.c: 63: {
  1978                           ;os.c: 65: Nano_Os.Os_ms_Task_Func_Num[i]=0;
  1979  02F0  0841               	movf	_i,w
  1980  02F1  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1981  02F2  0084               	movwf	4
  1982  02F3  1383               	bcf	3,7	;select IRP bank1
  1983  02F4  0180               	clrf	0
  1984                           
  1985                           ;os.c: 66: if(i<(BACKGROUND_TASK))
  1986  02F5  301E               	movlw	low (_BACKGROUND_TASK| (0+32768))
  1987  02F6  0084               	movwf	4
  1988  02F7  3087               	movlw	high (_BACKGROUND_TASK| (0+32768))
  1989  02F8  00FF               	movwf	127
  1990  02F9  118A  2700  118A   	fcall	stringtab
  1991  02FC  0241               	subwf	_i,w
  1992  02FD  1803               	skipnc
  1993  02FE  2B04               	goto	l2925
  1994                           
  1995                           ;os.c: 67: {
  1996                           ;os.c: 68: Nano_Os.Os_ms_Task_Sts[i]=0;
  1997  02FF  0841               	movf	_i,w
  1998  0300  3EB2               	addlw	(_Nano_Os+18)& (0+255)
  1999  0301  0084               	movwf	4
  2000  0302  1383               	bcf	3,7	;select IRP bank1
  2001  0303  0180               	clrf	0
  2002  0304                     l2925:	
  2003  0304  3001               	movlw	1
  2004  0305  00E3               	movwf	??_main
  2005  0306  0863               	movf	??_main,w
  2006  0307  07C1               	addwf	_i,f
  2007  0308  3006               	movlw	6
  2008  0309  0241               	subwf	_i,w
  2009  030A  1C03               	skipc
  2010  030B  2A99               	goto	l2907
  2011  030C                     l2929:	
  2012                           
  2013                           ;os.c: 69: }
  2014                           ;os.c: 73: }
  2015                           ;os.c: 74: }
  2016                           ;os.c: 75: }
  2017                           ;os.c: 78: if(Os_Task_Ptr_Temp)
  2018  030C  083F               	movf	_Os_Task_Ptr_Temp,w
  2019  030D  1903               	btfsc	3,2
  2020  030E  2A91               	goto	l2899
  2021                           
  2022                           ;os.c: 79: {
  2023                           ;os.c: 80: (*Os_Task_Ptr_Temp)();
  2024  030F  083F               	movf	_Os_Task_Ptr_Temp,w
  2025  0310  118A  2100  118A   	fcall	fptable
  2026  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0315  2A91               	goto	l2899
  2029  0316                     __end_of_main:	
  2030                           
  2031                           	psect	text1
  2032  044B                     __ptext1:	
  2033 ;; *************** function _Sw_Timer_Updator *****************
  2034 ;; Defined at:
  2035 ;;		line 271 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/os.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  i               1    6[COMMON] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;		None               void
  2042 ;; Registers used:
  2043 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2049 ;;      Params:         0       0       0       0
  2050 ;;      Locals:         1       0       0       0
  2051 ;;      Temps:          0       3       0       0
  2052 ;;      Totals:         1       3       0       0
  2053 ;;Total ram usage:        4 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    2
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _Sw_Timer_Updator
  2065  044B                     _Sw_Timer_Updator:	
  2066                           
  2067                           ;os.c: 274: for(_UBYTE i = 0;i<2;i++)
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _Sw_Timer_Updator: [wreg-fsr0h+status,2+status,0]
  2071  044B  01F6               	clrf	Sw_Timer_Updator@i
  2072  044C                     L1:	
  2073  044C  3002               	movlw	2
  2074  044D  0276               	subwf	Sw_Timer_Updator@i,w
  2075  044E  1803               	btfsc	3,0
  2076  044F  0008               	return
  2077                           
  2078                           ;os.c: 275: {
  2079                           ;os.c: 277: if(Kernel_stTimer[i].Lock == 0x01)
  2080  0450  0876               	movf	Sw_Timer_Updator@i,w
  2081  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0453  00D2               	movwf	??_Sw_Timer_Updator
  2084  0454  3001               	movlw	1
  2085  0455                     u2225:	
  2086  0455  1003               	clrc
  2087  0456  0DD2               	rlf	??_Sw_Timer_Updator,f
  2088  0457  3EFF               	addlw	-1
  2089  0458  1D03               	skipz
  2090  0459  2C55               	goto	u2225
  2091  045A  1003               	clrc
  2092  045B  0D52               	rlf	??_Sw_Timer_Updator,w
  2093  045C  3E20               	addlw	_Kernel_stTimer& (0+255)
  2094  045D  0084               	movwf	4
  2095  045E  1383               	bcf	3,7	;select IRP bank0
  2096  045F  0800               	movf	0,w
  2097  0460  3A01               	xorlw	1
  2098  0461  1D03               	skipz
  2099  0462  2C9F               	goto	l2841
  2100                           
  2101                           ;os.c: 278: {
  2102                           ;os.c: 280: if(Kernel_stTimer[i].TimerValue == 0)
  2103  0463  0876               	movf	Sw_Timer_Updator@i,w
  2104  0464  00D2               	movwf	??_Sw_Timer_Updator
  2105  0465  3001               	movlw	1
  2106  0466                     u2245:	
  2107  0466  1003               	clrc
  2108  0467  0DD2               	rlf	??_Sw_Timer_Updator,f
  2109  0468  3EFF               	addlw	-1
  2110  0469  1D03               	skipz
  2111  046A  2C66               	goto	u2245
  2112  046B  1003               	clrc
  2113  046C  0D52               	rlf	??_Sw_Timer_Updator,w
  2114  046D  3E01               	addlw	1
  2115  046E  3E20               	addlw	_Kernel_stTimer& (0+255)
  2116  046F  0084               	movwf	4
  2117  0470  0800               	movf	0,w
  2118  0471  1D03               	skipz
  2119  0472  2C9F               	goto	l2841
  2120                           
  2121                           ;os.c: 284: {
  2122                           ;os.c: 285: (*Kernel_stTimer[i].cb)();
  2123  0473  0876               	movf	Sw_Timer_Updator@i,w
  2124  0474  00D2               	movwf	??_Sw_Timer_Updator
  2125  0475  3001               	movlw	1
  2126  0476                     u2265:	
  2127  0476  1003               	clrc
  2128  0477  0DD2               	rlf	??_Sw_Timer_Updator,f
  2129  0478  3EFF               	addlw	-1
  2130  0479  1D03               	skipz
  2131  047A  2C76               	goto	u2265
  2132  047B  1003               	clrc
  2133  047C  0D52               	rlf	??_Sw_Timer_Updator,w
  2134  047D  3E03               	addlw	3
  2135  047E  3E20               	addlw	_Kernel_stTimer& (0+255)
  2136  047F  0084               	movwf	4
  2137  0480  0800               	movf	0,w
  2138                           
  2139                           ;os.c: 287: }
  2140                           ;os.c: 288: Kernel_stTimer[i].TimerValue = Kernel_stTimer[i].TimerValueBk;
  2141  0481  0876               	movf	Sw_Timer_Updator@i,w
  2142  0482  00D2               	movwf	??_Sw_Timer_Updator
  2143  0483  3001               	movlw	1
  2144  0484                     u2275:	
  2145  0484  1003               	clrc
  2146  0485  0DD2               	rlf	??_Sw_Timer_Updator,f
  2147  0486  3EFF               	addlw	-1
  2148  0487  1D03               	skipz
  2149  0488  2C84               	goto	u2275
  2150  0489  1003               	clrc
  2151  048A  0D52               	rlf	??_Sw_Timer_Updator,w
  2152  048B  3E02               	addlw	2
  2153  048C  3E20               	addlw	_Kernel_stTimer& (0+255)
  2154  048D  0084               	movwf	4
  2155  048E  0800               	movf	0,w
  2156  048F  00D3               	movwf	??_Sw_Timer_Updator+1
  2157  0490  0876               	movf	Sw_Timer_Updator@i,w
  2158  0491  00D4               	movwf	??_Sw_Timer_Updator+2
  2159  0492  3001               	movlw	1
  2160  0493                     u2285:	
  2161  0493  1003               	clrc
  2162  0494  0DD4               	rlf	??_Sw_Timer_Updator+2,f
  2163  0495  3EFF               	addlw	-1
  2164  0496  1D03               	skipz
  2165  0497  2C93               	goto	u2285
  2166  0498  1003               	clrc
  2167  0499  0D54               	rlf	??_Sw_Timer_Updator+2,w
  2168  049A  3E01               	addlw	1
  2169  049B  3E20               	addlw	_Kernel_stTimer& (0+255)
  2170  049C  0084               	movwf	4
  2171  049D  0853               	movf	??_Sw_Timer_Updator+1,w
  2172  049E  0080               	movwf	0
  2173  049F                     l2841:	
  2174  049F  3001               	movlw	1
  2175  04A0  00D2               	movwf	??_Sw_Timer_Updator
  2176  04A1  0852               	movf	??_Sw_Timer_Updator,w
  2177  04A2  07F6               	addwf	Sw_Timer_Updator@i,f
  2178  04A3  2C4C               	goto	L1
  2179  04A4                     __end_of_Sw_Timer_Updator:	
  2180                           
  2181                           	psect	text2
  2182  06A3                     __ptext2:	
  2183 ;; *************** function _System_Status_Indicator *****************
  2184 ;; Defined at:
  2185 ;;		line 118 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/system.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;		None               void
  2192 ;; Registers used:
  2193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2199 ;;      Params:         0       0       0       0
  2200 ;;      Locals:         0       0       0       0
  2201 ;;      Temps:          0       1       0       0
  2202 ;;      Totals:         0       1       0       0
  2203 ;;Total ram usage:        1 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    3
  2206 ;; This function calls:
  2207 ;;		_Api_Led_Control
  2208 ;; This function is called by:
  2209 ;;		_main
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _System_Status_Indicator
  2215  06A3                     _System_Status_Indicator:	
  2216                           
  2217                           ;system.c: 120: if(Sys_u8_st_Globle_System_Status!=0)
  2218                           
  2219                           ;incstack = 0
  2220                           ; Regs used in _System_Status_Indicator: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2221  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  2222  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  2223  06A5  0840               	movf	_Sys_u8_st_Globle_System_Status,w
  2224  06A6  1903               	btfsc	3,2
  2225  06A7  2EB0               	goto	l2875
  2226                           
  2227                           ;system.c: 121: {
  2228                           ;system.c: 123: Api_Led_Control(0,2);
  2229  06A8  3002               	movlw	2
  2230  06A9  00D3               	movwf	??_System_Status_Indicator
  2231  06AA  0853               	movf	??_System_Status_Indicator,w
  2232  06AB  00F6               	movwf	Api_Led_Control@led_status
  2233  06AC  3000               	movlw	0
  2234  06AD  118A  26BA         	fcall	_Api_Led_Control
  2235                           
  2236                           ;system.c: 125: }
  2237  06AF  0008               	return
  2238  06B0                     l2875:	
  2239                           
  2240                           ;system.c: 126: else
  2241                           ;system.c: 127: {
  2242                           ;system.c: 128: Api_Led_Control(0,5);
  2243  06B0  3005               	movlw	5
  2244  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  2245  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  2246  06B3  00D3               	movwf	??_System_Status_Indicator
  2247  06B4  0853               	movf	??_System_Status_Indicator,w
  2248  06B5  00F6               	movwf	Api_Led_Control@led_status
  2249  06B6  3000               	movlw	0
  2250  06B7  118A  26BA         	fcall	_Api_Led_Control
  2251  06B9  0008               	return
  2252  06BA                     __end_of_System_Status_Indicator:	
  2253                           
  2254                           	psect	text3
  2255  0062                     __ptext3:	
  2256 ;; *************** function _Api_Uart_Read_Rx *****************
  2257 ;; Defined at:
  2258 ;;		line 94 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/uart.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;		None               void
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2272 ;;      Params:         0       0       0       0
  2273 ;;      Locals:         0       0       0       0
  2274 ;;      Temps:          1       0       0       0
  2275 ;;      Totals:         1       0       0       0
  2276 ;;Total ram usage:        1 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    2
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _Api_Uart_Read_Rx
  2288  0062                     _Api_Uart_Read_Rx:	
  2289                           
  2290                           ;uart.c: 97: if(Uart_Net_Mgr.Uart_Rx.com_status==3)
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _Api_Uart_Read_Rx: [wreg]
  2294  0062  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0063  1303               	bcf	3,6	;RP1=0, select bank1
  2296  0064  083E               	movf	_Uart_Net_Mgr^(0+128),w
  2297  0065  3A03               	xorlw	3
  2298  0066  1D03               	skipz
  2299  0067  0008               	return
  2300                           
  2301                           ;uart.c: 98: {
  2302                           ;uart.c: 112: Uart_Net_Mgr.Uart_Rx.rx_data_ptr= &Uart_Net_Mgr.Uart_Rx.RX_DATA[0];
  2303  0068  30C1               	movlw	(_Uart_Net_Mgr+3)& (0+255)
  2304  0069  00F6               	movwf	??_Api_Uart_Read_Rx
  2305  006A  0876               	movf	??_Api_Uart_Read_Rx,w
  2306  006B  00C0               	movwf	(_Uart_Net_Mgr+2)^(0+128)
  2307                           
  2308                           ;uart.c: 113: Uart_Net_Mgr.Uart_Rx.com_status=4;
  2309  006C  3004               	movlw	4
  2310  006D  00F6               	movwf	??_Api_Uart_Read_Rx
  2311  006E  0876               	movf	??_Api_Uart_Read_Rx,w
  2312  006F  00BE               	movwf	_Uart_Net_Mgr^(0+128)
  2313  0070  0008               	return
  2314  0071                     __end_of_Api_Uart_Read_Rx:	
  2315                           
  2316                           	psect	text4
  2317  07EB                     __ptext4:	
  2318 ;; *************** function _Uart_Manager *****************
  2319 ;; Defined at:
  2320 ;;		line 78 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/uart.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;		None               void
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2334 ;;      Params:         0       0       0       0
  2335 ;;      Locals:         0       0       0       0
  2336 ;;      Temps:          1       0       0       0
  2337 ;;      Totals:         1       0       0       0
  2338 ;;Total ram usage:        1 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    2
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_main
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _Uart_Manager
  2350  07EB                     _Uart_Manager:	
  2351                           
  2352                           ;uart.c: 80: if( Uart_Net_Mgr.Uart_Rx.rx_period<=Uart_Net_Mgr.Uart_Rx.rx_period_max)
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _Uart_Manager: [wreg+status,2+status,0]
  2356  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  2357  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  2358  07ED  083F               	movf	(_Uart_Net_Mgr^(0+128)+1),w
  2359  07EE  0249               	subwf	(_Uart_Net_Mgr^(0+128)+11),w
  2360  07EF  1C03               	skipc
  2361  07F0  2FF7               	goto	l2881
  2362                           
  2363                           ;uart.c: 81: {
  2364                           ;uart.c: 82: Uart_Net_Mgr.Uart_Rx.rx_period=Uart_Net_Mgr.Uart_Rx.rx_period+1;
  2365  07F1  083F               	movf	(_Uart_Net_Mgr^(0+128)+1),w
  2366  07F2  3E01               	addlw	1
  2367  07F3  00F6               	movwf	??_Uart_Manager
  2368  07F4  0876               	movf	??_Uart_Manager,w
  2369  07F5  00BF               	movwf	(_Uart_Net_Mgr^(0+128)+1)
  2370                           
  2371                           ;uart.c: 83: }
  2372  07F6  0008               	return
  2373  07F7                     l2881:	
  2374                           
  2375                           ;uart.c: 84: else
  2376                           ;uart.c: 85: {
  2377                           ;uart.c: 86: if(Uart_Net_Mgr.Uart_Rx.com_status==2)
  2378  07F7  083E               	movf	_Uart_Net_Mgr^(0+128),w
  2379  07F8  3A02               	xorlw	2
  2380  07F9  1D03               	skipz
  2381  07FA  0008               	return
  2382                           
  2383                           ;uart.c: 87: {
  2384                           ;uart.c: 88: Uart_Net_Mgr.Uart_Rx.com_status=3;
  2385  07FB  3003               	movlw	3
  2386  07FC  00F6               	movwf	??_Uart_Manager
  2387  07FD  0876               	movf	??_Uart_Manager,w
  2388  07FE  00BE               	movwf	_Uart_Net_Mgr^(0+128)
  2389  07FF  0008               	return
  2390  0800                     __end_of_Uart_Manager:	
  2391                           
  2392                           	psect	text5
  2393  04F5                     __ptext5:	
  2394 ;; *************** function _Eep_Manager *****************
  2395 ;; Defined at:
  2396 ;;		line 48 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/eep.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  temp_data       1    7[COMMON] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;		None               void
  2403 ;; Registers used:
  2404 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2410 ;;      Params:         0       0       0       0
  2411 ;;      Locals:         1       0       0       0
  2412 ;;      Temps:          1       0       0       0
  2413 ;;      Totals:         2       0       0       0
  2414 ;;Total ram usage:        2 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    2
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _Eep_Manager
  2426  04F5                     _Eep_Manager:	
  2427                           
  2428                           ;eep.c: 50: _UBYTE temp_data;
  2429                           ;eep.c: 52: switch(Eep_Mgr.State)
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in _Eep_Manager: [wreg-fsr0h+status,2+status,0]
  2433  04F5  2D30               	goto	l2695
  2434  04F6                     l2671:	
  2435                           ;eep.c: 53: {
  2436                           ;eep.c: 54: case 1:
  2437                           
  2438                           
  2439                           ;eep.c: 55: EEADR=Eep_Mgr.Index;
  2440  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2441  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2442  04F8  082F               	movf	_Eep_Mgr+1,w
  2443  04F9  1283               	bcf	3,5	;RP0=0, select bank2
  2444  04FA  1703               	bsf	3,6	;RP1=1, select bank2
  2445  04FB  008D               	movwf	13	;volatile
  2446                           
  2447                           ;eep.c: 56: RD=1;
  2448  04FC  1683               	bsf	3,5	;RP0=1, select bank3
  2449  04FD  1703               	bsf	3,6	;RP1=1, select bank3
  2450  04FE  140C               	bsf	12,0	;volsfr
  2451                           
  2452                           ;eep.c: 57: temp_data=EEDAT;
  2453  04FF  1283               	bcf	3,5	;RP0=0, select bank2
  2454  0500  1703               	bsf	3,6	;RP1=1, select bank2
  2455  0501  080C               	movf	12,w	;volatile
  2456  0502  00F6               	movwf	??_Eep_Manager
  2457  0503  0876               	movf	??_Eep_Manager,w
  2458  0504  00F7               	movwf	Eep_Manager@temp_data
  2459                           
  2460                           ;eep.c: 58: if(temp_data!=Eep_Mgr.Eep_Data)
  2461  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0507  0830               	movf	_Eep_Mgr+2,w
  2464  0508  0677               	xorwf	Eep_Manager@temp_data,w
  2465  0509  1903               	skipnz
  2466  050A  2D10               	goto	l2677
  2467                           
  2468                           ;eep.c: 59: {
  2469                           ;eep.c: 60: Eep_Mgr.State=2;
  2470  050B  3002               	movlw	2
  2471  050C  00F6               	movwf	??_Eep_Manager
  2472  050D  0876               	movf	??_Eep_Manager,w
  2473  050E  00AE               	movwf	_Eep_Mgr
  2474                           
  2475                           ;eep.c: 61: }
  2476  050F  0008               	return
  2477  0510                     l2677:	
  2478                           
  2479                           ;eep.c: 62: else
  2480                           ;eep.c: 63: {
  2481                           ;eep.c: 64: Eep_Mgr.State=0;
  2482  0510  01AE               	clrf	_Eep_Mgr
  2483                           
  2484                           ;eep.c: 65: }
  2485                           ;eep.c: 66: break;
  2486  0511  0008               	return
  2487  0512                     l2679:	
  2488                           ;eep.c: 67: case 2:
  2489                           
  2490                           
  2491                           ;eep.c: 68: EEADR=Eep_Mgr.Index;
  2492  0512  082F               	movf	_Eep_Mgr+1,w
  2493  0513  1283               	bcf	3,5	;RP0=0, select bank2
  2494  0514  1703               	bsf	3,6	;RP1=1, select bank2
  2495  0515  008D               	movwf	13	;volatile
  2496                           
  2497                           ;eep.c: 69: EEDAT=Eep_Mgr.Eep_Data;
  2498  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0518  0830               	movf	_Eep_Mgr+2,w
  2501  0519  1283               	bcf	3,5	;RP0=0, select bank2
  2502  051A  1703               	bsf	3,6	;RP1=1, select bank2
  2503  051B  008C               	movwf	12	;volatile
  2504                           
  2505                           ;eep.c: 70: WREN=1;
  2506  051C  1683               	bsf	3,5	;RP0=1, select bank3
  2507  051D  1703               	bsf	3,6	;RP1=1, select bank3
  2508  051E  150C               	bsf	12,2	;volsfr
  2509                           
  2510                           ;eep.c: 71: EECON2=0x55;
  2511  051F  3055               	movlw	85
  2512  0520  008D               	movwf	13	;volsfr
  2513                           
  2514                           ;eep.c: 72: EECON2=0xAA;
  2515  0521  30AA               	movlw	170
  2516  0522  008D               	movwf	13	;volsfr
  2517                           
  2518                           ;eep.c: 73: WR=1;
  2519  0523  148C               	bsf	12,1	;volsfr
  2520                           
  2521                           ;eep.c: 74: WREN=0;
  2522  0524  110C               	bcf	12,2	;volsfr
  2523                           
  2524                           ;eep.c: 75: Eep_Mgr.State=3;
  2525  0525  3003               	movlw	3
  2526  0526  00F6               	movwf	??_Eep_Manager
  2527  0527  0876               	movf	??_Eep_Manager,w
  2528  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2530  052A  00AE               	movwf	_Eep_Mgr
  2531  052B                     l2687:	
  2532                           ;eep.c: 76: case 3:
  2533                           
  2534                           
  2535                           ;eep.c: 77: if(EEIF==0)
  2536  052B  1E0D               	btfss	13,4	;volatile
  2537  052C  0008               	return
  2538                           
  2539                           ;eep.c: 81: else
  2540                           ;eep.c: 82: {
  2541                           ;eep.c: 85: EEIF=0;
  2542                           
  2543                           ;eep.c: 78: {
  2544                           ;eep.c: 80: }
  2545  052D  120D               	bcf	13,4	;volatile
  2546                           
  2547                           ;eep.c: 86: Eep_Mgr.State=0;
  2548  052E  01AE               	clrf	_Eep_Mgr
  2549                           
  2550                           ;eep.c: 93: }
  2551                           
  2552                           ;eep.c: 91: break;
  2553                           
  2554                           ;eep.c: 90: default:
  2555                           
  2556                           ;eep.c: 87: }
  2557                           ;eep.c: 89: break;
  2558  052F  0008               	return
  2559  0530                     l2695:	
  2560  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0532  082E               	movf	_Eep_Mgr,w
  2563                           
  2564                           ; Switch size 1, requested type "space"
  2565                           ; Number of cases is 3, Range of values is 1 to 3
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; simple_byte           10     6 (average)
  2569                           ; direct_byte           16    10 (fixed)
  2570                           ; jumptable            263     9 (fixed)
  2571                           ;	Chosen strategy is simple_byte
  2572  0533  3A01               	xorlw	1	; case 1
  2573  0534  1903               	skipnz
  2574  0535  2CF6               	goto	l2671
  2575  0536  3A03               	xorlw	3	; case 2
  2576  0537  1903               	skipnz
  2577  0538  2D12               	goto	l2679
  2578  0539  3A01               	xorlw	1	; case 3
  2579  053A  1903               	skipnz
  2580  053B  2D2B               	goto	l2687
  2581  053C  2D3D               	goto	l268
  2582  053D                     l268:	
  2583  053D  0008               	return
  2584  053E                     __end_of_Eep_Manager:	
  2585                           
  2586                           	psect	text6
  2587  0396                     __ptext6:	
  2588 ;; *************** function _Switch_Manager *****************
  2589 ;; Defined at:
  2590 ;;		line 160 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  i               1    8[BANK0 ] unsigned char 
  2595 ;;  u8_st_temp_s    1    7[BANK0 ] unsigned char 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;		None               void
  2598 ;; Registers used:
  2599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2605 ;;      Params:         0       0       0       0
  2606 ;;      Locals:         0       2       0       0
  2607 ;;      Temps:          0       3       0       0
  2608 ;;      Totals:         0       5       0       0
  2609 ;;Total ram usage:        5 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    3
  2612 ;; This function calls:
  2613 ;;		_Dio_Read
  2614 ;; This function is called by:
  2615 ;;		_main
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           
  2620                           ;psect for function _Switch_Manager
  2621  0396                     _Switch_Manager:	
  2622                           
  2623                           ;dio.c: 162: _UBYTE u8_st_temp_switch_ststus;
  2624                           ;dio.c: 163: for(_UBYTE i=0;i<3;i++)
  2625                           
  2626                           ;incstack = 0
  2627                           ; Regs used in _Switch_Manager: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2628  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0398  01DA               	clrf	Switch_Manager@i
  2631  0399                     L2:	
  2632  0399  3003               	movlw	3
  2633  039A  025A               	subwf	Switch_Manager@i,w
  2634  039B  1803               	btfsc	3,0
  2635  039C  0008               	return
  2636                           
  2637                           ;dio.c: 164: {
  2638                           ;dio.c: 166: u8_st_temp_switch_ststus=Dio_Read(Switch_Matrix[i][0],Switch_Matrix[i][1]);
  2639  039D  1403               	setc
  2640  039E  0D5A               	rlf	Switch_Manager@i,w
  2641  039F  3E18               	addlw	low (_Switch_Matrix| (0+32768))
  2642  03A0  0084               	movwf	4
  2643  03A1  3087               	movlw	high (_Switch_Matrix| (0+32768))
  2644  03A2  1803               	skipnc
  2645  03A3  3E01               	addlw	1
  2646  03A4  00FF               	movwf	127
  2647  03A5  118A  2700  118A   	fcall	stringtab
  2648  03A8  00D6               	movwf	??_Switch_Manager
  2649  03A9  0856               	movf	??_Switch_Manager,w
  2650  03AA  00F6               	movwf	Dio_Read@pin_no
  2651  03AB  085A               	movf	Switch_Manager@i,w
  2652  03AC  00D7               	movwf	??_Switch_Manager+1
  2653  03AD  0757               	addwf	??_Switch_Manager+1,w
  2654  03AE  3E18               	addlw	low (_Switch_Matrix| (0+32768))
  2655  03AF  0084               	movwf	4
  2656  03B0  3087               	movlw	high (_Switch_Matrix| (0+32768))
  2657  03B1  1803               	skipnc
  2658  03B2  3E01               	addlw	1
  2659  03B3  00FF               	movwf	127
  2660  03B4  118A  2700  118A   	fcall	stringtab
  2661  03B7  118A  23F1  118A   	fcall	_Dio_Read
  2662  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2663  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2664  03BC  00D8               	movwf	??_Switch_Manager+2
  2665  03BD  0858               	movf	??_Switch_Manager+2,w
  2666  03BE  00D9               	movwf	Switch_Manager@u8_st_temp_switch_ststus
  2667                           
  2668                           ;dio.c: 168: if(u8_st_temp_switch_ststus==Dio.Switch_u8_st_Current_Status[i])
  2669  03BF  085A               	movf	Switch_Manager@i,w
  2670  03C0  3E49               	addlw	(_Dio+6)& (0+255)
  2671  03C1  0084               	movwf	4
  2672  03C2  1383               	bcf	3,7	;select IRP bank0
  2673  03C3  0800               	movf	0,w
  2674  03C4  0659               	xorwf	Switch_Manager@u8_st_temp_switch_ststus,w
  2675  03C5  1D03               	skipz
  2676  03C6  2BE1               	goto	l2663
  2677                           
  2678                           ;dio.c: 169: {
  2679                           ;dio.c: 171: if(Dio.Switch_u8_st_Deb_Count[i] == 3)
  2680  03C7  085A               	movf	Switch_Manager@i,w
  2681  03C8  3E4F               	addlw	(_Dio+12)& (0+255)
  2682  03C9  0084               	movwf	4
  2683  03CA  0800               	movf	0,w
  2684  03CB  3A03               	xorlw	3
  2685  03CC  1D03               	skipz
  2686  03CD  2BD9               	goto	l2661
  2687                           
  2688                           ;dio.c: 172: {
  2689                           ;dio.c: 173: Dio.Switch_u8_st_Stable_Status[i]=Dio.Switch_u8_st_Current_Status[i];
  2690  03CE  085A               	movf	Switch_Manager@i,w
  2691  03CF  3E49               	addlw	(_Dio+6)& (0+255)
  2692  03D0  0084               	movwf	4
  2693  03D1  0800               	movf	0,w
  2694  03D2  00D6               	movwf	??_Switch_Manager
  2695  03D3  085A               	movf	Switch_Manager@i,w
  2696  03D4  3E4C               	addlw	(_Dio+9)& (0+255)
  2697  03D5  0084               	movwf	4
  2698  03D6  0856               	movf	??_Switch_Manager,w
  2699  03D7  0080               	movwf	0
  2700  03D8  2BE1               	goto	l2663
  2701  03D9                     l2661:	
  2702                           ;dio.c: 175: }
  2703                           
  2704                           ;dio.c: 174: Dio.Switch_u8_st_Deb_Count[i]=0;
  2705                           
  2706                           
  2707                           ;dio.c: 176: else
  2708                           ;dio.c: 177: {
  2709                           ;dio.c: 178: Dio.Switch_u8_st_Deb_Count[i]++;
  2710  03D9  3001               	movlw	1
  2711  03DA  00D6               	movwf	??_Switch_Manager
  2712  03DB  085A               	movf	Switch_Manager@i,w
  2713  03DC  3E4F               	addlw	(_Dio+12)& (0+255)
  2714  03DD  0084               	movwf	4
  2715  03DE  0856               	movf	??_Switch_Manager,w
  2716  03DF  0780               	addwf	0,f
  2717                           
  2718                           ;dio.c: 179: }
  2719                           ;dio.c: 181: }
  2720  03E0  2BE5               	goto	l144
  2721  03E1                     l2663:	
  2722                           
  2723                           ;dio.c: 182: else
  2724                           ;dio.c: 183: {
  2725                           ;dio.c: 184: Dio.Switch_u8_st_Deb_Count[i]=0;
  2726  03E1  085A               	movf	Switch_Manager@i,w
  2727  03E2  3E4F               	addlw	(_Dio+12)& (0+255)
  2728  03E3  0084               	movwf	4
  2729  03E4  0180               	clrf	0
  2730  03E5                     l144:	
  2731                           
  2732                           ;dio.c: 185: }
  2733                           ;dio.c: 187: Dio.Switch_u8_st_Current_Status[i]=u8_st_temp_switch_ststus;
  2734  03E5  0859               	movf	Switch_Manager@u8_st_temp_switch_ststus,w
  2735  03E6  00D6               	movwf	??_Switch_Manager
  2736  03E7  085A               	movf	Switch_Manager@i,w
  2737  03E8  3E49               	addlw	(_Dio+6)& (0+255)
  2738  03E9  0084               	movwf	4
  2739  03EA  0856               	movf	??_Switch_Manager,w
  2740  03EB  0080               	movwf	0
  2741  03EC  3001               	movlw	1
  2742  03ED  00D6               	movwf	??_Switch_Manager
  2743  03EE  0856               	movf	??_Switch_Manager,w
  2744  03EF  07DA               	addwf	Switch_Manager@i,f
  2745  03F0  2B99               	goto	L2
  2746  03F1                     __end_of_Switch_Manager:	
  2747                           
  2748                           	psect	text7
  2749  011C                     __ptext7:	
  2750 ;; *************** function _Led_Manager *****************
  2751 ;; Defined at:
  2752 ;;		line 125 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  i               1   16[BANK0 ] unsigned char 
  2757 ;;  u8_temp_led     1   15[BANK0 ] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;		None               void
  2760 ;; Registers used:
  2761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2767 ;;      Params:         0       0       0       0
  2768 ;;      Locals:         0       2       0       0
  2769 ;;      Temps:          0       3       0       0
  2770 ;;      Totals:         0       5       0       0
  2771 ;;Total ram usage:        5 bytes
  2772 ;; Hardware stack levels used:    1
  2773 ;; Hardware stack levels required when called:    3
  2774 ;; This function calls:
  2775 ;;		_Dio_Read
  2776 ;;		_Dio_Write
  2777 ;; This function is called by:
  2778 ;;		_main
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           
  2783                           ;psect for function _Led_Manager
  2784  011C                     _Led_Manager:	
  2785                           
  2786                           ;dio.c: 127: _UBYTE u8_temp_led;
  2787                           ;dio.c: 128: for(_UBYTE i=0;i<3;i++)
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _Led_Manager: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2791  011C  1283               	bcf	3,5	;RP0=0, select bank0
  2792  011D  1303               	bcf	3,6	;RP1=0, select bank0
  2793  011E  01E2               	clrf	Led_Manager@i
  2794  011F                     L3:	
  2795  011F  3003               	movlw	3
  2796  0120  0262               	subwf	Led_Manager@i,w
  2797  0121  1803               	btfsc	3,0
  2798  0122  0008               	return
  2799                           
  2800                           ;dio.c: 129: {
  2801                           ;dio.c: 130: if(Dio.Led_u8_st_Led_Status[i]==0)
  2802  0123  0862               	movf	Led_Manager@i,w
  2803  0124  3E46               	addlw	(_Dio+3)& (0+255)
  2804  0125  0084               	movwf	4
  2805  0126  1383               	bcf	3,7	;select IRP bank0
  2806  0127  0880               	movf	0,f
  2807  0128  1D03               	skipz
  2808  0129  2949               	goto	l2631
  2809                           
  2810                           ;dio.c: 131: {
  2811                           ;dio.c: 133: Dio_Write(Led_Matrix[i][0],Led_Matrix[i][1],0);
  2812  012A  1403               	setc
  2813  012B  0D62               	rlf	Led_Manager@i,w
  2814  012C  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2815  012D  0084               	movwf	4
  2816  012E  3087               	movlw	high (_Led_Matrix| (0+32768))
  2817  012F  1803               	skipnc
  2818  0130  3E01               	addlw	1
  2819  0131  00FF               	movwf	127
  2820  0132  118A  2700  118A   	fcall	stringtab
  2821  0135  00DE               	movwf	??_Led_Manager
  2822  0136  085E               	movf	??_Led_Manager,w
  2823  0137  00F6               	movwf	Dio_Write@pin_no
  2824  0138  01F7               	clrf	Dio_Write@bit_value
  2825  0139  0862               	movf	Led_Manager@i,w
  2826  013A  00DF               	movwf	??_Led_Manager+1
  2827  013B  075F               	addwf	??_Led_Manager+1,w
  2828  013C  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2829  013D  0084               	movwf	4
  2830  013E  3087               	movlw	high (_Led_Matrix| (0+32768))
  2831  013F  1803               	skipnc
  2832  0140  3E01               	addlw	1
  2833  0141  00FF               	movwf	127
  2834  0142  118A  2700  118A   	fcall	stringtab
  2835  0145  118A  21DC  118A   	fcall	_Dio_Write
  2836                           
  2837                           ;dio.c: 135: }
  2838  0148  29D5               	goto	l2643
  2839  0149                     l2631:	
  2840                           
  2841                           ;dio.c: 136: else if(Dio.Led_u8_st_Led_Status[i]==255)
  2842  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2843  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2844  014B  0862               	movf	Led_Manager@i,w
  2845  014C  3E46               	addlw	(_Dio+3)& (0+255)
  2846  014D  0084               	movwf	4
  2847  014E  1383               	bcf	3,7	;select IRP bank0
  2848  014F  0800               	movf	0,w
  2849  0150  3AFF               	xorlw	255
  2850  0151  1D03               	skipz
  2851  0152  2973               	goto	l2635
  2852                           
  2853                           ;dio.c: 137: {
  2854                           ;dio.c: 139: Dio_Write(Led_Matrix[i][0],Led_Matrix[i][1],1);
  2855  0153  1403               	setc
  2856  0154  0D62               	rlf	Led_Manager@i,w
  2857  0155  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2858  0156  0084               	movwf	4
  2859  0157  3087               	movlw	high (_Led_Matrix| (0+32768))
  2860  0158  1803               	skipnc
  2861  0159  3E01               	addlw	1
  2862  015A  00FF               	movwf	127
  2863  015B  118A  2700  118A   	fcall	stringtab
  2864  015E  00DE               	movwf	??_Led_Manager
  2865  015F  085E               	movf	??_Led_Manager,w
  2866  0160  00F6               	movwf	Dio_Write@pin_no
  2867  0161  01F7               	clrf	Dio_Write@bit_value
  2868  0162  0AF7               	incf	Dio_Write@bit_value,f
  2869  0163  0862               	movf	Led_Manager@i,w
  2870  0164  00DF               	movwf	??_Led_Manager+1
  2871  0165  075F               	addwf	??_Led_Manager+1,w
  2872  0166  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2873  0167  0084               	movwf	4
  2874  0168  3087               	movlw	high (_Led_Matrix| (0+32768))
  2875  0169  1803               	skipnc
  2876  016A  3E01               	addlw	1
  2877  016B  00FF               	movwf	127
  2878  016C  118A  2700  118A   	fcall	stringtab
  2879  016F  118A  21DC  118A   	fcall	_Dio_Write
  2880                           
  2881                           ;dio.c: 141: }
  2882  0172  29D5               	goto	l2643
  2883  0173                     l2635:	
  2884                           
  2885                           ;dio.c: 142: else
  2886                           ;dio.c: 143: {
  2887                           ;dio.c: 144: if(Dio.Led_u8_st_Led_Status[i]==0)
  2888  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0175  0862               	movf	Led_Manager@i,w
  2891  0176  3E46               	addlw	(_Dio+3)& (0+255)
  2892  0177  0084               	movwf	4
  2893  0178  1383               	bcf	3,7	;select IRP bank0
  2894  0179  0880               	movf	0,f
  2895  017A  1D03               	skipz
  2896  017B  29D0               	goto	l2641
  2897                           
  2898                           ;dio.c: 145: {
  2899                           ;dio.c: 147: u8_temp_led=Dio_Read(Led_Matrix[i][0],Led_Matrix[i][1]);
  2900  017C  1403               	setc
  2901  017D  0D62               	rlf	Led_Manager@i,w
  2902  017E  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2903  017F  0084               	movwf	4
  2904  0180  3087               	movlw	high (_Led_Matrix| (0+32768))
  2905  0181  1803               	skipnc
  2906  0182  3E01               	addlw	1
  2907  0183  00FF               	movwf	127
  2908  0184  118A  2700  118A   	fcall	stringtab
  2909  0187  00DE               	movwf	??_Led_Manager
  2910  0188  085E               	movf	??_Led_Manager,w
  2911  0189  00F6               	movwf	Dio_Read@pin_no
  2912  018A  0862               	movf	Led_Manager@i,w
  2913  018B  00DF               	movwf	??_Led_Manager+1
  2914  018C  075F               	addwf	??_Led_Manager+1,w
  2915  018D  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2916  018E  0084               	movwf	4
  2917  018F  3087               	movlw	high (_Led_Matrix| (0+32768))
  2918  0190  1803               	skipnc
  2919  0191  3E01               	addlw	1
  2920  0192  00FF               	movwf	127
  2921  0193  118A  2700  118A   	fcall	stringtab
  2922  0196  118A  23F1  118A   	fcall	_Dio_Read
  2923  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2924  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2925  019B  00E0               	movwf	??_Led_Manager+2
  2926  019C  0860               	movf	??_Led_Manager+2,w
  2927  019D  00E1               	movwf	Led_Manager@u8_temp_led
  2928                           
  2929                           ;dio.c: 148: Dio_Write(Led_Matrix[i][0],Led_Matrix[i][1],(!u8_temp_led));
  2930  019E  1403               	setc
  2931  019F  0D62               	rlf	Led_Manager@i,w
  2932  01A0  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2933  01A1  0084               	movwf	4
  2934  01A2  3087               	movlw	high (_Led_Matrix| (0+32768))
  2935  01A3  1803               	skipnc
  2936  01A4  3E01               	addlw	1
  2937  01A5  00FF               	movwf	127
  2938  01A6  118A  2700  118A   	fcall	stringtab
  2939  01A9  00DE               	movwf	??_Led_Manager
  2940  01AA  085E               	movf	??_Led_Manager,w
  2941  01AB  00F6               	movwf	Dio_Write@pin_no
  2942  01AC  08E1               	movf	Led_Manager@u8_temp_led,f
  2943  01AD  3000               	movlw	0
  2944  01AE  1903               	skipnz
  2945  01AF  3001               	movlw	1
  2946  01B0  00DF               	movwf	??_Led_Manager+1
  2947  01B1  085F               	movf	??_Led_Manager+1,w
  2948  01B2  00F7               	movwf	Dio_Write@bit_value
  2949  01B3  0862               	movf	Led_Manager@i,w
  2950  01B4  00E0               	movwf	??_Led_Manager+2
  2951  01B5  0760               	addwf	??_Led_Manager+2,w
  2952  01B6  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2953  01B7  0084               	movwf	4
  2954  01B8  3087               	movlw	high (_Led_Matrix| (0+32768))
  2955  01B9  1803               	skipnc
  2956  01BA  3E01               	addlw	1
  2957  01BB  00FF               	movwf	127
  2958  01BC  118A  2700  118A   	fcall	stringtab
  2959  01BF  118A  21DC  118A   	fcall	_Dio_Write
  2960                           
  2961                           ;dio.c: 149: Dio.Led_u8_st_Led_Status[i]=Dio.Led_u8_st_Led_Status_Comp[i];
  2962  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2963  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2964  01C4  0862               	movf	Led_Manager@i,w
  2965  01C5  3E43               	addlw	_Dio& (0+255)
  2966  01C6  0084               	movwf	4
  2967  01C7  1383               	bcf	3,7	;select IRP bank0
  2968  01C8  0800               	movf	0,w
  2969  01C9  00DE               	movwf	??_Led_Manager
  2970  01CA  0862               	movf	Led_Manager@i,w
  2971  01CB  3E46               	addlw	(_Dio+3)& (0+255)
  2972  01CC  0084               	movwf	4
  2973  01CD  085E               	movf	??_Led_Manager,w
  2974  01CE  0080               	movwf	0
  2975                           
  2976                           ;dio.c: 150: }
  2977  01CF  29D5               	goto	l2643
  2978  01D0                     l2641:	
  2979                           
  2980                           ;dio.c: 151: else
  2981                           ;dio.c: 152: {
  2982                           ;dio.c: 153: Dio.Led_u8_st_Led_Status[i]--;
  2983  01D0  0862               	movf	Led_Manager@i,w
  2984  01D1  3E46               	addlw	(_Dio+3)& (0+255)
  2985  01D2  0084               	movwf	4
  2986  01D3  3001               	movlw	1
  2987  01D4  0280               	subwf	0,f
  2988  01D5                     l2643:	
  2989  01D5  3001               	movlw	1
  2990  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2991  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2992  01D8  00DE               	movwf	??_Led_Manager
  2993  01D9  085E               	movf	??_Led_Manager,w
  2994  01DA  07E2               	addwf	Led_Manager@i,f
  2995  01DB  291F               	goto	L3
  2996  01DC                     __end_of_Led_Manager:	
  2997                           
  2998                           	psect	text8
  2999  05C9                     __ptext8:	
  3000 ;; *************** function _adc_updator *****************
  3001 ;; Defined at:
  3002 ;;		line 76 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/adc.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  temp_data       2    0[BANK0 ] unsigned int 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;		None               void
  3009 ;; Registers used:
  3010 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3016 ;;      Params:         0       0       0       0
  3017 ;;      Locals:         0       2       0       0
  3018 ;;      Temps:          1       0       0       0
  3019 ;;      Totals:         1       2       0       0
  3020 ;;Total ram usage:        3 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    2
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function _adc_updator
  3032  05C9                     _adc_updator:	
  3033                           
  3034                           ;adc.c: 78: static _UBYTE adc_no;
  3035                           ;adc.c: 79: _UINT16 temp_data;
  3036                           ;adc.c: 80: if(GO==0)
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in _adc_updator: [wreg-fsr0h+status,2+status,0]
  3040  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3041  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  3042  05CB  189F               	btfsc	31,1	;volatile
  3043  05CC  0008               	return
  3044                           
  3045                           ;adc.c: 81: {
  3046                           ;adc.c: 82: temp_data=((((_UINT16)ADRESH)<<8)|(_UINT16)ADRESL);
  3047  05CD  081E               	movf	30,w	;volatile
  3048  05CE  01D3               	clrf	adc_updator@temp_data+1
  3049  05CF  07D3               	addwf	adc_updator@temp_data+1,f
  3050  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  3051  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  3052  05D2  081E               	movf	30,w	;volatile
  3053  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3054  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3055  05D5  01D2               	clrf	adc_updator@temp_data
  3056  05D6  07D2               	addwf	adc_updator@temp_data,f
  3057                           
  3058                           ;adc.c: 83: switch(adc_no)
  3059  05D7  2DEC               	goto	l2619
  3060  05D8                     l60:	
  3061                           ;adc.c: 84: {
  3062                           ;adc.c: 85: case 0 :
  3063                           
  3064                           
  3065                           ;adc.c: 95: adc_no=1;
  3066  05D8  01C2               	clrf	adc_updator@adc_no
  3067  05D9  0AC2               	incf	adc_updator@adc_no,f
  3068                           
  3069                           ;adc.c: 96: break;
  3070  05DA  2DFA               	goto	l61
  3071  05DB                     l2607:	
  3072                           ;adc.c: 97: case 1:
  3073                           
  3074                           
  3075                           ;adc.c: 107: adc_no=2;break;
  3076  05DB  3002               	movlw	2
  3077  05DC  2DE0               	goto	L4
  3078  05DD                     l63:	
  3079                           ;adc.c: 108: case 2:
  3080                           
  3081                           
  3082                           ;adc.c: 115: CHS0=1;
  3083  05DD  151F               	bsf	31,2	;volatile
  3084                           
  3085                           ;adc.c: 116: CHS1=1;
  3086  05DE  159F               	bsf	31,3	;volatile
  3087                           
  3088                           ;adc.c: 118: adc_no=3;break;
  3089  05DF  3003               	movlw	3
  3090  05E0                     L4:	
  3091  05E0  00F6               	movwf	??_adc_updator
  3092  05E1  0876               	movf	??_adc_updator,w
  3093  05E2  00C2               	movwf	adc_updator@adc_no
  3094  05E3  2DFA               	goto	l61
  3095  05E4                     l2611:	
  3096                           ;adc.c: 119: case 3:
  3097                           
  3098                           
  3099                           ;adc.c: 122: adc_chn3_data=temp_data;
  3100  05E4  0853               	movf	adc_updator@temp_data+1,w
  3101  05E5  01BB               	clrf	_adc_chn3_data+1
  3102  05E6  07BB               	addwf	_adc_chn3_data+1,f
  3103  05E7  0852               	movf	adc_updator@temp_data,w
  3104  05E8  01BA               	clrf	_adc_chn3_data
  3105  05E9  07BA               	addwf	_adc_chn3_data,f
  3106  05EA                     l2615:	
  3107                           ;adc.c: 130: default:
  3108                           
  3109                           ;adc.c: 129: adc_no=0;break;
  3110                           
  3111                           
  3112                           ;adc.c: 135: adc_no=0;break;
  3113  05EA  01C2               	clrf	adc_updator@adc_no
  3114                           
  3115                           ;adc.c: 136: }
  3116  05EB  2DFA               	goto	l61
  3117  05EC                     l2619:	
  3118  05EC  0842               	movf	adc_updator@adc_no,w
  3119                           
  3120                           ; Switch size 1, requested type "space"
  3121                           ; Number of cases is 4, Range of values is 0 to 3
  3122                           ; switch strategies available:
  3123                           ; Name         Instructions Cycles
  3124                           ; simple_byte           13     7 (average)
  3125                           ; direct_byte           15     7 (fixed)
  3126                           ; jumptable            260     6 (fixed)
  3127                           ;	Chosen strategy is simple_byte
  3128  05ED  3A00               	xorlw	0	; case 0
  3129  05EE  1903               	skipnz
  3130  05EF  2DD8               	goto	l60
  3131  05F0  3A01               	xorlw	1	; case 1
  3132  05F1  1903               	skipnz
  3133  05F2  2DDB               	goto	l2607
  3134  05F3  3A03               	xorlw	3	; case 2
  3135  05F4  1903               	skipnz
  3136  05F5  2DDD               	goto	l63
  3137  05F6  3A01               	xorlw	1	; case 3
  3138  05F7  1903               	skipnz
  3139  05F8  2DE4               	goto	l2611
  3140  05F9  2DEA               	goto	l2615
  3141  05FA                     l61:	
  3142                           
  3143                           ;adc.c: 137: GO=1;
  3144  05FA  149F               	bsf	31,1	;volatile
  3145  05FB  0008               	return
  3146  05FC                     __end_of_adc_updator:	
  3147                           
  3148                           	psect	text9
  3149  075E                     __ptext9:	
  3150 ;; *************** function _usege_timer *****************
  3151 ;; Defined at:
  3152 ;;		line 289 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;		None               void
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3166 ;;      Params:         0       0       0       0
  3167 ;;      Locals:         0       0       0       0
  3168 ;;      Temps:          1       0       0       0
  3169 ;;      Totals:         1       0       0       0
  3170 ;;Total ram usage:        1 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    2
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function _usege_timer
  3182  075E                     _usege_timer:	
  3183                           
  3184                           ;eep.c: 292: static _UBYTE usage_time_res_count=0;
  3185                           ;eep.c: 293: if(start_stop_tmr_val)
  3186                           
  3187                           ;incstack = 0
  3188                           ; Regs used in _usege_timer: [wreg+status,2+status,0]
  3189  075E  087C               	movf	_start_stop_tmr_val,w
  3190  075F  1903               	btfsc	3,2
  3191  0760  0008               	return
  3192                           
  3193                           ;eep.c: 294: {
  3194                           ;eep.c: 295: if(usage_time_res_count>=10)
  3195  0761  300A               	movlw	10
  3196  0762  027D               	subwf	usege_timer@usage_time_res_count,w
  3197  0763  1C03               	skipc
  3198  0764  2F83               	goto	l2773
  3199                           
  3200                           ;eep.c: 296: {
  3201                           ;eep.c: 297: usage_time_res_count=0;
  3202  0765  01FD               	clrf	usege_timer@usage_time_res_count
  3203                           
  3204                           ;eep.c: 298: if(maintainace_status==0)
  3205  0766  08FB               	movf	_maintainace_status,f
  3206  0767  1D03               	skipz
  3207  0768  2F83               	goto	l2773
  3208                           
  3209                           ;eep.c: 299: {
  3210                           ;eep.c: 300: if(usage_time<0xFFFF)
  3211  0769  30FF               	movlw	255
  3212  076A  0679               	xorwf	_usage_time+1,w
  3213  076B  1D03               	skipz
  3214  076C  2F6F               	goto	u2105
  3215  076D  30FF               	movlw	255
  3216  076E  0678               	xorwf	_usage_time,w
  3217  076F                     u2105:	
  3218  076F  1903               	skipnz
  3219  0770  2F83               	goto	l2773
  3220                           
  3221                           ;eep.c: 301: {
  3222                           ;eep.c: 302: usage_time=usage_time+1;
  3223  0771  0878               	movf	_usage_time,w
  3224  0772  3E01               	addlw	1
  3225  0773  00F8               	movwf	_usage_time
  3226  0774  0879               	movf	_usage_time+1,w
  3227  0775  1803               	skipnc
  3228  0776  3E01               	addlw	1
  3229  0777  3E00               	addlw	0
  3230  0778  00F9               	movwf	_usage_time+1
  3231                           
  3232                           ;eep.c: 304: EEPRAM_SYSTEM_DATA[2]=(usage_time>>8);
  3233  0779  0879               	movf	_usage_time+1,w
  3234  077A  00F6               	movwf	??_usege_timer
  3235  077B  0876               	movf	??_usege_timer,w
  3236  077C  1283               	bcf	3,5	;RP0=0, select bank0
  3237  077D  1303               	bcf	3,6	;RP1=0, select bank0
  3238  077E  00AA               	movwf	_EEPRAM_SYSTEM_DATA+2
  3239                           
  3240                           ;eep.c: 306: EEPRAM_SYSTEM_DATA[1]=(usage_time&0x00FF);
  3241  077F  0878               	movf	_usage_time,w
  3242  0780  00F6               	movwf	??_usege_timer
  3243  0781  0876               	movf	??_usege_timer,w
  3244  0782  00A9               	movwf	_EEPRAM_SYSTEM_DATA+1
  3245  0783                     l2773:	
  3246                           ;eep.c: 309: else
  3247                           ;eep.c: 310: {
  3248                           
  3249                           ;eep.c: 307: }
  3250                           ;eep.c: 308: }
  3251                           
  3252                           
  3253                           ;eep.c: 313: }
  3254                           ;eep.c: 314: }
  3255                           ;eep.c: 315: usage_time_res_count=usage_time_res_count+1;
  3256  0783  087D               	movf	usege_timer@usage_time_res_count,w
  3257  0784  3E01               	addlw	1
  3258  0785  00F6               	movwf	??_usege_timer
  3259  0786  0876               	movf	??_usege_timer,w
  3260  0787  00FD               	movwf	usege_timer@usage_time_res_count
  3261  0788  0008               	return
  3262  0789                     __end_of_usege_timer:	
  3263                           
  3264                           	psect	text10
  3265  06BA                     __ptext10:	
  3266 ;; *************** function _Api_Led_Control *****************
  3267 ;; Defined at:
  3268 ;;		line 115 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  led_no          1    wreg     unsigned char 
  3271 ;;  led_status      1    6[COMMON] unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  led_no          1    0[BANK0 ] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;		None               void
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3283 ;;      Params:         1       0       0       0
  3284 ;;      Locals:         0       1       0       0
  3285 ;;      Temps:          1       0       0       0
  3286 ;;      Totals:         2       1       0       0
  3287 ;;Total ram usage:        3 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_System_Status_Indicator
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           
  3298                           ;psect for function _Api_Led_Control
  3299  06BA                     _Api_Led_Control:	
  3300                           
  3301                           ;incstack = 0
  3302                           ; Regs used in _Api_Led_Control: [wreg-fsr0h+status,2+status,0]
  3303                           ;Api_Led_Control@led_no stored from wreg
  3304  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3305  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3306  06BC  00D2               	movwf	Api_Led_Control@led_no
  3307                           
  3308                           ;dio.c: 117: if(led_no<3)
  3309  06BD  3003               	movlw	3
  3310  06BE  0252               	subwf	Api_Led_Control@led_no,w
  3311  06BF  1803               	skipnc
  3312  06C0  0008               	return
  3313                           
  3314                           ;dio.c: 118: {
  3315                           ;dio.c: 119: Dio.Led_u8_st_Led_Status_Comp[led_no]=led_status;
  3316  06C1  0876               	movf	Api_Led_Control@led_status,w
  3317  06C2  00F7               	movwf	??_Api_Led_Control
  3318  06C3  0852               	movf	Api_Led_Control@led_no,w
  3319  06C4  3E43               	addlw	_Dio& (0+255)
  3320  06C5  0084               	movwf	4
  3321  06C6  0877               	movf	??_Api_Led_Control,w
  3322  06C7  1383               	bcf	3,7	;select IRP bank0
  3323  06C8  0080               	movwf	0
  3324                           
  3325                           ;dio.c: 120: Dio.Led_u8_st_Led_Status[led_no]=led_status;
  3326  06C9  0876               	movf	Api_Led_Control@led_status,w
  3327  06CA  00F7               	movwf	??_Api_Led_Control
  3328  06CB  0852               	movf	Api_Led_Control@led_no,w
  3329  06CC  3E46               	addlw	(_Dio+3)& (0+255)
  3330  06CD  0084               	movwf	4
  3331  06CE  0877               	movf	??_Api_Led_Control,w
  3332  06CF  0080               	movwf	0
  3333  06D0  0008               	return
  3334  06D1                     __end_of_Api_Led_Control:	
  3335                           
  3336                           	psect	text11
  3337  01DC                     __ptext11:	
  3338 ;; *************** function _Dio_Write *****************
  3339 ;; Defined at:
  3340 ;;		line 238 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  port_no         1    wreg     unsigned char 
  3343 ;;  pin_no          1    6[COMMON] unsigned char 
  3344 ;;  bit_value       1    7[COMMON] unsigned char 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  port_no         1    5[BANK0 ] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;		None               void
  3349 ;; Registers used:
  3350 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3356 ;;      Params:         2       0       0       0
  3357 ;;      Locals:         0       7       0       0
  3358 ;;      Temps:          0       5       0       0
  3359 ;;      Totals:         2      12       0       0
  3360 ;;Total ram usage:       14 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    2
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_Led_Manager
  3367 ;; This function uses a non-reentrant model
  3368 ;;
  3369                           
  3370                           
  3371                           ;psect for function _Dio_Write
  3372  01DC                     _Dio_Write:	
  3373                           
  3374                           ;incstack = 0
  3375                           ; Regs used in _Dio_Write: [wreg-fsr0h+status,2+status,0]
  3376                           ;Dio_Write@port_no stored from wreg
  3377  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  3378  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  3379  01DE  00D7               	movwf	Dio_Write@port_no
  3380                           
  3381                           ;dio.c: 243: switch(port_no)
  3382  01DF  2A7C               	goto	l2547
  3383  01E0                     l2509:	
  3384                           ;dio.c: 244: {
  3385                           ;dio.c: 245: case 0: if(pin_no<8)
  3386                           
  3387  01E0  3008               	movlw	8
  3388  01E1  0276               	subwf	Dio_Write@pin_no,w
  3389  01E2  1803               	skipnc
  3390  01E3  2A11               	goto	l2519
  3391                           
  3392                           ;dio.c: 246: {
  3393                           ;dio.c: 247: PORTA=(bit_value?( PORTA | (0x01<<pin_no) ):(PORTA & (~(0x01<<pin_no))));
  3394  01E4  08F7               	movf	Dio_Write@bit_value,f
  3395  01E5  1D03               	skipz
  3396  01E6  29F9               	goto	l2515
  3397  01E7  3001               	movlw	1
  3398  01E8  00D2               	movwf	??_Dio_Write
  3399  01E9  0A76               	incf	Dio_Write@pin_no,w
  3400  01EA  29ED               	goto	u1744
  3401  01EB                     u1745:	
  3402  01EB  1003               	clrc
  3403  01EC  0DD2               	rlf	??_Dio_Write,f
  3404  01ED                     u1744:	
  3405  01ED  3EFF               	addlw	-1
  3406  01EE  1D03               	skipz
  3407  01EF  29EB               	goto	u1745
  3408  01F0  0852               	movf	??_Dio_Write,w
  3409  01F1  3AFF               	xorlw	255
  3410  01F2  0505               	andwf	5,w	;volatile
  3411  01F3  00D3               	movwf	??_Dio_Write+1
  3412  01F4  01D4               	clrf	??_Dio_Write+2
  3413  01F5  0853               	movf	??_Dio_Write+1,w
  3414  01F6  00D8               	movwf	_Dio_Write$120
  3415  01F7  0854               	movf	??_Dio_Write+2,w
  3416  01F8  2A0D               	goto	L5
  3417  01F9                     l2515:	
  3418  01F9  0A76               	incf	Dio_Write@pin_no,w
  3419  01FA  00D2               	movwf	??_Dio_Write
  3420  01FB  3001               	movlw	1
  3421  01FC  00D3               	movwf	??_Dio_Write+1
  3422  01FD  3000               	movlw	0
  3423  01FE  00D4               	movwf	??_Dio_Write+2
  3424  01FF  2A03               	goto	u1754
  3425  0200                     u1755:	
  3426  0200  1003               	clrc
  3427  0201  0DD3               	rlf	??_Dio_Write+1,f
  3428  0202  0DD4               	rlf	??_Dio_Write+2,f
  3429  0203                     u1754:	
  3430  0203  0BD2               	decfsz	??_Dio_Write,f
  3431  0204  2A00               	goto	u1755
  3432  0205  0853               	movf	??_Dio_Write+1,w
  3433  0206  0405               	iorwf	5,w	;volatile
  3434  0207  00D5               	movwf	??_Dio_Write+3
  3435  0208  0854               	movf	??_Dio_Write+2,w
  3436  0209  00D6               	movwf	??_Dio_Write+4
  3437  020A  0855               	movf	??_Dio_Write+3,w
  3438  020B  00D8               	movwf	_Dio_Write$120
  3439  020C  0856               	movf	??_Dio_Write+4,w
  3440  020D                     L5:	
  3441  020D  00D9               	movwf	_Dio_Write$120+1
  3442  020E  0858               	movf	_Dio_Write$120,w
  3443  020F  0085               	movwf	5	;volatile
  3444                           
  3445                           ;dio.c: 248: }
  3446  0210  0008               	return
  3447  0211                     l2519:	
  3448                           
  3449                           ;dio.c: 249: else
  3450                           ;dio.c: 250: {
  3451                           ;dio.c: 251: PORTA=pin_no;
  3452  0211  0876               	movf	Dio_Write@pin_no,w
  3453  0212  0085               	movwf	5	;volatile
  3454                           
  3455                           ;dio.c: 252: }
  3456                           ;dio.c: 253: break;
  3457  0213  0008               	return
  3458  0214                     l2521:	
  3459                           ;dio.c: 254: case 1: if(pin_no<8)
  3460                           
  3461  0214  3008               	movlw	8
  3462  0215  0276               	subwf	Dio_Write@pin_no,w
  3463  0216  1803               	skipnc
  3464  0217  2A45               	goto	l2531
  3465                           
  3466                           ;dio.c: 255: {
  3467                           ;dio.c: 256: PORTB=(bit_value?( PORTB | (0x01<<pin_no) ):(PORTB & (~(0x01<<pin_no))));
  3468  0218  08F7               	movf	Dio_Write@bit_value,f
  3469  0219  1D03               	skipz
  3470  021A  2A2D               	goto	l2527
  3471  021B  3001               	movlw	1
  3472  021C  00D2               	movwf	??_Dio_Write
  3473  021D  0A76               	incf	Dio_Write@pin_no,w
  3474  021E  2A21               	goto	u1784
  3475  021F                     u1785:	
  3476  021F  1003               	clrc
  3477  0220  0DD2               	rlf	??_Dio_Write,f
  3478  0221                     u1784:	
  3479  0221  3EFF               	addlw	-1
  3480  0222  1D03               	skipz
  3481  0223  2A1F               	goto	u1785
  3482  0224  0852               	movf	??_Dio_Write,w
  3483  0225  3AFF               	xorlw	255
  3484  0226  0506               	andwf	6,w	;volatile
  3485  0227  00D3               	movwf	??_Dio_Write+1
  3486  0228  01D4               	clrf	??_Dio_Write+2
  3487  0229  0853               	movf	??_Dio_Write+1,w
  3488  022A  00DA               	movwf	_Dio_Write$121
  3489  022B  0854               	movf	??_Dio_Write+2,w
  3490  022C  2A41               	goto	L6
  3491  022D                     l2527:	
  3492  022D  0A76               	incf	Dio_Write@pin_no,w
  3493  022E  00D2               	movwf	??_Dio_Write
  3494  022F  3001               	movlw	1
  3495  0230  00D3               	movwf	??_Dio_Write+1
  3496  0231  3000               	movlw	0
  3497  0232  00D4               	movwf	??_Dio_Write+2
  3498  0233  2A37               	goto	u1794
  3499  0234                     u1795:	
  3500  0234  1003               	clrc
  3501  0235  0DD3               	rlf	??_Dio_Write+1,f
  3502  0236  0DD4               	rlf	??_Dio_Write+2,f
  3503  0237                     u1794:	
  3504  0237  0BD2               	decfsz	??_Dio_Write,f
  3505  0238  2A34               	goto	u1795
  3506  0239  0853               	movf	??_Dio_Write+1,w
  3507  023A  0406               	iorwf	6,w	;volatile
  3508  023B  00D5               	movwf	??_Dio_Write+3
  3509  023C  0854               	movf	??_Dio_Write+2,w
  3510  023D  00D6               	movwf	??_Dio_Write+4
  3511  023E  0855               	movf	??_Dio_Write+3,w
  3512  023F  00DA               	movwf	_Dio_Write$121
  3513  0240  0856               	movf	??_Dio_Write+4,w
  3514  0241                     L6:	
  3515  0241  00DB               	movwf	_Dio_Write$121+1
  3516  0242  085A               	movf	_Dio_Write$121,w
  3517  0243  0086               	movwf	6	;volatile
  3518                           
  3519                           ;dio.c: 257: }
  3520  0244  0008               	return
  3521  0245                     l2531:	
  3522                           
  3523                           ;dio.c: 258: else
  3524                           ;dio.c: 259: {
  3525                           ;dio.c: 260: PORTB=pin_no;
  3526  0245  0876               	movf	Dio_Write@pin_no,w
  3527  0246  0086               	movwf	6	;volatile
  3528                           
  3529                           ;dio.c: 261: }
  3530                           ;dio.c: 262: break;
  3531  0247  0008               	return
  3532  0248                     l2533:	
  3533                           ;dio.c: 263: case 2: if(pin_no<8)
  3534                           
  3535  0248  3008               	movlw	8
  3536  0249  0276               	subwf	Dio_Write@pin_no,w
  3537  024A  1803               	skipnc
  3538  024B  2A79               	goto	l2543
  3539                           
  3540                           ;dio.c: 264: {
  3541                           ;dio.c: 265: PORTC=(bit_value?( PORTC | (0x01<<pin_no) ):(PORTC & (~(0x01<<pin_no))));
  3542  024C  08F7               	movf	Dio_Write@bit_value,f
  3543  024D  1D03               	skipz
  3544  024E  2A61               	goto	l2539
  3545  024F  3001               	movlw	1
  3546  0250  00D2               	movwf	??_Dio_Write
  3547  0251  0A76               	incf	Dio_Write@pin_no,w
  3548  0252  2A55               	goto	u1824
  3549  0253                     u1825:	
  3550  0253  1003               	clrc
  3551  0254  0DD2               	rlf	??_Dio_Write,f
  3552  0255                     u1824:	
  3553  0255  3EFF               	addlw	-1
  3554  0256  1D03               	skipz
  3555  0257  2A53               	goto	u1825
  3556  0258  0852               	movf	??_Dio_Write,w
  3557  0259  3AFF               	xorlw	255
  3558  025A  0507               	andwf	7,w	;volatile
  3559  025B  00D3               	movwf	??_Dio_Write+1
  3560  025C  01D4               	clrf	??_Dio_Write+2
  3561  025D  0853               	movf	??_Dio_Write+1,w
  3562  025E  00DC               	movwf	_Dio_Write$122
  3563  025F  0854               	movf	??_Dio_Write+2,w
  3564  0260  2A75               	goto	L7
  3565  0261                     l2539:	
  3566  0261  0A76               	incf	Dio_Write@pin_no,w
  3567  0262  00D2               	movwf	??_Dio_Write
  3568  0263  3001               	movlw	1
  3569  0264  00D3               	movwf	??_Dio_Write+1
  3570  0265  3000               	movlw	0
  3571  0266  00D4               	movwf	??_Dio_Write+2
  3572  0267  2A6B               	goto	u1834
  3573  0268                     u1835:	
  3574  0268  1003               	clrc
  3575  0269  0DD3               	rlf	??_Dio_Write+1,f
  3576  026A  0DD4               	rlf	??_Dio_Write+2,f
  3577  026B                     u1834:	
  3578  026B  0BD2               	decfsz	??_Dio_Write,f
  3579  026C  2A68               	goto	u1835
  3580  026D  0853               	movf	??_Dio_Write+1,w
  3581  026E  0407               	iorwf	7,w	;volatile
  3582  026F  00D5               	movwf	??_Dio_Write+3
  3583  0270  0854               	movf	??_Dio_Write+2,w
  3584  0271  00D6               	movwf	??_Dio_Write+4
  3585  0272  0855               	movf	??_Dio_Write+3,w
  3586  0273  00DC               	movwf	_Dio_Write$122
  3587  0274  0856               	movf	??_Dio_Write+4,w
  3588  0275                     L7:	
  3589  0275  00DD               	movwf	_Dio_Write$122+1
  3590  0276  085C               	movf	_Dio_Write$122,w
  3591  0277  0087               	movwf	7	;volatile
  3592                           
  3593                           ;dio.c: 266: }
  3594  0278  0008               	return
  3595  0279                     l2543:	
  3596                           
  3597                           ;dio.c: 267: else
  3598                           ;dio.c: 268: {
  3599                           ;dio.c: 269: PORTC=pin_no;
  3600  0279  0876               	movf	Dio_Write@pin_no,w
  3601  027A  0087               	movwf	7	;volatile
  3602                           
  3603                           ;dio.c: 272: }
  3604                           
  3605                           ;dio.c: 270: }
  3606                           ;dio.c: 271: default : break;
  3607  027B  0008               	return
  3608  027C                     l2547:	
  3609  027C  0857               	movf	Dio_Write@port_no,w
  3610                           
  3611                           ; Switch size 1, requested type "space"
  3612                           ; Number of cases is 3, Range of values is 0 to 2
  3613                           ; switch strategies available:
  3614                           ; Name         Instructions Cycles
  3615                           ; simple_byte           10     6 (average)
  3616                           ; direct_byte           13     7 (fixed)
  3617                           ; jumptable            260     6 (fixed)
  3618                           ;	Chosen strategy is simple_byte
  3619  027D  3A00               	xorlw	0	; case 0
  3620  027E  1903               	skipnz
  3621  027F  29E0               	goto	l2509
  3622  0280  3A01               	xorlw	1	; case 1
  3623  0281  1903               	skipnz
  3624  0282  2A14               	goto	l2521
  3625  0283  3A03               	xorlw	3	; case 2
  3626  0284  1903               	skipnz
  3627  0285  2A48               	goto	l2533
  3628  0286  2A87               	goto	l192
  3629  0287                     l192:	
  3630  0287  0008               	return
  3631  0288                     __end_of_Dio_Write:	
  3632                           
  3633                           	psect	text12
  3634  03F1                     __ptext12:	
  3635 ;; *************** function _Dio_Read *****************
  3636 ;; Defined at:
  3637 ;;		line 203 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  port_no         1    wreg     unsigned char 
  3640 ;;  pin_no          1    6[COMMON] unsigned char 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  port_no         1    2[BANK0 ] unsigned char 
  3643 ;;  temp_port_da    1    3[BANK0 ] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      unsigned char 
  3646 ;; Registers used:
  3647 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3653 ;;      Params:         1       0       0       0
  3654 ;;      Locals:         0       2       0       0
  3655 ;;      Temps:          0       2       0       0
  3656 ;;      Totals:         1       4       0       0
  3657 ;;Total ram usage:        5 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:    2
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_Led_Manager
  3664 ;;		_Switch_Manager
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function _Dio_Read
  3670  03F1                     _Dio_Read:	
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _Dio_Read: [wreg-fsr0h+status,2+status,0]
  3674                           ;Dio_Read@port_no stored from wreg
  3675  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3676  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3677  03F3  00D4               	movwf	Dio_Read@port_no
  3678                           
  3679                           ;dio.c: 205: _UBYTE temp_port_data;
  3680                           ;dio.c: 206: switch(port_no)
  3681  03F4  2C3F               	goto	l2573
  3682  03F5                     l2551:	
  3683                           ;dio.c: 207: {
  3684                           ;dio.c: 208: case 0: if(pin_no<8)
  3685                           
  3686  03F5  3008               	movlw	8
  3687  03F6  0276               	subwf	Dio_Read@pin_no,w
  3688  03F7  1803               	skipnc
  3689  03F8  2C08               	goto	l2555
  3690                           
  3691                           ;dio.c: 209: {
  3692                           ;dio.c: 210: temp_port_data=((PORTA>>pin_no)&0x01);
  3693  03F9  0805               	movf	5,w	;volatile
  3694  03FA  00D2               	movwf	??_Dio_Read
  3695  03FB  0A76               	incf	Dio_Read@pin_no,w
  3696  03FC  2BFF               	goto	u1854
  3697  03FD                     u1855:	
  3698  03FD  1003               	clrc
  3699  03FE  0CD2               	rrf	??_Dio_Read,f
  3700  03FF                     u1854:	
  3701  03FF  3EFF               	addlw	-1
  3702  0400  1D03               	skipz
  3703  0401  2BFD               	goto	u1855
  3704  0402  0852               	movf	??_Dio_Read,w
  3705  0403  3901               	andlw	1
  3706  0404  00D3               	movwf	??_Dio_Read+1
  3707  0405  0853               	movf	??_Dio_Read+1,w
  3708  0406  00D5               	movwf	Dio_Read@temp_port_data
  3709                           
  3710                           ;dio.c: 211: }
  3711  0407  0008               	return
  3712  0408                     l2555:	
  3713                           
  3714                           ;dio.c: 212: else
  3715                           ;dio.c: 213: {
  3716                           ;dio.c: 214: temp_port_data= PORTA;
  3717  0408  0805               	movf	5,w	;volatile
  3718  0409  00D2               	movwf	??_Dio_Read
  3719  040A  0852               	movf	??_Dio_Read,w
  3720  040B  00D5               	movwf	Dio_Read@temp_port_data
  3721                           
  3722                           ;dio.c: 215: }
  3723                           ;dio.c: 216: break;
  3724  040C  0008               	return
  3725  040D                     l2557:	
  3726                           ;dio.c: 217: case 1: if(pin_no<8)
  3727                           
  3728  040D  3008               	movlw	8
  3729  040E  0276               	subwf	Dio_Read@pin_no,w
  3730  040F  1803               	skipnc
  3731  0410  2C20               	goto	l2561
  3732                           
  3733                           ;dio.c: 218: {
  3734                           ;dio.c: 219: temp_port_data=((PORTB>>pin_no)&0x01);
  3735  0411  0806               	movf	6,w	;volatile
  3736  0412  00D2               	movwf	??_Dio_Read
  3737  0413  0A76               	incf	Dio_Read@pin_no,w
  3738  0414  2C17               	goto	u1874
  3739  0415                     u1875:	
  3740  0415  1003               	clrc
  3741  0416  0CD2               	rrf	??_Dio_Read,f
  3742  0417                     u1874:	
  3743  0417  3EFF               	addlw	-1
  3744  0418  1D03               	skipz
  3745  0419  2C15               	goto	u1875
  3746  041A  0852               	movf	??_Dio_Read,w
  3747  041B  3901               	andlw	1
  3748  041C  00D3               	movwf	??_Dio_Read+1
  3749  041D  0853               	movf	??_Dio_Read+1,w
  3750  041E  00D5               	movwf	Dio_Read@temp_port_data
  3751                           
  3752                           ;dio.c: 220: }
  3753  041F  0008               	return
  3754  0420                     l2561:	
  3755                           
  3756                           ;dio.c: 221: else
  3757                           ;dio.c: 222: {
  3758                           ;dio.c: 223: temp_port_data= PORTB;
  3759  0420  0806               	movf	6,w	;volatile
  3760  0421  00D2               	movwf	??_Dio_Read
  3761  0422  0852               	movf	??_Dio_Read,w
  3762  0423  00D5               	movwf	Dio_Read@temp_port_data
  3763                           
  3764                           ;dio.c: 224: }
  3765                           ;dio.c: 225: break;
  3766  0424  0008               	return
  3767  0425                     l2563:	
  3768                           ;dio.c: 226: case 2: if(pin_no<8)
  3769                           
  3770  0425  3008               	movlw	8
  3771  0426  0276               	subwf	Dio_Read@pin_no,w
  3772  0427  1803               	skipnc
  3773  0428  2C38               	goto	l2567
  3774                           
  3775                           ;dio.c: 227: {
  3776                           ;dio.c: 228: temp_port_data=((PORTC>>pin_no)&0x01);
  3777  0429  0807               	movf	7,w	;volatile
  3778  042A  00D2               	movwf	??_Dio_Read
  3779  042B  0A76               	incf	Dio_Read@pin_no,w
  3780  042C  2C2F               	goto	u1894
  3781  042D                     u1895:	
  3782  042D  1003               	clrc
  3783  042E  0CD2               	rrf	??_Dio_Read,f
  3784  042F                     u1894:	
  3785  042F  3EFF               	addlw	-1
  3786  0430  1D03               	skipz
  3787  0431  2C2D               	goto	u1895
  3788  0432  0852               	movf	??_Dio_Read,w
  3789  0433  3901               	andlw	1
  3790  0434  00D3               	movwf	??_Dio_Read+1
  3791  0435  0853               	movf	??_Dio_Read+1,w
  3792  0436  00D5               	movwf	Dio_Read@temp_port_data
  3793                           
  3794                           ;dio.c: 229: }
  3795  0437  0008               	return
  3796  0438                     l2567:	
  3797                           
  3798                           ;dio.c: 230: else
  3799                           ;dio.c: 231: {
  3800                           ;dio.c: 232: temp_port_data= PORTC;
  3801  0438  0807               	movf	7,w	;volatile
  3802  0439  00D2               	movwf	??_Dio_Read
  3803  043A  0852               	movf	??_Dio_Read,w
  3804  043B  00D5               	movwf	Dio_Read@temp_port_data
  3805                           
  3806                           ;dio.c: 233: }
  3807                           ;dio.c: 234: break;
  3808  043C  0008               	return
  3809  043D                     l2569:	
  3810                           ;dio.c: 235: default : temp_port_data=0x00;break;
  3811                           
  3812  043D  01D5               	clrf	Dio_Read@temp_port_data
  3813                           
  3814                           ;dio.c: 236: }
  3815  043E  0008               	return
  3816  043F                     l2573:	
  3817  043F  0854               	movf	Dio_Read@port_no,w
  3818                           
  3819                           ; Switch size 1, requested type "space"
  3820                           ; Number of cases is 3, Range of values is 0 to 2
  3821                           ; switch strategies available:
  3822                           ; Name         Instructions Cycles
  3823                           ; simple_byte           10     6 (average)
  3824                           ; direct_byte           13     7 (fixed)
  3825                           ; jumptable            260     6 (fixed)
  3826                           ;	Chosen strategy is simple_byte
  3827  0440  3A00               	xorlw	0	; case 0
  3828  0441  1903               	skipnz
  3829  0442  2BF5               	goto	l2551
  3830  0443  3A01               	xorlw	1	; case 1
  3831  0444  1903               	skipnz
  3832  0445  2C0D               	goto	l2557
  3833  0446  3A03               	xorlw	3	; case 2
  3834  0447  1903               	skipnz
  3835  0448  2C25               	goto	l2563
  3836  0449  2C3D               	goto	l2569
  3837  044A  0008               	return
  3838  044B                     __end_of_Dio_Read:	
  3839                           
  3840                           	psect	text13
  3841  07AD                     __ptext13:	
  3842 ;; *************** function _Kernel_vRunContainer *****************
  3843 ;; Defined at:
  3844 ;;		line 146 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/os.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  afpContainer    2   12[BANK0 ] PTR const PTR FTN()void 
  3847 ;;		 -> Kernel_vHWReset(3), 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;		None
  3850 ;; Return value:  Size  Location     Type
  3851 ;;		None               void
  3852 ;; Registers used:
  3853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3859 ;;      Params:         0       2       0       0
  3860 ;;      Locals:         0       0       0       0
  3861 ;;      Temps:          0       0       0       0
  3862 ;;      Totals:         0       2       0       0
  3863 ;;Total ram usage:        2 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    6
  3866 ;; This function calls:
  3867 ;;		Absolute function
  3868 ;;		_Systm_Ini_Proc_1
  3869 ;;		_Systm_Ini_Proc_2
  3870 ;; This function is called by:
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _Kernel_vRunContainer
  3877  07AD                     _Kernel_vRunContainer:	
  3878  07AD                     l2781:	
  3879                           ;os.c: 149: while (*afpContainerArray != 0)
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _Kernel_vRunContainer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3883                           
  3884  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  3885  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  3886  07AF  085F               	movf	Kernel_vRunContainer@afpContainerArray+1,w
  3887  07B0  00FF               	movwf	127
  3888  07B1  085E               	movf	Kernel_vRunContainer@afpContainerArray,w
  3889  07B2  0084               	movwf	4
  3890  07B3  118A  2700  118A   	fcall	stringtab
  3891  07B6  3800               	iorlw	0
  3892  07B7  1903               	btfsc	3,2
  3893  07B8  0008               	return
  3894                           
  3895                           ;os.c: 150: {
  3896                           ;os.c: 151: (*afpContainerArray)();
  3897  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3898  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3899  07BB  085F               	movf	Kernel_vRunContainer@afpContainerArray+1,w
  3900  07BC  00FF               	movwf	127
  3901  07BD  085E               	movf	Kernel_vRunContainer@afpContainerArray,w
  3902  07BE  0084               	movwf	4
  3903  07BF  118A  2700  118A   	fcall	stringtab
  3904  07C2  118A  2100  118A   	fcall	fptable
  3905                           
  3906                           ;os.c: 152: afpContainerArray++ ;
  3907  07C5  3001               	movlw	1
  3908  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3909  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3910  07C8  07DE               	addwf	Kernel_vRunContainer@afpContainerArray,f
  3911  07C9  1803               	skipnc
  3912  07CA  0ADF               	incf	Kernel_vRunContainer@afpContainerArray+1,f
  3913  07CB  2FAD               	goto	l2781
  3914  07CC                     __end_of_Kernel_vRunContainer:	
  3915                           
  3916                           	psect	text14
  3917  0789                     __ptext14:	
  3918 ;; *************** function _Systm_Ini_Proc_1 *****************
  3919 ;; Defined at:
  3920 ;;		line 72 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/system.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;		None               void
  3927 ;; Registers used:
  3928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3934 ;;      Params:         0       0       0       0
  3935 ;;      Locals:         0       0       0       0
  3936 ;;      Temps:          0       1       0       0
  3937 ;;      Totals:         0       1       0       0
  3938 ;;Total ram usage:        1 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    5
  3941 ;; This function calls:
  3942 ;;		_Adc_Ini
  3943 ;;		_Dio_Ini
  3944 ;;		_EEP_to_RAM
  3945 ;;		_Eep_Ini
  3946 ;;		_Os_Ini
  3947 ;;		_Pwm_Ini
  3948 ;;		_Uart_Ini
  3949 ;;		_usage_time_ini
  3950 ;; This function is called by:
  3951 ;;		_Kernel_vRunContainer
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _Systm_Ini_Proc_1
  3957  0789                     _Systm_Ini_Proc_1:	
  3958                           
  3959                           ;system.c: 75: OSCCON |= 0b01110001;
  3960                           
  3961                           ;incstack = 0
  3962                           ; Regs used in _Systm_Ini_Proc_1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3963  0789  3071               	movlw	113
  3964  078A  1283               	bcf	3,5	;RP0=0, select bank0
  3965  078B  1303               	bcf	3,6	;RP1=0, select bank0
  3966  078C  00DD               	movwf	??_Systm_Ini_Proc_1
  3967  078D  085D               	movf	??_Systm_Ini_Proc_1,w
  3968  078E  1683               	bsf	3,5	;RP0=1, select bank1
  3969  078F  1303               	bcf	3,6	;RP1=0, select bank1
  3970  0790  048F               	iorwf	15,f	;volatile
  3971                           
  3972                           ;system.c: 76: GIE=0;
  3973  0791  138B               	bcf	11,7	;volatile
  3974  0792                     l685:	
  3975                           ;system.c: 77: while(!HTS);
  3976                           
  3977  0792  1D0F               	btfss	15,2	;volatile
  3978  0793  2F92               	goto	l685
  3979                           
  3980                           ;system.c: 79: Dio_Ini();
  3981  0794  118A  26D1  118A   	fcall	_Dio_Ini
  3982                           
  3983                           ;system.c: 84: Adc_Ini();
  3984  0797  118A  27CC  118A   	fcall	_Adc_Ini
  3985                           
  3986                           ;system.c: 87: Os_Ini();
  3987  079A  118A  266A  118A   	fcall	_Os_Ini
  3988                           
  3989                           ;system.c: 90: Uart_Ini();
  3990  079D  118A  26E6  118A   	fcall	_Uart_Ini
  3991                           
  3992                           ;system.c: 95: Pwm_Ini();
  3993  07A0  118A  264C  118A   	fcall	_Pwm_Ini
  3994                           
  3995                           ;system.c: 98: Eep_Ini();
  3996  07A3  118A  2090  118A   	fcall	_Eep_Ini
  3997                           
  3998                           ;system.c: 99: EEP_to_RAM(0);
  3999  07A6  3000               	movlw	0
  4000  07A7  118A  24A4  118A   	fcall	_EEP_to_RAM
  4001                           
  4002                           ;system.c: 100: usage_time_ini();
  4003  07AA  118A  2731         	fcall	_usage_time_ini
  4004  07AC  0008               	return
  4005  07AD                     __end_of_Systm_Ini_Proc_1:	
  4006                           
  4007                           	psect	text15
  4008  0088                     __ptext15:	
  4009 ;; *************** function _Systm_Ini_Proc_2 *****************
  4010 ;; Defined at:
  4011 ;;		line 113 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/system.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;		None               void
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4025 ;;      Params:         0       0       0       0
  4026 ;;      Locals:         0       0       0       0
  4027 ;;      Temps:          0       0       0       0
  4028 ;;      Totals:         0       0       0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    3
  4032 ;; This function calls:
  4033 ;;		_delay_ms
  4034 ;; This function is called by:
  4035 ;;		_Kernel_vRunContainer
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           
  4040                           ;psect for function _Systm_Ini_Proc_2
  4041  0088                     _Systm_Ini_Proc_2:	
  4042                           
  4043                           ;system.c: 115: delay_ms(100);
  4044                           
  4045                           ;incstack = 0
  4046                           ; Regs used in _Systm_Ini_Proc_2: [wreg+status,2+status,0+pclath+cstack]
  4047  0088  3064               	movlw	100
  4048  0089  00F6               	movwf	delay_ms@delay_count
  4049  008A  3000               	movlw	0
  4050  008B  00F7               	movwf	delay_ms@delay_count+1
  4051  008C  118A  2687         	fcall	_delay_ms
  4052                           
  4053                           ;system.c: 116: GIE=1;
  4054  008E  178B               	bsf	11,7	;volatile
  4055  008F  0008               	return
  4056  0090                     __end_of_Systm_Ini_Proc_2:	
  4057                           
  4058                           	psect	text16
  4059  0687                     __ptext16:	
  4060 ;; *************** function _delay_ms *****************
  4061 ;; Defined at:
  4062 ;;		line 220 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/sevlb.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  delay_count     2    6[COMMON] unsigned int 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  i               1    1[BANK0 ] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;		None               void
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4076 ;;      Params:         2       0       0       0
  4077 ;;      Locals:         0       1       0       0
  4078 ;;      Temps:          0       1       0       0
  4079 ;;      Totals:         2       2       0       0
  4080 ;;Total ram usage:        4 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    2
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_Systm_Ini_Proc_2
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function _delay_ms
  4092  0687                     _delay_ms:	
  4093  0687                     l2491:	
  4094                           ;sevlb.c: 222: _UBYTE i;
  4095                           ;sevlb.c: 223: while(delay_count)
  4096                           
  4097                           ;incstack = 0
  4098                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  4099                           
  4100  0687  0877               	movf	delay_ms@delay_count+1,w
  4101  0688  0476               	iorwf	delay_ms@delay_count,w
  4102  0689  1903               	btfsc	3,2
  4103  068A  0008               	return
  4104                           
  4105                           ;sevlb.c: 224: {
  4106                           ;sevlb.c: 225: for(i=0;i<224u;i++);
  4107  068B  1283               	bcf	3,5	;RP0=0, select bank0
  4108  068C  1303               	bcf	3,6	;RP1=0, select bank0
  4109  068D  01D3               	clrf	delay_ms@i
  4110  068E  30E0               	movlw	224
  4111  068F  0253               	subwf	delay_ms@i,w
  4112  0690  1803               	btfsc	3,0
  4113  0691  2E9A               	goto	l2489
  4114  0692                     l2485:	
  4115  0692  3001               	movlw	1
  4116  0693  00D2               	movwf	??_delay_ms
  4117  0694  0852               	movf	??_delay_ms,w
  4118  0695  07D3               	addwf	delay_ms@i,f
  4119  0696  30E0               	movlw	224
  4120  0697  0253               	subwf	delay_ms@i,w
  4121  0698  1C03               	skipc
  4122  0699  2E92               	goto	l2485
  4123  069A                     l2489:	
  4124                           
  4125                           ;sevlb.c: 227: delay_count=delay_count-1;
  4126  069A  0876               	movf	delay_ms@delay_count,w
  4127  069B  3EFF               	addlw	255
  4128  069C  00F6               	movwf	delay_ms@delay_count
  4129  069D  0877               	movf	delay_ms@delay_count+1,w
  4130  069E  1803               	skipnc
  4131  069F  3E01               	addlw	1
  4132  06A0  3EFF               	addlw	255
  4133  06A1  00F7               	movwf	delay_ms@delay_count+1
  4134  06A2  2E87               	goto	l2491
  4135  06A3                     __end_of_delay_ms:	
  4136                           
  4137                           	psect	text17
  4138  0731                     __ptext17:	
  4139 ;; *************** function _usage_time_ini *****************
  4140 ;; Defined at:
  4141 ;;		line 256 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  maint_time      2    6[COMMON] unsigned int 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;		None               void
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, btemp+1
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4155 ;;      Params:         0       0       0       0
  4156 ;;      Locals:         2       0       0       0
  4157 ;;      Temps:          0       4       0       0
  4158 ;;      Totals:         2       4       0       0
  4159 ;;Total ram usage:        6 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    2
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_Systm_Ini_Proc_1
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function _usage_time_ini
  4171  0731                     _usage_time_ini:	
  4172                           
  4173                           ;eep.c: 259: _UINT16 maint_time;
  4174                           ;eep.c: 262: usage_time=((((_UINT16)EEPRAM_SYSTEM_DATA[2])<<8)|EEPRAM_SYSTEM_DATA[1]);
  4175                           
  4176                           ;incstack = 0
  4177                           ; Regs used in _usage_time_ini: [wreg+status,2+btemp+1]
  4178  0731  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0732  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0733  0829               	movf	_EEPRAM_SYSTEM_DATA+1,w
  4181  0734  00D2               	movwf	??_usage_time_ini
  4182  0735  01D3               	clrf	??_usage_time_ini+1
  4183  0736  082A               	movf	_EEPRAM_SYSTEM_DATA+2,w
  4184  0737  00D4               	movwf	??_usage_time_ini+2
  4185  0738  01D5               	clrf	??_usage_time_ini+3
  4186  0739  0854               	movf	??_usage_time_ini+2,w
  4187  073A  00D5               	movwf	??_usage_time_ini+3
  4188  073B  01D4               	clrf	??_usage_time_ini+2
  4189  073C  0852               	movf	??_usage_time_ini,w
  4190  073D  0454               	iorwf	??_usage_time_ini+2,w
  4191  073E  00F8               	movwf	_usage_time
  4192  073F  0853               	movf	??_usage_time_ini+1,w
  4193  0740  0455               	iorwf	??_usage_time_ini+3,w
  4194  0741  00F9               	movwf	_usage_time+1
  4195                           
  4196                           ;eep.c: 264: maint_time =((((_UINT16)EEPRAM_APP_DATA[1])<<8)|EEPRAM_APP_DATA[0]);
  4197  0742  0832               	movf	_EEPRAM_APP_DATA,w
  4198  0743  00D2               	movwf	??_usage_time_ini
  4199  0744  01D3               	clrf	??_usage_time_ini+1
  4200  0745  0833               	movf	_EEPRAM_APP_DATA+1,w
  4201  0746  00D4               	movwf	??_usage_time_ini+2
  4202  0747  01D5               	clrf	??_usage_time_ini+3
  4203  0748  0854               	movf	??_usage_time_ini+2,w
  4204  0749  00D5               	movwf	??_usage_time_ini+3
  4205  074A  01D4               	clrf	??_usage_time_ini+2
  4206  074B  0852               	movf	??_usage_time_ini,w
  4207  074C  0454               	iorwf	??_usage_time_ini+2,w
  4208  074D  00F6               	movwf	usage_time_ini@maint_time
  4209  074E  0853               	movf	??_usage_time_ini+1,w
  4210  074F  0455               	iorwf	??_usage_time_ini+3,w
  4211  0750  00F7               	movwf	usage_time_ini@maint_time+1
  4212                           
  4213                           ;eep.c: 266: if(usage_time<maint_time)
  4214  0751  0877               	movf	usage_time_ini@maint_time+1,w
  4215  0752  0279               	subwf	_usage_time+1,w
  4216  0753  1D03               	skipz
  4217  0754  2F57               	goto	u1675
  4218  0755  0876               	movf	usage_time_ini@maint_time,w
  4219  0756  0278               	subwf	_usage_time,w
  4220  0757                     u1675:	
  4221  0757  1803               	skipnc
  4222  0758  2F5B               	goto	l321
  4223                           
  4224                           ;eep.c: 267: {
  4225                           ;eep.c: 268: maintainace_status=0;
  4226  0759  01FB               	clrf	_maintainace_status
  4227                           
  4228                           ;eep.c: 269: }
  4229  075A  0008               	return
  4230  075B                     l321:	
  4231                           
  4232                           ;eep.c: 270: else
  4233                           ;eep.c: 271: {
  4234                           ;eep.c: 272: maintainace_status=1;
  4235  075B  01FB               	clrf	_maintainace_status
  4236  075C  0AFB               	incf	_maintainace_status,f
  4237  075D  0008               	return
  4238  075E                     __end_of_usage_time_ini:	
  4239                           
  4240                           	psect	text18
  4241  06E6                     __ptext18:	
  4242 ;; *************** function _Uart_Ini *****************
  4243 ;; Defined at:
  4244 ;;		line 12 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/uart.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;		None               void
  4251 ;; Registers used:
  4252 ;;		wreg
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4258 ;;      Params:         0       0       0       0
  4259 ;;      Locals:         0       0       0       0
  4260 ;;      Temps:          0       0       0       0
  4261 ;;      Totals:         0       0       0       0
  4262 ;;Total ram usage:        0 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    2
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_Systm_Ini_Proc_1
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           
  4273                           ;psect for function _Uart_Ini
  4274  06E6                     _Uart_Ini:	
  4275                           
  4276                           ;uart.c: 15: BRGH = 0;
  4277                           
  4278                           ;incstack = 0
  4279                           ; Regs used in _Uart_Ini: [wreg]
  4280  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  4281  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  4282  06E8  1118               	bcf	24,2	;volatile
  4283                           
  4284                           ;uart.c: 16: BRG16 = 0;
  4285  06E9  119B               	bcf	27,3	;volatile
  4286                           
  4287                           ;uart.c: 17: SYNC = 0;
  4288  06EA  1218               	bcf	24,4	;volatile
  4289                           
  4290                           ;uart.c: 18: SPEN = 1;
  4291  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  4292  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  4293  06ED  1798               	bsf	24,7	;volatile
  4294                           
  4295                           ;uart.c: 24: SPBRG=12;
  4296  06EE  300C               	movlw	12
  4297  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  4298  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  4299  06F1  0099               	movwf	25	;volatile
  4300                           
  4301                           ;uart.c: 28: CREN = 1;
  4302  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  4303  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  4304  06F4  1618               	bsf	24,4	;volatile
  4305                           
  4306                           ;uart.c: 29: RCIE=1;
  4307  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  4308  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  4309  06F7  168C               	bsf	12,5	;volatile
  4310                           
  4311                           ;uart.c: 32: TXEN = 1;
  4312  06F8  1698               	bsf	24,5	;volatile
  4313  06F9  0008               	return
  4314  06FA                     __end_of_Uart_Ini:	
  4315                           
  4316                           	psect	text19
  4317  064C                     __ptext19:	
  4318 ;; *************** function _Pwm_Ini *****************
  4319 ;; Defined at:
  4320 ;;		line 4 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/plat
      +form/Pic_16f690_Platform_build.X/files/os/pwm.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;		None               void
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, pclath, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4334 ;;      Params:         0       0       0       0
  4335 ;;      Locals:         0       0       0       0
  4336 ;;      Temps:          0       0       0       0
  4337 ;;      Totals:         0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    3
  4341 ;; This function calls:
  4342 ;;		_set_bit_position
  4343 ;; This function is called by:
  4344 ;;		_Systm_Ini_Proc_1
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           
  4349                           ;psect for function _Pwm_Ini
  4350  064C                     _Pwm_Ini:	
  4351                           
  4352                           ;pwm.c: 7: TMR2IF=0;
  4353                           
  4354                           ;incstack = 0
  4355                           ; Regs used in _Pwm_Ini: [wreg+status,2+status,0+pclath+cstack]
  4356  064C  1283               	bcf	3,5	;RP0=0, select bank0
  4357  064D  1303               	bcf	3,6	;RP1=0, select bank0
  4358  064E  108C               	bcf	12,1	;volatile
  4359                           
  4360                           ;pwm.c: 8: T2CON=set_bit_position(T2CON,1);
  4361  064F  01F6               	clrf	set_bit_position@bit_position
  4362  0650  0AF6               	incf	set_bit_position@bit_position,f
  4363  0651  0812               	movf	18,w	;volatile
  4364  0652  118A  2071         	fcall	_set_bit_position
  4365  0654  1283               	bcf	3,5	;RP0=0, select bank0
  4366  0655  1303               	bcf	3,6	;RP1=0, select bank0
  4367  0656  0092               	movwf	18	;volatile
  4368                           
  4369                           ;pwm.c: 9: TMR2ON=1;
  4370  0657  1512               	bsf	18,2	;volatile
  4371                           
  4372                           ;pwm.c: 13: PR2 = 100;
  4373  0658  3064               	movlw	100
  4374  0659  1683               	bsf	3,5	;RP0=1, select bank1
  4375  065A  1303               	bcf	3,6	;RP1=0, select bank1
  4376  065B  0092               	movwf	18	;volatile
  4377                           
  4378                           ;pwm.c: 14: CCPR1L=0x00;
  4379  065C  1283               	bcf	3,5	;RP0=0, select bank0
  4380  065D  1303               	bcf	3,6	;RP1=0, select bank0
  4381  065E  0195               	clrf	21	;volatile
  4382                           
  4383                           ;pwm.c: 15: CCP1CON=CCP1CON & 0b11001111;
  4384  065F  0817               	movf	23,w	;volatile
  4385  0660  39CF               	andlw	207
  4386  0661  0097               	movwf	23	;volatile
  4387                           
  4388                           ;pwm.c: 16: CCP1CON=CCP1CON|0x0C;
  4389  0662  0817               	movf	23,w	;volatile
  4390  0663  380C               	iorlw	12
  4391  0664  0097               	movwf	23	;volatile
  4392                           
  4393                           ;pwm.c: 17: PSTRCON=0x10;
  4394  0665  3010               	movlw	16
  4395  0666  1683               	bsf	3,5	;RP0=1, select bank3
  4396  0667  1703               	bsf	3,6	;RP1=1, select bank3
  4397  0668  009D               	movwf	29	;volatile
  4398  0669  0008               	return
  4399  066A                     __end_of_Pwm_Ini:	
  4400                           
  4401                           	psect	text20
  4402  0071                     __ptext20:	
  4403 ;; *************** function _set_bit_position *****************
  4404 ;; Defined at:
  4405 ;;		line 13 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/sevlb.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  number1         1    wreg     unsigned char 
  4408 ;;  bit_position    1    6[COMMON] unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  number1         1    0[BANK0 ] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      unsigned char 
  4413 ;; Registers used:
  4414 ;;		wreg, status,2, status,0
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4420 ;;      Params:         1       0       0       0
  4421 ;;      Locals:         0       1       0       0
  4422 ;;      Temps:          1       0       0       0
  4423 ;;      Totals:         2       1       0       0
  4424 ;;Total ram usage:        3 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    2
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_Pwm_Ini
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           
  4435                           ;psect for function _set_bit_position
  4436  0071                     _set_bit_position:	
  4437                           
  4438                           ;incstack = 0
  4439                           ; Regs used in _set_bit_position: [wreg+status,2+status,0]
  4440                           ;set_bit_position@number1 stored from wreg
  4441  0071  1283               	bcf	3,5	;RP0=0, select bank0
  4442  0072  1303               	bcf	3,6	;RP1=0, select bank0
  4443  0073  00D2               	movwf	set_bit_position@number1
  4444                           
  4445                           ;sevlb.c: 15: return( number1 | (0x01<<bit_position) );
  4446  0074  3001               	movlw	1
  4447  0075  00F7               	movwf	??_set_bit_position
  4448  0076  0A76               	incf	set_bit_position@bit_position,w
  4449  0077  287A               	goto	u1604
  4450  0078                     u1605:	
  4451  0078  1003               	clrc
  4452  0079  0DF7               	rlf	??_set_bit_position,f
  4453  007A                     u1604:	
  4454  007A  3EFF               	addlw	-1
  4455  007B  1D03               	skipz
  4456  007C  2878               	goto	u1605
  4457  007D  0877               	movf	??_set_bit_position,w
  4458  007E  0452               	iorwf	set_bit_position@number1,w
  4459  007F  0008               	return
  4460  0080                     __end_of_set_bit_position:	
  4461                           
  4462                           	psect	text21
  4463  066A                     __ptext21:	
  4464 ;; *************** function _Os_Ini *****************
  4465 ;; Defined at:
  4466 ;;		line 311 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/os.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;		None               void
  4473 ;; Registers used:
  4474 ;;		wreg
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4480 ;;      Params:         0       0       0       0
  4481 ;;      Locals:         0       0       0       0
  4482 ;;      Temps:          0       0       0       0
  4483 ;;      Totals:         0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    2
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_Systm_Ini_Proc_1
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           
  4495                           ;psect for function _Os_Ini
  4496  066A                     _Os_Ini:	
  4497                           
  4498                           ;os.c: 314: OPTION_REGbits.PSA=0;
  4499                           
  4500                           ;incstack = 0
  4501                           ; Regs used in _Os_Ini: [wreg]
  4502  066A  1683               	bsf	3,5	;RP0=1, select bank1
  4503  066B  1303               	bcf	3,6	;RP1=0, select bank1
  4504  066C  1181               	bcf	1,3	;volatile
  4505                           
  4506                           ;os.c: 315: OPTION_REGbits.PS2=0;
  4507  066D  1101               	bcf	1,2	;volatile
  4508                           
  4509                           ;os.c: 316: OPTION_REGbits.PS1=1;
  4510  066E  1481               	bsf	1,1	;volatile
  4511                           
  4512                           ;os.c: 317: OPTION_REGbits.PS0=1;
  4513  066F  1401               	bsf	1,0	;volatile
  4514                           
  4515                           ;os.c: 318: OPTION_REGbits.T0CS=0;
  4516  0670  1281               	bcf	1,5	;volatile
  4517                           
  4518                           ;os.c: 319: OPTION_REGbits.T0SE=0;
  4519  0671  1201               	bcf	1,4	;volatile
  4520                           
  4521                           ;os.c: 320: TMR0=135;
  4522  0672  3087               	movlw	135
  4523  0673  1283               	bcf	3,5	;RP0=0, select bank0
  4524  0674  1303               	bcf	3,6	;RP1=0, select bank0
  4525  0675  0081               	movwf	1	;volatile
  4526                           
  4527                           ;os.c: 321: T0IE =0x01;
  4528  0676  168B               	bsf	11,5	;volatile
  4529                           
  4530                           ;os.c: 322: T0IF =0;
  4531  0677  110B               	bcf	11,2	;volatile
  4532                           
  4533                           ;os.c: 326: TMR1CS=0;
  4534  0678  1090               	bcf	16,1	;volatile
  4535                           
  4536                           ;os.c: 327: T1OSCEN = 0;
  4537  0679  1190               	bcf	16,3	;volatile
  4538                           
  4539                           ;os.c: 328: TMR1=0xB1DF;
  4540  067A  30B1               	movlw	177
  4541  067B  008F               	movwf	15	;volatile
  4542  067C  30DF               	movlw	223
  4543  067D  008E               	movwf	14	;volatile
  4544                           
  4545                           ;os.c: 329: TMR1ON=0x01;
  4546  067E  1410               	bsf	16,0	;volatile
  4547                           
  4548                           ;os.c: 330: TMR1IE=0x01;
  4549  067F  1683               	bsf	3,5	;RP0=1, select bank1
  4550  0680  1303               	bcf	3,6	;RP1=0, select bank1
  4551  0681  140C               	bsf	12,0	;volatile
  4552                           
  4553                           ;os.c: 331: TMR1IF=0;
  4554  0682  1283               	bcf	3,5	;RP0=0, select bank0
  4555  0683  1303               	bcf	3,6	;RP1=0, select bank0
  4556  0684  100C               	bcf	12,0	;volatile
  4557                           
  4558                           ;os.c: 341: PEIE=1;
  4559  0685  170B               	bsf	11,6	;volatile
  4560  0686  0008               	return
  4561  0687                     __end_of_Os_Ini:	
  4562                           
  4563                           	psect	text22
  4564  0090                     __ptext22:	
  4565 ;; *************** function _Eep_Ini *****************
  4566 ;; Defined at:
  4567 ;;		line 32 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;		None               void
  4574 ;; Registers used:
  4575 ;;		None
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4581 ;;      Params:         0       0       0       0
  4582 ;;      Locals:         0       0       0       0
  4583 ;;      Temps:          0       0       0       0
  4584 ;;      Totals:         0       0       0       0
  4585 ;;Total ram usage:        0 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    2
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_Systm_Ini_Proc_1
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           
  4596                           ;psect for function _Eep_Ini
  4597  0090                     _Eep_Ini:	
  4598                           
  4599                           ;eep.c: 35: EEIE=1;
  4600                           
  4601                           ;incstack = 0
  4602                           ; Regs used in _Eep_Ini: []
  4603  0090  1683               	bsf	3,5	;RP0=1, select bank1
  4604  0091  1303               	bcf	3,6	;RP1=0, select bank1
  4605  0092  160D               	bsf	13,4	;volatile
  4606  0093  0008               	return
  4607  0094                     __end_of_Eep_Ini:	
  4608                           
  4609                           	psect	text23
  4610  04A4                     __ptext23:	
  4611 ;; *************** function _EEP_to_RAM *****************
  4612 ;; Defined at:
  4613 ;;		line 185 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  eep_error_st    1    wreg     unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  eep_error_st    1    5[BANK0 ] unsigned char 
  4618 ;;  i               1   10[BANK0 ] unsigned char 
  4619 ;;  j               1    8[BANK0 ] unsigned char 
  4620 ;;  i               1    9[BANK0 ] unsigned char 
  4621 ;;  j               1    7[BANK0 ] unsigned char 
  4622 ;;  temp_data       1    6[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;		None               void
  4625 ;; Registers used:
  4626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4632 ;;      Params:         0       0       0       0
  4633 ;;      Locals:         0       6       0       0
  4634 ;;      Temps:          0       1       0       0
  4635 ;;      Totals:         0       7       0       0
  4636 ;;Total ram usage:        7 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    4
  4639 ;; This function calls:
  4640 ;;		_EEP_READ
  4641 ;;		_check_eep_checksum
  4642 ;; This function is called by:
  4643 ;;		_Systm_Ini_Proc_1
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           
  4648                           ;psect for function _EEP_to_RAM
  4649  04A4                     _EEP_to_RAM:	
  4650                           
  4651                           ;incstack = 0
  4652                           ; Regs used in _EEP_to_RAM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4653                           ;EEP_to_RAM@eep_error_stetegy stored from wreg
  4654  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  4655  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  4656  04A6  00D7               	movwf	EEP_to_RAM@eep_error_stetegy
  4657                           
  4658                           ;eep.c: 187: _UBYTE i,temp_data;
  4659                           ;eep.c: 188: _UBYTE j;
  4660                           ;eep.c: 189: temp_data=check_eep_checksum();
  4661  04A7  118A  253E  118A   	fcall	_check_eep_checksum
  4662  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  4663  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  4664  04AC  00D6               	movwf	??_EEP_to_RAM
  4665  04AD  0856               	movf	??_EEP_to_RAM,w
  4666  04AE  00D8               	movwf	EEP_to_RAM@temp_data
  4667                           
  4668                           ;eep.c: 190: if((temp_data==0)||(eep_error_stetegy==0))
  4669  04AF  0858               	movf	EEP_to_RAM@temp_data,w
  4670  04B0  1D03               	skipz
  4671  04B1  08D7               	movf	EEP_to_RAM@eep_error_stetegy,f
  4672  04B2  1D03               	skipz
  4673  04B3  0008               	return
  4674                           
  4675                           ;eep.c: 191: {
  4676                           ;eep.c: 193: for(_UBYTE i=10,j=0;i<=(10+2);i++,j++)
  4677  04B4  300A               	movlw	10
  4678  04B5  00D6               	movwf	??_EEP_to_RAM
  4679  04B6  0856               	movf	??_EEP_to_RAM,w
  4680  04B7  00DC               	movwf	EEP_to_RAM@i_191
  4681  04B8  01DA               	clrf	EEP_to_RAM@j_192
  4682  04B9  300D               	movlw	13
  4683  04BA  025C               	subwf	EEP_to_RAM@i_191,w
  4684  04BB  1803               	btfsc	3,0
  4685  04BC  2CD6               	goto	l2417
  4686  04BD                     l2409:	
  4687                           
  4688                           ;eep.c: 194: {
  4689                           ;eep.c: 195: EEPRAM_APP_DATA[j]=EEP_READ(i);
  4690  04BD  085C               	movf	EEP_to_RAM@i_191,w
  4691  04BE  118A  203E  118A   	fcall	_EEP_READ
  4692  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  4693  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  4694  04C3  00D6               	movwf	??_EEP_to_RAM
  4695  04C4  085A               	movf	EEP_to_RAM@j_192,w
  4696  04C5  3E32               	addlw	_EEPRAM_APP_DATA& (0+255)
  4697  04C6  0084               	movwf	4
  4698  04C7  0856               	movf	??_EEP_to_RAM,w
  4699  04C8  1383               	bcf	3,7	;select IRP bank0
  4700  04C9  0080               	movwf	0
  4701  04CA  3001               	movlw	1
  4702  04CB  00D6               	movwf	??_EEP_to_RAM
  4703  04CC  0856               	movf	??_EEP_to_RAM,w
  4704  04CD  07DC               	addwf	EEP_to_RAM@i_191,f
  4705  04CE  3001               	movlw	1
  4706  04CF  00D6               	movwf	??_EEP_to_RAM
  4707  04D0  0856               	movf	??_EEP_to_RAM,w
  4708  04D1  07DA               	addwf	EEP_to_RAM@j_192,f
  4709  04D2  300D               	movlw	13
  4710  04D3  025C               	subwf	EEP_to_RAM@i_191,w
  4711  04D4  1C03               	skipc
  4712  04D5  2CBD               	goto	l2409
  4713  04D6                     l2417:	
  4714                           
  4715                           ;eep.c: 196: }
  4716                           ;eep.c: 197: for(i=4,j=0;i<=(6+4);i++,j++)
  4717  04D6  3004               	movlw	4
  4718  04D7  00D6               	movwf	??_EEP_to_RAM
  4719  04D8  0856               	movf	??_EEP_to_RAM,w
  4720  04D9  00DB               	movwf	EEP_to_RAM@i
  4721  04DA  01D9               	clrf	EEP_to_RAM@j
  4722  04DB                     L8:	
  4723  04DB  300B               	movlw	11
  4724  04DC  025B               	subwf	EEP_to_RAM@i,w
  4725  04DD  1803               	btfsc	3,0
  4726  04DE  0008               	return
  4727                           
  4728                           ;eep.c: 198: {
  4729                           ;eep.c: 199: EEPRAM_SYSTEM_DATA[j]=EEP_READ(i);
  4730  04DF  085B               	movf	EEP_to_RAM@i,w
  4731  04E0  118A  203E  118A   	fcall	_EEP_READ
  4732  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  4733  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  4734  04E5  00D6               	movwf	??_EEP_to_RAM
  4735  04E6  0859               	movf	EEP_to_RAM@j,w
  4736  04E7  3E28               	addlw	_EEPRAM_SYSTEM_DATA& (0+255)
  4737  04E8  0084               	movwf	4
  4738  04E9  0856               	movf	??_EEP_to_RAM,w
  4739  04EA  1383               	bcf	3,7	;select IRP bank0
  4740  04EB  0080               	movwf	0
  4741  04EC  3001               	movlw	1
  4742  04ED  00D6               	movwf	??_EEP_to_RAM
  4743  04EE  0856               	movf	??_EEP_to_RAM,w
  4744  04EF  07DB               	addwf	EEP_to_RAM@i,f
  4745  04F0  3001               	movlw	1
  4746  04F1  00D6               	movwf	??_EEP_to_RAM
  4747  04F2  0856               	movf	??_EEP_to_RAM,w
  4748  04F3  07D9               	addwf	EEP_to_RAM@j,f
  4749  04F4  2CDB               	goto	L8
  4750  04F5                     __end_of_EEP_to_RAM:	
  4751                           ;eep.c: 202: else
  4752                           ;eep.c: 203: {
  4753                           
  4754                           ;eep.c: 200: }
  4755                           ;eep.c: 201: }
  4756                           
  4757                           
  4758                           	psect	text24
  4759  053E                     __ptext24:	
  4760 ;; *************** function _check_eep_checksum *****************
  4761 ;; Defined at:
  4762 ;;		line 208 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  i               1    3[BANK0 ] unsigned char 
  4767 ;;  checksum_dat    1    2[BANK0 ] unsigned char 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      unsigned char 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0, pclath, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4777 ;;      Params:         0       0       0       0
  4778 ;;      Locals:         0       2       0       0
  4779 ;;      Temps:          1       0       0       0
  4780 ;;      Totals:         1       2       0       0
  4781 ;;Total ram usage:        3 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    3
  4784 ;; This function calls:
  4785 ;;		_EEP_READ
  4786 ;; This function is called by:
  4787 ;;		_EEP_to_RAM
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           
  4792                           ;psect for function _check_eep_checksum
  4793  053E                     _check_eep_checksum:	
  4794                           
  4795                           ;eep.c: 210: _UBYTE checksum_data;
  4796                           ;eep.c: 211: checksum_data=0;
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _check_eep_checksum: [wreg+status,2+status,0+pclath+cstack]
  4800  053E  1283               	bcf	3,5	;RP0=0, select bank0
  4801  053F  1303               	bcf	3,6	;RP1=0, select bank0
  4802  0540  01D4               	clrf	check_eep_checksum@checksum_data
  4803                           
  4804                           ;eep.c: 212: if(EEP_READ(3)==0xFF)
  4805  0541  3003               	movlw	3
  4806  0542  118A  203E  118A   	fcall	_EEP_READ
  4807  0545  3AFF               	xorlw	255
  4808  0546  1D03               	skipz
  4809  0547  2D4A               	goto	l2321
  4810                           
  4811                           ;eep.c: 213: {
  4812                           ;eep.c: 215: return(0);
  4813  0548  3000               	movlw	0
  4814                           
  4815                           ;eep.c: 216: }
  4816  0549  0008               	return
  4817  054A                     l2321:	
  4818                           
  4819                           ;eep.c: 217: else
  4820                           ;eep.c: 218: {
  4821                           ;eep.c: 219: for(_UBYTE i=0;i<=(10 + 2); i++)
  4822  054A  1283               	bcf	3,5	;RP0=0, select bank0
  4823  054B  1303               	bcf	3,6	;RP1=0, select bank0
  4824  054C  01D5               	clrf	check_eep_checksum@i
  4825  054D  300D               	movlw	13
  4826  054E  0255               	subwf	check_eep_checksum@i,w
  4827  054F  1803               	btfsc	3,0
  4828  0550  2D66               	goto	l2335
  4829  0551                     l2327:	
  4830                           
  4831                           ;eep.c: 220: {
  4832                           ;eep.c: 221: if(i!=3)
  4833  0551  0855               	movf	check_eep_checksum@i,w
  4834  0552  3A03               	xorlw	3
  4835  0553  1903               	skipnz
  4836  0554  2D5E               	goto	l2331
  4837                           
  4838                           ;eep.c: 222: {
  4839                           ;eep.c: 223: checksum_data+=EEP_READ(i);
  4840  0555  0855               	movf	check_eep_checksum@i,w
  4841  0556  118A  203E  118A   	fcall	_EEP_READ
  4842  0559  00F7               	movwf	??_check_eep_checksum
  4843  055A  0877               	movf	??_check_eep_checksum,w
  4844  055B  1283               	bcf	3,5	;RP0=0, select bank0
  4845  055C  1303               	bcf	3,6	;RP1=0, select bank0
  4846  055D  07D4               	addwf	check_eep_checksum@checksum_data,f
  4847  055E                     l2331:	
  4848  055E  3001               	movlw	1
  4849  055F  00F7               	movwf	??_check_eep_checksum
  4850  0560  0877               	movf	??_check_eep_checksum,w
  4851  0561  07D5               	addwf	check_eep_checksum@i,f
  4852  0562  300D               	movlw	13
  4853  0563  0255               	subwf	check_eep_checksum@i,w
  4854  0564  1C03               	skipc
  4855  0565  2D51               	goto	l2327
  4856  0566                     l2335:	
  4857                           
  4858                           ;eep.c: 224: }
  4859                           ;eep.c: 225: }
  4860                           ;eep.c: 226: if(checksum_data==(EEP_READ(3)))
  4861  0566  3003               	movlw	3
  4862  0567  118A  203E  118A   	fcall	_EEP_READ
  4863  056A  1283               	bcf	3,5	;RP0=0, select bank0
  4864  056B  1303               	bcf	3,6	;RP1=0, select bank0
  4865  056C  0654               	xorwf	check_eep_checksum@checksum_data,w
  4866  056D  1D03               	skipz
  4867  056E  2D83               	goto	l2355
  4868                           
  4869                           ;eep.c: 227: {
  4870                           ;eep.c: 228: if(EEP_READ(7)==0)
  4871  056F  3007               	movlw	7
  4872  0570  118A  203E  118A   	fcall	_EEP_READ
  4873  0573  3800               	iorlw	0
  4874  0574  1D03               	skipz
  4875  0575  2D81               	goto	l2351
  4876                           
  4877                           ;eep.c: 229: {
  4878                           ;eep.c: 230: if(EEP_READ(4)!=0)
  4879  0576  3004               	movlw	4
  4880  0577  118A  203E  118A   	fcall	_EEP_READ
  4881  057A  3A00               	xorlw	0
  4882  057B  1903               	skipnz
  4883  057C  2D7F               	goto	l2347
  4884                           
  4885                           ;eep.c: 231: {
  4886                           ;eep.c: 232: return(3);
  4887  057D  3003               	movlw	3
  4888                           
  4889                           ;eep.c: 233: }
  4890  057E  0008               	return
  4891  057F                     l2347:	
  4892                           
  4893                           ;eep.c: 234: else
  4894                           ;eep.c: 235: {
  4895                           ;eep.c: 236: return(0);
  4896  057F  3000               	movlw	0
  4897                           
  4898                           ;eep.c: 237: }
  4899                           ;eep.c: 238: }
  4900  0580  0008               	return
  4901  0581                     l2351:	
  4902                           
  4903                           ;eep.c: 239: else
  4904                           ;eep.c: 240: {
  4905                           ;eep.c: 241: return(2);
  4906  0581  3002               	movlw	2
  4907                           
  4908                           ;eep.c: 242: }
  4909                           ;eep.c: 244: }
  4910  0582  0008               	return
  4911  0583                     l2355:	
  4912                           
  4913                           ;eep.c: 245: else
  4914                           ;eep.c: 246: {
  4915                           ;eep.c: 247: return(1);
  4916  0583  3001               	movlw	1
  4917  0584  0008               	return
  4918  0585                     __end_of_check_eep_checksum:	
  4919                           
  4920                           	psect	text25
  4921  003E                     __ptext25:	
  4922 ;; *************** function _EEP_READ *****************
  4923 ;; Defined at:
  4924 ;;		line 176 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  Index           1    wreg     unsigned char 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  Index           1    0[BANK0 ] unsigned char 
  4929 ;;  temp_data       1    1[BANK0 ] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      unsigned char 
  4932 ;; Registers used:
  4933 ;;		wreg
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4939 ;;      Params:         0       0       0       0
  4940 ;;      Locals:         0       2       0       0
  4941 ;;      Temps:          1       0       0       0
  4942 ;;      Totals:         1       2       0       0
  4943 ;;Total ram usage:        3 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    2
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_EEP_to_RAM
  4950 ;;		_check_eep_checksum
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function _EEP_READ
  4956  003E                     _EEP_READ:	
  4957                           
  4958                           ;incstack = 0
  4959                           ; Regs used in _EEP_READ: [wreg]
  4960                           ;EEP_READ@Index stored from wreg
  4961  003E  1283               	bcf	3,5	;RP0=0, select bank0
  4962  003F  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0040  00D2               	movwf	EEP_READ@Index
  4964                           
  4965                           ;eep.c: 178: _UBYTE temp_data;
  4966                           ;eep.c: 179: EEADR=Index;
  4967  0041  0852               	movf	EEP_READ@Index,w
  4968  0042  1283               	bcf	3,5	;RP0=0, select bank2
  4969  0043  1703               	bsf	3,6	;RP1=1, select bank2
  4970  0044  008D               	movwf	13	;volatile
  4971                           
  4972                           ;eep.c: 180: RD=1;
  4973  0045  1683               	bsf	3,5	;RP0=1, select bank3
  4974  0046  1703               	bsf	3,6	;RP1=1, select bank3
  4975  0047  140C               	bsf	12,0	;volsfr
  4976                           
  4977                           ;eep.c: 181: temp_data=EEDAT;
  4978  0048  1283               	bcf	3,5	;RP0=0, select bank2
  4979  0049  1703               	bsf	3,6	;RP1=1, select bank2
  4980  004A  080C               	movf	12,w	;volatile
  4981  004B  00F6               	movwf	??_EEP_READ
  4982  004C  0876               	movf	??_EEP_READ,w
  4983  004D  1283               	bcf	3,5	;RP0=0, select bank0
  4984  004E  1303               	bcf	3,6	;RP1=0, select bank0
  4985  004F  00D3               	movwf	EEP_READ@temp_data
  4986                           
  4987                           ;eep.c: 182: return(temp_data);
  4988  0050  0853               	movf	EEP_READ@temp_data,w
  4989  0051  0008               	return
  4990  0052                     __end_of_EEP_READ:	
  4991                           
  4992                           	psect	text26
  4993  06D1                     __ptext26:	
  4994 ;; *************** function _Dio_Ini *****************
  4995 ;; Defined at:
  4996 ;;		line 4 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/plat
      +form/Pic_16f690_Platform_build.X/files/os/dio.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;		None               void
  5003 ;; Registers used:
  5004 ;;		None
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5010 ;;      Params:         0       0       0       0
  5011 ;;      Locals:         0       0       0       0
  5012 ;;      Temps:          0       0       0       0
  5013 ;;      Totals:         0       0       0       0
  5014 ;;Total ram usage:        0 bytes
  5015 ;; Hardware stack levels used:    1
  5016 ;; Hardware stack levels required when called:    2
  5017 ;; This function calls:
  5018 ;;		Nothing
  5019 ;; This function is called by:
  5020 ;;		_Systm_Ini_Proc_1
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           
  5025                           ;psect for function _Dio_Ini
  5026  06D1                     _Dio_Ini:	
  5027                           
  5028                           ;dio.c: 14: TRISA5=0;
  5029                           
  5030                           ;incstack = 0
  5031                           ; Regs used in _Dio_Ini: []
  5032  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  5033  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  5034  06D3  1285               	bcf	5,5	;volatile
  5035                           
  5036                           ;dio.c: 18: TRISA4=1;
  5037  06D4  1605               	bsf	5,4	;volatile
  5038                           
  5039                           ;dio.c: 23: TRISA3=1;
  5040  06D5  1585               	bsf	5,3	;volatile
  5041                           
  5042                           ;dio.c: 28: TRISC5=0;
  5043  06D6  1287               	bcf	7,5	;volatile
  5044                           
  5045                           ;dio.c: 34: TRISC4=0;
  5046  06D7  1207               	bcf	7,4	;volatile
  5047                           
  5048                           ;dio.c: 40: TRISC3=0;
  5049  06D8  1187               	bcf	7,3	;volatile
  5050                           
  5051                           ;dio.c: 46: TRISC6=0;
  5052  06D9  1307               	bcf	7,6	;volatile
  5053                           
  5054                           ;dio.c: 52: TRISC7=0;
  5055  06DA  1387               	bcf	7,7	;volatile
  5056                           
  5057                           ;dio.c: 58: TRISB7=0;
  5058  06DB  1386               	bcf	6,7	;volatile
  5059                           
  5060                           ;dio.c: 64: TRISB6=0;
  5061  06DC  1306               	bcf	6,6	;volatile
  5062                           
  5063                           ;dio.c: 68: TRISB5=1;
  5064  06DD  1686               	bsf	6,5	;volatile
  5065                           
  5066                           ;dio.c: 76: TRISB4=0;
  5067  06DE  1206               	bcf	6,4	;volatile
  5068                           
  5069                           ;dio.c: 82: TRISC2=0;
  5070  06DF  1107               	bcf	7,2	;volatile
  5071                           
  5072                           ;dio.c: 86: TRISC1=1;
  5073  06E0  1487               	bsf	7,1	;volatile
  5074                           
  5075                           ;dio.c: 92: TRISC0=1;
  5076  06E1  1407               	bsf	7,0	;volatile
  5077                           
  5078                           ;dio.c: 100: TRISA2=0;
  5079  06E2  1105               	bcf	5,2	;volatile
  5080                           
  5081                           ;dio.c: 104: TRISA1=1;
  5082  06E3  1485               	bsf	5,1	;volatile
  5083                           
  5084                           ;dio.c: 110: TRISA0=1;
  5085  06E4  1405               	bsf	5,0	;volatile
  5086  06E5  0008               	return
  5087  06E6                     __end_of_Dio_Ini:	
  5088                           
  5089                           	psect	text27
  5090  07CC                     __ptext27:	
  5091 ;; *************** function _Adc_Ini *****************
  5092 ;; Defined at:
  5093 ;;		line 19 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/adc.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;		None               void
  5100 ;; Registers used:
  5101 ;;		wreg, status,2
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5107 ;;      Params:         0       0       0       0
  5108 ;;      Locals:         0       0       0       0
  5109 ;;      Temps:          0       0       0       0
  5110 ;;      Totals:         0       0       0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    2
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_Systm_Ini_Proc_1
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           
  5122                           ;psect for function _Adc_Ini
  5123  07CC                     _Adc_Ini:	
  5124                           
  5125                           ;adc.c: 25: ANSEL=0b00000000;
  5126                           
  5127                           ;incstack = 0
  5128                           ; Regs used in _Adc_Ini: [wreg+status,2]
  5129  07CC  1283               	bcf	3,5	;RP0=0, select bank2
  5130  07CD  1703               	bsf	3,6	;RP1=1, select bank2
  5131  07CE  019E               	clrf	30	;volatile
  5132                           
  5133                           ;adc.c: 26: ANSELH=0b00000000;
  5134  07CF  019F               	clrf	31	;volatile
  5135                           
  5136                           ;adc.c: 28: ANS3=1;
  5137  07D0  159E               	bsf	30,3	;volatile
  5138                           
  5139                           ;adc.c: 49: ANS5=1;
  5140  07D1  169E               	bsf	30,5	;volatile
  5141                           
  5142                           ;adc.c: 52: ANS4=1;
  5143  07D2  161E               	bsf	30,4	;volatile
  5144                           
  5145                           ;adc.c: 58: ANS1=1;
  5146  07D3  149E               	bsf	30,1	;volatile
  5147                           
  5148                           ;adc.c: 61: ANS0=1;
  5149  07D4  141E               	bsf	30,0	;volatile
  5150                           
  5151                           ;adc.c: 64: ADCON1=(ADCON1&0x8F)|(0x30);
  5152  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  5153  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  5154  07D7  081F               	movf	31,w	;volatile
  5155  07D8  398F               	andlw	143
  5156  07D9  3830               	iorlw	48
  5157  07DA  009F               	movwf	31	;volatile
  5158                           
  5159                           ;adc.c: 65: VCFG=0;
  5160  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  5161  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  5162  07DD  131F               	bcf	31,6	;volatile
  5163                           
  5164                           ;adc.c: 66: ADFM=1;
  5165  07DE  179F               	bsf	31,7	;volatile
  5166                           
  5167                           ;adc.c: 67: ADIF=0;
  5168  07DF  130C               	bcf	12,6	;volatile
  5169                           
  5170                           ;adc.c: 68: GO=0;
  5171  07E0  109F               	bcf	31,1	;volatile
  5172                           
  5173                           ;adc.c: 69: ADON=1;
  5174  07E1  141F               	bsf	31,0	;volatile
  5175                           
  5176                           ;adc.c: 70: ADIE=0;
  5177  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  5178  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  5179  07E4  130C               	bcf	12,6	;volatile
  5180                           
  5181                           ;adc.c: 71: ADCON0=(ADCON0&0xC3);
  5182  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  5183  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  5184  07E7  081F               	movf	31,w	;volatile
  5185  07E8  39C3               	andlw	195
  5186  07E9  009F               	movwf	31	;volatile
  5187  07EA  0008               	return
  5188  07EB                     __end_of_Adc_Ini:	
  5189                           
  5190                           	psect	text28
  5191  05FC                     __ptext28:	
  5192 ;; *************** function _isr *****************
  5193 ;; Defined at:
  5194 ;;		line 5 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/plat
      +form/Pic_16f690_Platform_build.X/files/os/system.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;		None               void
  5201 ;; Registers used:
  5202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5208 ;;      Params:         0       0       0       0
  5209 ;;      Locals:         0       0       0       0
  5210 ;;      Temps:          4       0       0       0
  5211 ;;      Totals:         4       0       0       0
  5212 ;;Total ram usage:        4 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    1
  5215 ;; This function calls:
  5216 ;;		_Kernel_Co_Op_Timer_ISR
  5217 ;;		_Uart_Isr
  5218 ;; This function is called by:
  5219 ;;		Interrupt level 1
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           
  5224                           ;psect for function _isr
  5225  05FC                     _isr:	
  5226                           
  5227                           ;system.c: 11: if(T0IF)
  5228  05FC  1D0B               	btfss	11,2	;volatile
  5229  05FD  2E01               	goto	i1l3007
  5230                           
  5231                           ;system.c: 12: {
  5232                           ;system.c: 15: TMR0=135;
  5233  05FE  3087               	movlw	135
  5234  05FF  0081               	movwf	1	;volatile
  5235                           
  5236                           ;system.c: 16: T0IF=0;
  5237  0600  110B               	bcf	11,2	;volatile
  5238  0601                     i1l3007:	
  5239                           
  5240                           ;system.c: 18: }
  5241                           ;system.c: 19: if(INTF)
  5242  0601  188B               	btfsc	11,1	;volatile
  5243                           
  5244                           ;system.c: 20: {
  5245                           ;system.c: 21: INTF=0;
  5246  0602  108B               	bcf	11,1	;volatile
  5247                           
  5248                           ;system.c: 22: }
  5249                           ;system.c: 23: if(RABIF)
  5250  0603  180B               	btfsc	11,0	;volatile
  5251                           
  5252                           ;system.c: 24: {
  5253                           ;system.c: 25: RABIF=0;
  5254  0604  100B               	bcf	11,0	;volatile
  5255                           
  5256                           ;system.c: 26: }
  5257                           ;system.c: 28: if(PEIE)
  5258  0605  1F0B               	btfss	11,6	;volatile
  5259  0606  2E23               	goto	i1l682
  5260                           
  5261                           ;system.c: 29: {
  5262                           ;system.c: 31: if(TMR1IF)
  5263  0607  1C0C               	btfss	12,0	;volatile
  5264  0608  2E13               	goto	i1l3021
  5265                           
  5266                           ;system.c: 32: {
  5267                           ;system.c: 33: Kernel_Co_Op_Timer_ISR();
  5268  0609  118A  2316  118A   	fcall	_Kernel_Co_Op_Timer_ISR
  5269                           
  5270                           ;system.c: 34: TMR1IF=0;
  5271  060C  1283               	bcf	3,5	;RP0=0, select bank0
  5272  060D  1303               	bcf	3,6	;RP1=0, select bank0
  5273  060E  100C               	bcf	12,0	;volatile
  5274                           
  5275                           ;system.c: 35: TMR1=0xB1DF;
  5276  060F  30B1               	movlw	177
  5277  0610  008F               	movwf	15	;volatile
  5278  0611  30DF               	movlw	223
  5279  0612  008E               	movwf	14	;volatile
  5280  0613                     i1l3021:	
  5281                           
  5282                           ;system.c: 37: }
  5283                           ;system.c: 40: if(TMR2IF)
  5284  0613  1C8C               	btfss	12,1	;volatile
  5285  0614  2E18               	goto	i1l3027
  5286                           
  5287                           ;system.c: 41: {
  5288                           ;system.c: 44: TMR2IF=0;
  5289  0615  108C               	bcf	12,1	;volatile
  5290                           
  5291                           ;system.c: 45: TMR2=0x63BF;
  5292  0616  30BF               	movlw	191
  5293  0617  0091               	movwf	17	;volatile
  5294  0618                     i1l3027:	
  5295                           
  5296                           ;system.c: 46: }
  5297                           ;system.c: 49: if(ADIF)
  5298  0618  1B0C               	btfsc	12,6	;volatile
  5299                           
  5300                           ;system.c: 50: {
  5301                           ;system.c: 51: ADIF=0;
  5302  0619  130C               	bcf	12,6	;volatile
  5303                           
  5304                           ;system.c: 53: }
  5305                           ;system.c: 57: if(RCIF)
  5306  061A  1E8C               	btfss	12,5	;volatile
  5307  061B  2E1F               	goto	i1l3033
  5308                           
  5309                           ;system.c: 58: {
  5310                           ;system.c: 59: Uart_Isr();
  5311  061C  118A  2585  118A   	fcall	_Uart_Isr
  5312  061F                     i1l3033:	
  5313                           
  5314                           ;system.c: 60: }
  5315                           ;system.c: 62: if(EEIF)
  5316  061F  1283               	bcf	3,5	;RP0=0, select bank0
  5317  0620  1303               	bcf	3,6	;RP1=0, select bank0
  5318  0621  1A0D               	btfsc	13,4	;volatile
  5319                           
  5320                           ;system.c: 63: {
  5321                           ;system.c: 64: EEIF=0;
  5322  0622  120D               	bcf	13,4	;volatile
  5323  0623                     i1l682:	
  5324  0623  0875               	movf	??_isr+3,w
  5325  0624  00FF               	movwf	127
  5326  0625  0874               	movf	??_isr+2,w
  5327  0626  008A               	movwf	10
  5328  0627  0873               	movf	??_isr+1,w
  5329  0628  0084               	movwf	4
  5330  0629  0E72               	swapf	??_isr^(0+-128),w
  5331  062A  0083               	movwf	3
  5332  062B  0EFE               	swapf	126,f
  5333  062C  0E7E               	swapf	126,w
  5334  062D  0009               	retfie
  5335  062E                     __end_of_isr:	
  5336                           
  5337                           	psect	intentry
  5338  0004                     __pintentry:	
  5339                           ;incstack = 0
  5340                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5341                           
  5342  0004                     interrupt_function:	
  5343  007E                     saved_w	set	btemp
  5344  0004  00FE               	movwf	btemp
  5345  0005  0E03               	swapf	3,w
  5346  0006  00F2               	movwf	??_isr
  5347  0007  0804               	movf	4,w
  5348  0008  00F3               	movwf	??_isr+1
  5349  0009  080A               	movf	10,w
  5350  000A  00F4               	movwf	??_isr+2
  5351  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5352  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5353  000D  087F               	movf	btemp+1,w
  5354  000E  00F5               	movwf	??_isr+3
  5355  000F  118A  2DFC         	ljmp	_isr
  5356                           
  5357                           	psect	text29
  5358  0585                     __ptext29:	
  5359 ;; *************** function _Uart_Isr *****************
  5360 ;; Defined at:
  5361 ;;		line 44 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/uart.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;		None               void
  5368 ;; Registers used:
  5369 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5375 ;;      Params:         0       0       0       0
  5376 ;;      Locals:         0       0       0       0
  5377 ;;      Temps:          1       0       0       0
  5378 ;;      Totals:         1       0       0       0
  5379 ;;Total ram usage:        1 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; This function calls:
  5382 ;;		Nothing
  5383 ;; This function is called by:
  5384 ;;		_isr
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           
  5389                           ;psect for function _Uart_Isr
  5390  0585                     _Uart_Isr:	
  5391                           
  5392                           ;uart.c: 46: if(RCIF)
  5393                           
  5394                           ;incstack = 0
  5395                           ; Regs used in _Uart_Isr: [wreg-fsr0h+status,2+status,0]
  5396  0585  1283               	bcf	3,5	;RP0=0, select bank0
  5397  0586  1303               	bcf	3,6	;RP1=0, select bank0
  5398  0587  1E8C               	btfss	12,5	;volatile
  5399  0588  2DA8               	goto	i1l730
  5400                           
  5401                           ;uart.c: 47: {
  5402                           ;uart.c: 48: if(Uart_Net_Mgr.Uart_Rx.com_status!=3)
  5403  0589  1683               	bsf	3,5	;RP0=1, select bank1
  5404  058A  1303               	bcf	3,6	;RP1=0, select bank1
  5405  058B  083E               	movf	_Uart_Net_Mgr^(0+128),w
  5406  058C  3A03               	xorlw	3
  5407  058D  1903               	skipnz
  5408  058E  2DA4               	goto	i1l2857
  5409                           
  5410                           ;uart.c: 49: {
  5411                           ;uart.c: 50: Uart_Net_Mgr.Uart_Rx.rx_period=0;
  5412  058F  01BF               	clrf	(_Uart_Net_Mgr^(0+128)+1)
  5413                           
  5414                           ;uart.c: 51: Uart_Net_Mgr.Uart_Rx.com_status=2;
  5415  0590  3002               	movlw	2
  5416  0591  00F0               	movwf	??_Uart_Isr
  5417  0592  0870               	movf	??_Uart_Isr,w
  5418  0593  00BE               	movwf	_Uart_Net_Mgr^(0+128)
  5419                           
  5420                           ;uart.c: 52: *Uart_Net_Mgr.Uart_Rx.rx_data_ptr=RCREG;
  5421  0594  1283               	bcf	3,5	;RP0=0, select bank0
  5422  0595  1303               	bcf	3,6	;RP1=0, select bank0
  5423  0596  081A               	movf	26,w	;volatile
  5424  0597  00F0               	movwf	??_Uart_Isr
  5425  0598  1683               	bsf	3,5	;RP0=1, select bank1
  5426  0599  1303               	bcf	3,6	;RP1=0, select bank1
  5427  059A  0840               	movf	(_Uart_Net_Mgr+2)^(0+128),w
  5428  059B  0084               	movwf	4
  5429  059C  0870               	movf	??_Uart_Isr,w
  5430  059D  1383               	bcf	3,7	;select IRP bank0
  5431  059E  0080               	movwf	0
  5432                           
  5433                           ;uart.c: 53: Uart_Net_Mgr.Uart_Rx.rx_data_ptr=Uart_Net_Mgr.Uart_Rx.rx_data_ptr+1;
  5434  059F  0840               	movf	(_Uart_Net_Mgr+2)^(0+128),w
  5435  05A0  3E01               	addlw	1
  5436  05A1  00F0               	movwf	??_Uart_Isr
  5437  05A2  0870               	movf	??_Uart_Isr,w
  5438  05A3  00C0               	movwf	(_Uart_Net_Mgr+2)^(0+128)
  5439  05A4                     i1l2857:	
  5440                           
  5441                           ;uart.c: 54: }
  5442                           ;uart.c: 55: if(OERR)
  5443  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  5444  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  5445  05A6  1898               	btfsc	24,1	;volatile
  5446                           
  5447                           ;uart.c: 56: {
  5448                           ;uart.c: 57: CREN=0;
  5449  05A7  1218               	bcf	24,4	;volatile
  5450  05A8                     i1l730:	
  5451                           
  5452                           ;uart.c: 58: }
  5453                           ;uart.c: 59: }
  5454                           ;uart.c: 61: if(TXIF)
  5455  05A8  1E0C               	btfss	12,4	;volatile
  5456  05A9  0008               	return
  5457                           
  5458                           ;uart.c: 62: {
  5459                           ;uart.c: 63: if(Uart_Net_Mgr.Uart_Tx.com_satus==1)
  5460  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  5461  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  5462  05AC  084A               	movf	(_Uart_Net_Mgr^(0+128)+12),w
  5463  05AD  3A01               	xorlw	1
  5464  05AE  1D03               	skipz
  5465  05AF  0008               	return
  5466                           
  5467                           ;uart.c: 64: {
  5468                           ;uart.c: 65: if(Uart_Net_Mgr.Uart_Tx.data_index<Uart_Net_Mgr.Uart_Tx.data_length)
  5469  05B0  0853               	movf	(_Uart_Net_Mgr^(0+128)+21),w
  5470  05B1  0254               	subwf	(_Uart_Net_Mgr^(0+128)+22),w
  5471  05B2  1803               	skipnc
  5472  05B3  2DC5               	goto	i1l735
  5473                           
  5474                           ;uart.c: 66: {
  5475                           ;uart.c: 67: TXREG=Uart_Net_Mgr.Uart_Tx.TX_DATA[Uart_Net_Mgr.Uart_Tx.data_index];
  5476  05B4  0854               	movf	(_Uart_Net_Mgr^(0+128)+22),w
  5477  05B5  3E01               	addlw	1
  5478  05B6  3ECA               	addlw	(_Uart_Net_Mgr+12)& (0+255)
  5479  05B7  0084               	movwf	4
  5480  05B8  1383               	bcf	3,7	;select IRP bank1
  5481  05B9  0800               	movf	0,w
  5482  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  5483  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  5484  05BC  0099               	movwf	25	;volatile
  5485                           
  5486                           ;uart.c: 68: Uart_Net_Mgr.Uart_Tx.data_index=Uart_Net_Mgr.Uart_Tx.data_index+1;
  5487  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  5488  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  5489  05BF  0854               	movf	(_Uart_Net_Mgr^(0+128)+22),w
  5490  05C0  3E01               	addlw	1
  5491  05C1  00F0               	movwf	??_Uart_Isr
  5492  05C2  0870               	movf	??_Uart_Isr,w
  5493  05C3  00D4               	movwf	(_Uart_Net_Mgr^(0+128)+22)
  5494                           
  5495                           ;uart.c: 69: }
  5496  05C4  0008               	return
  5497  05C5                     i1l735:	
  5498                           
  5499                           ;uart.c: 70: else
  5500                           ;uart.c: 71: {
  5501                           ;uart.c: 72: Uart_Net_Mgr.Uart_Tx.data_index=1;
  5502  05C5  01D4               	clrf	(_Uart_Net_Mgr^(0+128)+22)
  5503  05C6  0AD4               	incf	(_Uart_Net_Mgr^(0+128)+22),f
  5504                           
  5505                           ;uart.c: 73: Uart_Net_Mgr.Uart_Tx.com_satus=0;
  5506  05C7  01CA               	clrf	(_Uart_Net_Mgr^(0+128)+12)
  5507  05C8  0008               	return
  5508  05C9                     __end_of_Uart_Isr:	
  5509                           
  5510                           	psect	text30
  5511  0316                     __ptext30:	
  5512 ;; *************** function _Kernel_Co_Op_Timer_ISR *****************
  5513 ;; Defined at:
  5514 ;;		line 92 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/os.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;  i               1    1[COMMON] unsigned char 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;		None               void
  5521 ;; Registers used:
  5522 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5528 ;;      Params:         0       0       0       0
  5529 ;;      Locals:         1       0       0       0
  5530 ;;      Temps:          1       0       0       0
  5531 ;;      Totals:         2       0       0       0
  5532 ;;Total ram usage:        2 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_isr
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           
  5542                           ;psect for function _Kernel_Co_Op_Timer_ISR
  5543  0316                     _Kernel_Co_Op_Timer_ISR:	
  5544                           
  5545                           ;os.c: 94: static _UBYTE ms10_ctr,ms50_ctr,ms200_ctr;
  5546                           ;os.c: 97: Nano_Os.Os_ms_Task_Sts[0]=1;
  5547                           
  5548                           ;incstack = 0
  5549                           ; Regs used in _Kernel_Co_Op_Timer_ISR: [wreg-fsr0h+status,2+status,0]
  5550  0316  3001               	movlw	1
  5551  0317  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5552  0318  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5553  0319  1683               	bsf	3,5	;RP0=1, select bank1
  5554  031A  1303               	bcf	3,6	;RP1=0, select bank1
  5555  031B  00B2               	movwf	(_Nano_Os^(0+128)+18)	;volatile
  5556                           
  5557                           ;os.c: 98: if(ms10_ctr==5)
  5558  031C  087A               	movf	Kernel_Co_Op_Timer_ISR@ms10_ctr,w
  5559  031D  3A05               	xorlw	5
  5560  031E  1D03               	skipz
  5561  031F  2B54               	goto	i1l2809
  5562                           
  5563                           ;os.c: 99: {
  5564                           ;os.c: 100: ms10_ctr=0;
  5565  0320  01FA               	clrf	Kernel_Co_Op_Timer_ISR@ms10_ctr
  5566                           
  5567                           ;os.c: 101: Nano_Os.Os_ms_Task_Sts[1]=1;
  5568  0321  3001               	movlw	1
  5569  0322  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5570  0323  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5571  0324  00B3               	movwf	(_Nano_Os^(0+128)+19)	;volatile
  5572                           
  5573                           ;os.c: 102: ms50_ctr+=1;
  5574  0325  3001               	movlw	1
  5575  0326  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5576  0327  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5577  0328  1283               	bcf	3,5	;RP0=0, select bank0
  5578  0329  1303               	bcf	3,6	;RP1=0, select bank0
  5579  032A  07BE               	addwf	Kernel_Co_Op_Timer_ISR@ms50_ctr,f
  5580                           
  5581                           ;os.c: 103: switch(ms50_ctr)
  5582  032B  2B4B               	goto	i1l2807
  5583  032C                     i1l2791:	
  5584                           ;os.c: 104: {
  5585                           ;os.c: 105: case 4:Nano_Os.Os_ms_Task_Sts[3]=1;
  5586                           
  5587  032C  3001               	movlw	1
  5588  032D  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5589  032E  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5590  032F  1683               	bsf	3,5	;RP0=1, select bank1
  5591  0330  1303               	bcf	3,6	;RP1=0, select bank1
  5592  0331  00B5               	movwf	(_Nano_Os^(0+128)+21)	;volatile
  5593                           
  5594                           ;os.c: 106: ms50_ctr=0;
  5595  0332  1283               	bcf	3,5	;RP0=0, select bank0
  5596  0333  1303               	bcf	3,6	;RP1=0, select bank0
  5597  0334  01BE               	clrf	Kernel_Co_Op_Timer_ISR@ms50_ctr
  5598                           
  5599                           ;os.c: 107: ms200_ctr+=1;
  5600  0335  3001               	movlw	1
  5601  0336  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5602  0337  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5603  0338  07BD               	addwf	Kernel_Co_Op_Timer_ISR@ms200_ctr,f
  5604                           
  5605                           ;os.c: 108: if(ms200_ctr==5)
  5606  0339  083D               	movf	Kernel_Co_Op_Timer_ISR@ms200_ctr,w
  5607  033A  3A05               	xorlw	5
  5608  033B  1D03               	skipz
  5609  033C  2B44               	goto	i1l2803
  5610                           
  5611                           ;os.c: 109: {
  5612                           ;os.c: 110: ms200_ctr=0;
  5613  033D  01BD               	clrf	Kernel_Co_Op_Timer_ISR@ms200_ctr
  5614                           
  5615                           ;os.c: 111: Nano_Os.Os_ms_Task_Sts[4]=1;
  5616  033E  3001               	movlw	1
  5617  033F  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5618  0340  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5619  0341  1683               	bsf	3,5	;RP0=1, select bank1
  5620  0342  1303               	bcf	3,6	;RP1=0, select bank1
  5621  0343  00B6               	movwf	(_Nano_Os^(0+128)+22)	;volatile
  5622  0344                     i1l2803:	
  5623                           ;os.c: 112: }
  5624                           ;os.c: 113: case 2:Nano_Os.Os_ms_Task_Sts[2]=1;
  5625                           
  5626  0344  3001               	movlw	1
  5627  0345  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5628  0346  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5629  0347  1683               	bsf	3,5	;RP0=1, select bank1
  5630  0348  1303               	bcf	3,6	;RP1=0, select bank1
  5631  0349  00B4               	movwf	(_Nano_Os^(0+128)+20)	;volatile
  5632                           
  5633                           ;os.c: 116: }
  5634                           
  5635                           ;os.c: 115: default: break;
  5636                           
  5637                           ;os.c: 114: break;
  5638  034A  2B54               	goto	i1l2809
  5639  034B                     i1l2807:	
  5640  034B  1283               	bcf	3,5	;RP0=0, select bank0
  5641  034C  083E               	movf	Kernel_Co_Op_Timer_ISR@ms50_ctr,w
  5642                           
  5643                           ; Switch size 1, requested type "space"
  5644                           ; Number of cases is 2, Range of values is 2 to 4
  5645                           ; switch strategies available:
  5646                           ; Name         Instructions Cycles
  5647                           ; simple_byte            7     4 (average)
  5648                           ; direct_byte           16    10 (fixed)
  5649                           ; jumptable            263     9 (fixed)
  5650                           ;	Chosen strategy is simple_byte
  5651  034D  3A02               	xorlw	2	; case 2
  5652  034E  1903               	skipnz
  5653  034F  2B44               	goto	i1l2803
  5654  0350  3A06               	xorlw	6	; case 4
  5655  0351  1903               	skipnz
  5656  0352  2B2C               	goto	i1l2791
  5657  0353  2B54               	goto	i1l2809
  5658  0354                     i1l2809:	
  5659                           
  5660                           ;os.c: 117: }
  5661                           ;os.c: 120: for(_UBYTE i = 0;i<2;i++)
  5662  0354  01F1               	clrf	Kernel_Co_Op_Timer_ISR@i
  5663  0355  3002               	movlw	2
  5664  0356  0271               	subwf	Kernel_Co_Op_Timer_ISR@i,w
  5665  0357  1803               	btfsc	3,0
  5666  0358  2B91               	goto	i1l2825
  5667  0359                     i1l2815:	
  5668                           
  5669                           ;os.c: 121: {
  5670                           ;os.c: 123: if(Kernel_stTimer[i].Lock == 0x01)
  5671  0359  0871               	movf	Kernel_Co_Op_Timer_ISR@i,w
  5672  035A  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5673  035B  3001               	movlw	1
  5674  035C                     u215_25:	
  5675  035C  1003               	clrc
  5676  035D  0DF0               	rlf	??_Kernel_Co_Op_Timer_ISR,f
  5677  035E  3EFF               	addlw	-1
  5678  035F  1D03               	skipz
  5679  0360  2B5C               	goto	u215_25
  5680  0361  1003               	clrc
  5681  0362  0D70               	rlf	??_Kernel_Co_Op_Timer_ISR,w
  5682  0363  3E20               	addlw	_Kernel_stTimer& (0+255)
  5683  0364  0084               	movwf	4
  5684  0365  1383               	bcf	3,7	;select IRP bank0
  5685  0366  0800               	movf	0,w
  5686  0367  3A01               	xorlw	1
  5687  0368  1D03               	skipz
  5688  0369  2B89               	goto	i1l2821
  5689                           
  5690                           ;os.c: 124: {
  5691                           ;os.c: 126: if(Kernel_stTimer[i].TimerValue != 0)
  5692  036A  0871               	movf	Kernel_Co_Op_Timer_ISR@i,w
  5693  036B  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5694  036C  3001               	movlw	1
  5695  036D                     u217_25:	
  5696  036D  1003               	clrc
  5697  036E  0DF0               	rlf	??_Kernel_Co_Op_Timer_ISR,f
  5698  036F  3EFF               	addlw	-1
  5699  0370  1D03               	skipz
  5700  0371  2B6D               	goto	u217_25
  5701  0372  1003               	clrc
  5702  0373  0D70               	rlf	??_Kernel_Co_Op_Timer_ISR,w
  5703  0374  3E01               	addlw	1
  5704  0375  3E20               	addlw	_Kernel_stTimer& (0+255)
  5705  0376  0084               	movwf	4
  5706  0377  0880               	movf	0,f
  5707  0378  1903               	skipnz
  5708  0379  2B89               	goto	i1l2821
  5709                           
  5710                           ;os.c: 127: {
  5711                           ;os.c: 128: Kernel_stTimer[i].TimerValue--;
  5712  037A  0871               	movf	Kernel_Co_Op_Timer_ISR@i,w
  5713  037B  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5714  037C  3001               	movlw	1
  5715  037D                     u219_25:	
  5716  037D  1003               	clrc
  5717  037E  0DF0               	rlf	??_Kernel_Co_Op_Timer_ISR,f
  5718  037F  3EFF               	addlw	-1
  5719  0380  1D03               	skipz
  5720  0381  2B7D               	goto	u219_25
  5721  0382  1003               	clrc
  5722  0383  0D70               	rlf	??_Kernel_Co_Op_Timer_ISR,w
  5723  0384  3E01               	addlw	1
  5724  0385  3E20               	addlw	_Kernel_stTimer& (0+255)
  5725  0386  0084               	movwf	4
  5726  0387  3001               	movlw	1
  5727  0388  0280               	subwf	0,f
  5728  0389                     i1l2821:	
  5729  0389  3001               	movlw	1
  5730  038A  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5731  038B  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5732  038C  07F1               	addwf	Kernel_Co_Op_Timer_ISR@i,f
  5733  038D  3002               	movlw	2
  5734  038E  0271               	subwf	Kernel_Co_Op_Timer_ISR@i,w
  5735  038F  1C03               	skipc
  5736  0390  2B59               	goto	i1l2815
  5737  0391                     i1l2825:	
  5738                           
  5739                           ;os.c: 129: }
  5740                           ;os.c: 130: }
  5741                           ;os.c: 131: }
  5742                           ;os.c: 133: ms10_ctr+=1;
  5743  0391  3001               	movlw	1
  5744  0392  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5745  0393  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5746  0394  07FA               	addwf	Kernel_Co_Op_Timer_ISR@ms10_ctr,f
  5747  0395  0008               	return
  5748  0396                     __end_of_Kernel_Co_Op_Timer_ISR:	
  5749  0016                     
  5750                           	psect	functab
  5751  0100                     __pfunctab:	
  5752  0100                     __fptable:	
  5753  0100                     fptable:	
  5754  0100  00FF               	movwf	(btemp+1)& (0+127)
  5755  0101  3001               	movlw	high fptable
  5756  0102  008A               	movwf	10
  5757  0103  087F               	movf	(btemp+1)& (0+127),w
  5758  0104  0782               	addwf	2,f
  5759  0105                     fpbase:	
  5760  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  5761  0106                     fp__Systm_Ini_Proc_2:	
  5762  0106  118A  2888         	ljmp	_Systm_Ini_Proc_2
  5763  0108                     fp__Systm_Ini_Proc_1:	
  5764  0108  118A  2F89         	ljmp	_Systm_Ini_Proc_1
  5765  010A                     fp__usege_timer:	
  5766  010A  118A  2F5E         	ljmp	_usege_timer
  5767  010C                     fp__adc_updator:	
  5768  010C  118A  2DC9         	ljmp	_adc_updator
  5769  010E                     fp__Led_Manager:	
  5770  010E  118A  291C         	ljmp	_Led_Manager
  5771  0110                     fp__Switch_Manager:	
  5772  0110  118A  2B96         	ljmp	_Switch_Manager
  5773  0112                     fp__Eep_Manager:	
  5774  0112  118A  2CF5         	ljmp	_Eep_Manager
  5775  0114                     fp__Uart_Manager:	
  5776  0114  118A  2FEB         	ljmp	_Uart_Manager
  5777  0116                     fp__Api_Uart_Read_Rx:	
  5778  0116  118A  2862         	ljmp	_Api_Uart_Read_Rx
  5779  0118                     fp__System_Status_Indicator:	
  5780  0118  118A  2EA3         	ljmp	_System_Status_Indicator
  5781  011A                     fp__Sw_Timer_Updator:	
  5782  011A  118A  2C4B         	ljmp	_Sw_Timer_Updator
  5783  011C                     __end_of__fptable:	
  5784  007E                     btemp	set	126	;btemp
  5785  007E                     wtemp	set	126
  5786  007E                     wtemp0	set	126
  5787  0080                     wtemp1	set	128
  5788  0082                     wtemp2	set	130
  5789  0084                     wtemp3	set	132
  5790  0086                     wtemp4	set	134
  5791  0088                     wtemp5	set	136
  5792  007F                     wtemp6	set	127
  5793  007E                     ttemp	set	126
  5794  007E                     ttemp0	set	126
  5795  0081                     ttemp1	set	129
  5796  0084                     ttemp2	set	132
  5797  0087                     ttemp3	set	135
  5798  007F                     ttemp4	set	127
  5799  007E                     ltemp	set	126
  5800  007E                     ltemp0	set	126
  5801  0082                     ltemp1	set	130
  5802  0086                     ltemp2	set	134
  5803  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    31
    Data        34
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     21      75
    BANK1            80      0      53
    BANK2            80      0       0

Pointer List with Targets:

    S515$rx_data_ptr	PTR unsigned char  size(1) Largest target is 13
		 -> Uart_Net_Mgr.Uart_Rx(BANK1[13]), 

    Uart_Net_Mgr.Uart_Rx.rx_data_ptr	PTR unsigned char  size(1) Largest target is 13
		 -> Uart_Net_Mgr.Uart_Rx.RX_DATA(BANK1[8]), Uart_Net_Mgr.Uart_Rx(BANK1[13]), 

    Kernel_vRunContainer@afpContainerArray	PTR const PTR FTN()void  size(2) Largest target is 3
		 -> Kernel_vHWReset(CODE[3]), 

    S251$cb	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    Kernel_stTimer.cb	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    Os_Task_Ptr_Temp	PTR FTN()void  size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    S256$Os_ms_Task_Ptr	PTR const PTR FTN()void [6] size(2) Largest target is 3
		 -> Os_Back_Ground_Task(CODE[3]), Os_1000ms_Task(CODE[2]), Os_200ms_Task(CODE[3]), Os_100ms_Task(CODE[2]), 
		 -> Os_50ms_Task(CODE[2]), Os_10ms_Task(CODE[3]), 

    Nano_Os.Os_ms_Task_Ptr	PTR const PTR FTN()void [6] size(2) Largest target is 3
		 -> Os_Back_Ground_Task(CODE[3]), Os_1000ms_Task(CODE[2]), Os_200ms_Task(CODE[3]), Os_100ms_Task(CODE[2]), 
		 -> Os_50ms_Task(CODE[2]), Os_10ms_Task(CODE[3]), 

    Os_Back_Ground_Task	const PTR FTN()void [3] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_1000ms_Task	const PTR FTN()void [2] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_200ms_Task	const PTR FTN()void [3] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_100ms_Task	const PTR FTN()void [2] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_50ms_Task	const PTR FTN()void [2] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_10ms_Task	const PTR FTN()void [3] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Kernel_vHWReset	const PTR FTN()void [3] size(1) Largest target is 0
		 -> Absolute function(), Systm_Ini_Proc_2(), Systm_Ini_Proc_1(), 


Critical Paths under _main in COMMON

    _main->_Eep_Manager
    _System_Status_Indicator->_Api_Led_Control
    _Switch_Manager->_Dio_Read
    _Led_Manager->_Dio_Write
    _Systm_Ini_Proc_2->_delay_ms
    _Systm_Ini_Proc_1->_usage_time_ini
    _Pwm_Ini->_set_bit_position
    _EEP_to_RAM->_check_eep_checksum
    _check_eep_checksum->_EEP_READ

Critical Paths under _isr in COMMON

    _isr->_Kernel_Co_Op_Timer_ISR

Critical Paths under _main in BANK0

    _main->_Led_Manager
    _System_Status_Indicator->_Api_Led_Control
    _Switch_Manager->_Dio_Read
    _Led_Manager->_Dio_Write
    _Kernel_vRunContainer->_Systm_Ini_Proc_1
    _Systm_Ini_Proc_2->_delay_ms
    _Systm_Ini_Proc_1->_EEP_to_RAM
    _Pwm_Ini->_set_bit_position
    _EEP_to_RAM->_check_eep_checksum
    _check_eep_checksum->_EEP_READ

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3177
                                             17 BANK0      4     4      0
                   Absolute function *
                   _Api_Uart_Read_Rx *
                        _Eep_Manager *
               _Kernel_vRunContainer
                        _Led_Manager *
                   _Sw_Timer_Updator *
                     _Switch_Manager *
            _System_Status_Indicator *
                       _Uart_Manager *
                        _adc_updator *
                        _usege_timer *
 ---------------------------------------------------------------------------------
 (1) _usege_timer                                          1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_updator                                          3     3      0      23
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Uart_Manager                                         1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _System_Status_Indicator                              1     1      0     216
                                              1 BANK0      1     1      0
                    _Api_Led_Control
 ---------------------------------------------------------------------------------
 (2) _Api_Led_Control                                      3     2      1     216
                                              6 COMMON     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Manager                                       5     5      0     578
                                              4 BANK0      5     5      0
                           _Dio_Read
 ---------------------------------------------------------------------------------
 (1) _Sw_Timer_Updator                                     4     4      0     156
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Led_Manager                                          5     5      0    1386
                                             12 BANK0      5     5      0
                           _Dio_Read
                          _Dio_Write
 ---------------------------------------------------------------------------------
 (2) _Dio_Write                                           14    12      2     742
                                              6 COMMON     2     0      2
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (2) _Dio_Read                                             5     4      1     267
                                              6 COMMON     1     0      1
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Kernel_vRunContainer                                 2     0      2     795
                                             12 BANK0      2     0      2
                   Absolute function *
                   _Systm_Ini_Proc_1 *
                   _Systm_Ini_Proc_2 *
 ---------------------------------------------------------------------------------
 (2) _Systm_Ini_Proc_2                                     0     0      0     144
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             4     2      2     144
                                              6 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Systm_Ini_Proc_1                                     1     1      0     553
                                             11 BANK0      1     1      0
                            _Adc_Ini
                            _Dio_Ini
                         _EEP_to_RAM
                            _Eep_Ini
                             _Os_Ini
                            _Pwm_Ini
                           _Uart_Ini
                     _usage_time_ini
 ---------------------------------------------------------------------------------
 (3) _usage_time_ini                                       6     6      0      23
                                              6 COMMON     2     2      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Uart_Ini                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Pwm_Ini                                              0     0      0      97
                   _set_bit_position
 ---------------------------------------------------------------------------------
 (4) _set_bit_position                                     3     2      1      97
                                              6 COMMON     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Os_Ini                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Eep_Ini                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EEP_to_RAM                                           7     7      0     433
                                              4 BANK0      7     7      0
                           _EEP_READ
                 _check_eep_checksum
 ---------------------------------------------------------------------------------
 (4) _check_eep_checksum                                   3     3      0     159
                                              7 COMMON     1     1      0
                                              2 BANK0      2     2      0
                           _EEP_READ
 ---------------------------------------------------------------------------------
 (5) _EEP_READ                                             3     3      0      45
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Dio_Ini                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Adc_Ini                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Eep_Manager                                          2     2      0      23
                                              6 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Api_Uart_Read_Rx                                     1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0     112
                                              2 COMMON     4     4      0
             _Kernel_Co_Op_Timer_ISR
                           _Uart_Isr
 ---------------------------------------------------------------------------------
 (7) _Uart_Isr                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Kernel_Co_Op_Timer_ISR                               2     2      0     112
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   Absolute function(Fake) *
   _Api_Uart_Read_Rx *
   _Eep_Manager *
   _Kernel_vRunContainer *
     Absolute function(Fake) *
     _Systm_Ini_Proc_1 *
       _Adc_Ini
       _Dio_Ini
       _EEP_to_RAM
         _EEP_READ
         _check_eep_checksum
           _EEP_READ
       _Eep_Ini
       _Os_Ini
       _Pwm_Ini
         _set_bit_position
       _Uart_Ini
       _usage_time_ini
     _Systm_Ini_Proc_2 *
       _delay_ms
   _Led_Manager *
     _Dio_Read
     _Dio_Write
   _Sw_Timer_Updator *
   _Switch_Manager *
     _Dio_Read
   _System_Status_Indicator *
     _Api_Led_Control
   _Uart_Manager *
   _adc_updator *
   _usege_timer *

 _isr (ROOT)
   _Kernel_Co_Op_Timer_ISR
   _Uart_Isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      35       5       66.3%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      4B       3       93.8%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8E      10        0.0%
ABS                  0      0      8E       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Mon May 30 03:10:34 2016

                            __CFG_CP$ON 0000                                       _i 0041  
                                     pc 0002                  Led_Manager@u8_temp_led 0061  
                                    l60 05D8                                      l61 05FA  
                                    l63 05DD                                      _GO 00F9  
                                    _RD 0C60                             __CFG_CPD$ON 0000  
                                    _WR 0C61                                      fsr 0004  
               __size_of_Switch_Manager 005B                     fp__Sw_Timer_Updator 011A  
                     fp__Switch_Manager 0110                                     l144 03E5  
                                   l321 075B                                     l192 0287  
                                   l268 053D                                     l685 0792  
                                   _GIE 005F                                     _PR2 0092  
                                   _HTS 047A                                     _Dio 0043  
                                   _isr 05FC                                     fsr0 0004  
                                   indf 0000                             _usege_timer 075E  
                ??_Kernel_vRunContainer 0078                    __size_of_adc_updator 0033  
                           EEP_to_RAM@i 005B                             EEP_to_RAM@j 0059  
              __end_of_Sw_Timer_Updator 04A4                                    l2321 054A  
                                  l2331 055E                                    l2351 0581  
                                  l2335 0566                                    l2327 0551  
                                  l2417 04D6                                    l2409 04BD  
                                  l2521 0214                                    l2347 057F  
                                  l2355 0583                                    l2531 0245  
                                  l2515 01F9                                    l2611 05E4  
                                  l2533 0248                                    l2509 01E0  
                                  l2551 03F5                                    l2543 0279  
                                  l2527 022D                                    l2519 0211  
                                  l2615 05EA                                    l2607 05DB  
                                  l2631 0149                                    l2561 0420  
                                  l2641 01D0                                    l2491 0687  
                                  l2563 0425                                    l2555 0408  
                                  l2539 0261                                    l2547 027C  
                                  l2619 05EC                                    l2635 0173  
                                  l2643 01D5                                    l2485 0692  
                                  l2557 040D                                    l2573 043F  
                                  l2661 03D9                                    l2567 0438  
                                  l2663 03E1                                    l2671 04F6  
                                  l2489 069A                                    l2569 043D  
                                  l2841 049F                                    l2915 02E7  
                                  l2907 0299                                    l2781 07AD  
                                  l2773 0783                                    l2677 0510  
                                  l2925 0304                                    l2687 052B  
                                  l2679 0512                                    l2695 0530  
                                  l2919 02F0                                    l2881 07F7  
                                  l2929 030C                                    l2875 06B0  
                                  l2899 0291                                    _ADIE 0466  
                                  _ADIF 0066                                    _ADFM 00FF  
                                  ?_isr 0070                                    _ADON 00F8  
                                  _CHS0 00FA                                    _CHS1 00FB  
                                  _EEIE 046C                                    _EEIF 006C  
                                  _ANS0 08F0                                    _ANS1 08F1  
                                  _ANS3 08F3                                    _ANS4 08F4  
                                  _ANS5 08F5                                    _BRGH 04C2  
                                  _T0IE 005D                                    _T0IF 005A  
                                  _CREN 00C4                                    u2105 076F  
                                  u2225 0455                                    u1604 007A  
                                  u1605 0078                                    u2245 0466  
                                  u2265 0476                                    u2275 0484  
                                  u2285 0493                                    u2454 02C8  
                                  u2455 02C6                                    u1824 0255  
                                  u1744 01ED                                    u1825 0253  
                                  u1745 01EB                                    u1834 026B  
                                  u1754 0203                                    u1675 0757  
                                  u1835 0268                                    u1755 0200  
                                  u1854 03FF                                    u1855 03FD  
                                  u1784 0221                                    u1785 021F  
                                  u1874 0417                                    u1794 0237  
                                  u1875 0415                                    u1795 0234  
                                  _PEIE 005E                                    u1894 042F  
                                  _INTF 0059                                    u1895 042D  
                                  _RCIE 0465                                    _RCIF 0065  
                                  _OERR 00C1                                    _VCFG 00FE  
                                  _TMR0 0001                                    _TMR1 000E  
                                  _TMR2 0011                                    _SPEN 00C7  
                                  _WREN 0C62                                    _TXEN 04C5  
                                  _TXIF 0064                                    _SYNC 04C4  
                         _eep10_absaddr 2109                                    _eep0 2100  
                                  _eep1 2101                                    _eep2 2102  
                                  _eep3 2103                                    _eep4 2104  
                                  _eep5 2105                                    _eep6 2106  
                                  _eep7 2107                                    _eep8 2108  
                   __end_of_Led_Manager 01DC                      Dio_Write@bit_value 0077  
                                  _main 0288                         __end_of_Adc_Ini 07EB  
                                  btemp 007E                                    ltemp 007E  
                                  start 0011                                    ttemp 007E  
                                  wtemp 007E                           __CFG_IESO$OFF 0000  
                       __end_of_Eep_Ini 0094                         __end_of_Dio_Ini 06E6  
        Kernel_Co_Op_Timer_ISR@ms10_ctr 007A          Kernel_Co_Op_Timer_ISR@ms50_ctr 003E  
                      __end_of_EEP_READ 0052                                   ??_isr 0072  
                       __end_of_Pwm_Ini 066A                                   ?_main 0070  
                                 _EEADR 010D                              _Led_Matrix 0712  
                                 _EEDAT 010C                                   _BRG16 04DB  
                         __CFG_WDTE$OFF 0000                                   _ANSEL 011E  
                                 _T2CON 0012                                   _RABIF 0058  
                                 i1l730 05A8                                   i1l735 05C5  
                                 i1l682 0623                                   _RCREG 001A  
                                 _SPBRG 0099                                   _PORTA 0005  
                                 _PORTB 0006                                   _PORTC 0007  
                                 _TXREG 0019                     fp__Systm_Ini_Proc_1 0108  
                   fp__Systm_Ini_Proc_2 0106                           __CFG_PWRTE$ON 0000  
                        __CFG_FCMEN$OFF 0000                                   _abc11 210A  
                                 _abc12 210B                                   _eep10 2109  
                           _Eep_Manager 04F5                     __size_of_EEP_to_RAM 0051  
                         _Switch_Matrix 0718                                   fpbase 0105  
                        _usage_time_ini 0731                          __CFG_BOREN$OFF 0000  
                                 pclath 000A                                   ltemp0 007E  
                                 ltemp1 0082                                   ltemp2 0086  
                                 ltemp3 0080                     check_eep_checksum@i 0055  
              __end_of_Systm_Ini_Proc_1 07AD                __end_of_Systm_Ini_Proc_2 0090  
              __size_of_Api_Led_Control 0017                                   ttemp0 007E  
                                 ttemp1 0081                                   ttemp2 0084  
                                 ttemp3 0087                                   ttemp4 007F  
                                 status 0003                                   wtemp0 007E  
                                 wtemp1 0080                                   wtemp2 0082  
                                 wtemp3 0084                                   wtemp4 0086  
                                 wtemp5 0088                                   wtemp6 007F  
       Kernel_Co_Op_Timer_ISR@ms200_ctr 003D                            _eep0_absaddr 2100  
                      __end_of_Dio_Read 044B                            _eep1_absaddr 2101  
                         _adc_chn0_data 0034                           _adc_chn1_data 0036  
                         _adc_chn2_data 0038                          __CFG_MCLRE$OFF 0000  
                         _adc_chn3_data 003A                            _eep2_absaddr 2102  
                       __initialization 0013                            __end_of_eep0 2101  
                          __end_of_eep1 2102                            __end_of_eep2 2103  
                          __end_of_eep3 2104                            __end_of_eep4 2105  
                          __end_of_eep5 2106                            __end_of_eep6 2107  
                          __end_of_eep7 2108                            __end_of_eep8 2109  
                          _eep3_absaddr 2103                            __end_of_main 0316  
               num_to_string@num_string 0067                            _eep4_absaddr 2104  
                          _eep5_absaddr 2105                         _EEPRAM_APP_DATA 0032  
                          _eep6_absaddr 2106                      __size_of_Dio_Write 00AC  
                                ??_main 0063                            _eep7_absaddr 2107  
                  __end_of_Os_10ms_Task 0725                            _eep8_absaddr 2108  
                      __end_of_Uart_Ini 06FA                        __end_of_Uart_Isr 05C9  
                     ?_set_bit_position 0076                             _Led_Manager 011C  
                __end_of_usage_time_ini 075E                                  _ADCON0 001F  
                                _ADCON1 009F                      ??_set_bit_position 0077  
                             ??_Adc_Ini 0076                                  _ADRESH 001E  
                                _ADRESL 009E                                  _CCPR1L 0015  
                  __end_of_Os_50ms_Task 0731                                  _EECON2 018D  
                                _ANSELH 011F                                  i1l3021 0613  
                                i1l3007 0601                                  i1l3033 061F  
                                i1l3027 0618                                  i1l2803 0344  
                                i1l2821 0389                                  i1l2815 0359  
                                i1l2807 034B                                  i1l2825 0391  
                                i1l2809 0354                                  i1l2791 032C  
                                i1l2857 05A4                                  u215_25 035C  
                                u217_25 036D                                  u219_25 037D  
                             ??_Eep_Ini 0076                               ??_Dio_Ini 0076  
                                _OSCCON 008F                                  _TMR1IE 0460  
                                _TMR1IF 0060                                  _TMR1CS 0081  
                                _TMR2IF 0061                                  _TMR1ON 0080  
                                _TMR2ON 0092                       adc_updator@adc_no 0042  
                                _TRISA0 0428                                  _TRISA1 0429  
                                _TRISA2 042A                                  _TRISA3 042B  
                                _TRISC0 0438                                  _TRISA4 042C  
                                _TRISC1 0439                                  _TRISA5 042D  
                                _TRISC2 043A                                  _TRISB4 0434  
                                _TRISC3 043B                                  _TRISB5 0435  
                                _TRISC4 043C                                  _TRISB6 0436  
                                _TRISC5 043D                                  _TRISB7 0437  
                                _TRISC6 043E                                  _TRISC7 043F  
                      __end_of__fptable 011C                            __p_eep0_text 2100  
                          __p_eep1_text 2101                            __p_eep2_text 2102  
                          __p_eep3_text 2103                   __end_of_Os_100ms_Task 072F  
                          __p_eep4_text 2104                            __p_eep5_text 2105  
                          __p_eep6_text 2106                            __p_eep7_text 2107  
                          __p_eep8_text 2108                          _Kernel_stTimer 0020  
                      __end_of_delay_ms 06A3                                  _Os_Ini 066A  
                        _Os_1000ms_Task 072B                   __end_of_Os_200ms_Task 0728  
                             ??_Pwm_Ini 0078             __end_of_Os_Back_Ground_Task 072B  
       check_eep_checksum@checksum_data 0054                      _check_eep_checksum 053E  
                        _Switch_Manager 0396                ??_Kernel_Co_Op_Timer_ISR 0070  
              ?_System_Status_Indicator 0070                     ?_check_eep_checksum 0070  
                                fptable 0100                                  fptotal 0016  
             Api_Led_Control@led_status 0076                                  saved_w 007E  
                       ?_usage_time_ini 0070                               ?_EEP_READ 0070  
                       fp__Uart_Manager 0114                 __end_of__initialization 003B  
                     __end_of_Dio_Write 0288                    ??_check_eep_checksum 0077  
                __end_of_Os_1000ms_Task 072D                          fp__usege_timer 010A  
Switch_Manager@u8_st_temp_switch_ststus 0059                usage_time_ini@maint_time 0076  
                          ??_EEP_to_RAM 0056                    Eep_Manager@temp_data 0077  
                     ??_Api_Led_Control 0077                          __pcstackCOMMON 0070  
                         __end_of_abc11 210B                           __end_of_abc12 210C  
                __end_of_Switch_Manager 03F1                           __end_of_eep10 210A  
                          __pidataBANK0 06FA                            __pidataBANK1 062E  
                         __p_abc11_text 210A                           __p_abc12_text 210B  
             __size_of_Api_Uart_Read_Rx 000F                          _OPTION_REGbits 0081  
                          ?_usege_timer 0070                               ?_Dio_Read 0076  
                     ?_Sw_Timer_Updator 0070                              ??_EEP_READ 0076  
                    __end_of_EEP_to_RAM 04F5                              __pbssBANK0 0020  
                            __pbssBANK1 00BE                      ??_Sw_Timer_Updator 0052  
                        fp__Eep_Manager 0112                           ?_Uart_Manager 0070  
                               ?_Os_Ini 0070                               ?_Uart_Ini 0070  
                             ?_Uart_Isr 0070                              __pmaintext 0288  
                       ?_Switch_Manager 0070                         _Kernel_vHWReset 071F  
                            __pintentry 0004                                 _CCP1CON 0017  
                         __p_eep10_text 2109                        _Os_Task_Ptr_Temp 003F  
       __size_of_Kernel_Co_Op_Timer_ISR 0080                                 _T1OSCEN 0083  
                         ??_adc_updator 0076                 Kernel_Co_Op_Timer_ISR@i 0071  
                            ??_Dio_Read 0052                               ?_delay_ms 0076  
                          ?_Eep_Manager 0070                                 _PSTRCON 019D  
                               _Adc_Ini 07CC           __size_of_Kernel_vRunContainer 001F  
                            __stringtab 0700                                 _Eep_Ini 0090  
                               _Eep_Mgr 002E                                 _Dio_Ini 06D1  
                     ?_Systm_Ini_Proc_1 0070                       ?_Systm_Ini_Proc_2 0070  
                       Dio_Write@pin_no 0076                                 _Nano_Os 00A0  
                        ??_Uart_Manager 0076                            _Os_10ms_Task 0722  
                    ??_Systm_Ini_Proc_1 005D                      ??_Systm_Ini_Proc_2 0078  
                        fp__Led_Manager 010E                         __size_of_Os_Ini 001D  
                            ??_Uart_Ini 0076                              ??_Uart_Isr 0070  
                               _Pwm_Ini 064C            set_bit_position@bit_position 0076  
                          _Os_50ms_Task 072F                          Dio_Read@pin_no 0076  
                               __ptext1 044B                                 __ptext2 06A3  
                               __ptext3 0062                                 __ptext4 07EB  
                               __ptext5 04F5                                 __ptext6 0396  
                               __ptext7 011C                                 __ptext8 05C9  
                               __ptext9 075E                            __size_of_isr 0032  
                            ??_delay_ms 0052                            ?_Led_Manager 0070  
                               clrloop0 0081                    end_of_initialization 003B  
                   __end_of_adc_updator 05FC                  _Kernel_Co_Op_Timer_ISR 0316  
               __end_of_Kernel_vHWReset 0722                           _abc11_absaddr 210A  
             __size_of_set_bit_position 000F                           _abc12_absaddr 210B  
              Api_Get_Pwm@dutycycle_old 003C                            __pstringtext 0700  
                      _Api_Uart_Read_Rx 0062                        ??_usage_time_ini 0052  
           EEP_to_RAM@eep_error_stetegy 0057                    __size_of_usege_timer 002B  
                            _usage_time 0078        __size_of_System_Status_Indicator 0017  
                       _Api_Led_Control 06BA                       __size_of_EEP_READ 0014  
                         _Dio_Write$120 0058                           _Dio_Write$121 005A  
                         _Dio_Write$122 005C                      __end_of_Led_Matrix 0718  
                             _Dio_Write 01DC                       Sw_Timer_Updator@i 0076  
                        __end_of_Os_Ini 0687         usege_timer@usage_time_res_count 007D  
                    _EEPRAM_SYSTEM_DATA 0028                             _adc_updator 05C9  
                  __end_of_Uart_Manager 0800                     start_initialization 0013  
                           __end_of_isr 062E                       __size_of_Dio_Read 005A  
                   EEP_to_RAM@temp_data 0058                    __size_of_Eep_Manager 0049  
                  adc_updator@temp_data 0052                         EEP_to_RAM@i_191 005C  
                       EEP_to_RAM@j_192 005A             __size_of_check_eep_checksum 0047  
                      ??_Switch_Manager 0056                                ??_Os_Ini 0076  
                            ?_Dio_Write 0076                   Api_Led_Control@led_no 0052  
             __size_of_Sw_Timer_Updator 0059                              init_fetch0 0052  
                     __size_of_Uart_Ini 0014                           EEP_READ@Index 0052  
                     __size_of_Uart_Isr 0044                             __pdataBANK0 0067  
                           __pdataBANK1 00A0                 __end_of_Api_Led_Control 06D1  
                           __pbssCOMMON 0078                               ___latbits 0001  
                         __pcstackBANK0 0052                       __size_of__fptable 001C  
                 __end_of_Switch_Matrix 071E                                ?_Adc_Ini 0070  
                     __size_of_delay_ms 001C                    __size_of_Led_Manager 00C0  
                              ?_Eep_Ini 0070                                ?_Dio_Ini 0070  
                      _set_bit_position 0071                           _Os_100ms_Task 072D  
                              ?_Pwm_Ini 0070                               __pfunctab 0100  
                         _Os_200ms_Task 0725            __end_of_Kernel_vRunContainer 07CC  
             __size_of_Systm_Ini_Proc_1 0024               __size_of_Systm_Ini_Proc_2 0008  
               set_bit_position@number1 0052                     fp__Api_Uart_Read_Rx 0116  
               ?_Kernel_Co_Op_Timer_ISR 0070                 _System_Status_Indicator 06A3  
            fp__System_Status_Indicator 0118                                _EEP_READ 003E  
              __end_of_Api_Uart_Read_Rx 0071                       interrupt_function 0004  
                             delay_ms@i 0053                               clear_ram0 0080  
                           ??_Dio_Write 0052                   __size_of_Uart_Manager 0015  
                           __stringbase 0712                        ?_Api_Led_Control 0076  
                              _Dio_Read 03F1          __end_of_Kernel_Co_Op_Timer_ISR 0396  
                      __size_of_Adc_Ini 001F                        Dio_Write@port_no 0057  
                      __size_of_Eep_Ini 0004                        __size_of_Dio_Ini 0015  
                        fp__adc_updator 010C                     _Os_Back_Ground_Task 0728  
                       _BACKGROUND_TASK 071E                      _start_stop_tmr_val 007C  
                          _Uart_Manager 07EB                                _Uart_Ini 06E6  
                          _Uart_Net_Mgr 00BE                                _Uart_Isr 0585  
                      _Sw_Timer_Updator 044B                        __size_of_Pwm_Ini 001E  
                          Led_Manager@i 0062                      __end_of__stringtab 0712  
                              __fptable 0100                            ?_adc_updator 0070  
                         ??_usege_timer 0076               ??_System_Status_Indicator 0053  
                              _delay_ms 0687                                __ptext10 06BA  
                              __ptext11 01DC                                __ptext20 0071  
                              __ptext12 03F1                                __ptext21 066A  
                              __ptext13 07AD                                __ptext30 0316  
                              __ptext22 0090                                __ptext14 0789  
                              __ptext23 04A4                                __ptext15 0088  
                              __ptext24 053E                                __ptext16 0687  
                              __ptext25 003E                                __ptext17 0731  
                              __ptext26 06D1                                __ptext18 06E6  
                              __ptext27 07CC                                __ptext19 064C  
                              __ptext28 05FC                                __ptext29 0585  
                       Dio_Read@port_no 0054          _Sys_u8_st_Globle_System_Status 0040  
                  _Kernel_vRunContainer 07AD                           __size_of_main 008E  
                            _EEP_to_RAM 04A4                        _Systm_Ini_Proc_1 0789  
                      _Systm_Ini_Proc_2 0088                __end_of_set_bit_position 0080  
                   delay_ms@delay_count 0076                           ??_Eep_Manager 0076  
                              init_ram0 0056                 __end_of_BACKGROUND_TASK 071F  
                 ?_Kernel_vRunContainer 005E                                intlevel1 0100  
                   __end_of_usege_timer 0789   Kernel_vRunContainer@afpContainerArray 005E  
            __end_of_check_eep_checksum 0585                 __size_of_usage_time_ini 002D  
                     EEP_READ@temp_data 0053         __end_of_System_Status_Indicator 06BA  
                             stringcode 070A                         Switch_Manager@i 005A  
                              stringtab 0700                           ??_Led_Manager 005E  
                    _maintainace_status 007B                  Dio_Read@temp_port_data 0055  
                   __end_of_Eep_Manager 053E                       ?_Api_Uart_Read_Rx 0070  
                     __CFG_FOSC$INTRCIO 0000                      ??_Api_Uart_Read_Rx 0076  
                           ?_EEP_to_RAM 0070  

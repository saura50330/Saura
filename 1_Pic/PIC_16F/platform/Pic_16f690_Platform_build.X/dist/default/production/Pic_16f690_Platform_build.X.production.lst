

Microchip Technology PIC LITE Macro Assembler V1.31 build 56723 
                                                                                               Mon May 30 01:47:32 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	_abc11_text,global,class=CODE,delta=2
     8                           	psect	_abc12_text,global,class=CODE,delta=2
     9                           	psect	_eep0_text,global,class=CODE,delta=2
    10                           	psect	_eep1_text,global,class=CODE,delta=2
    11                           	psect	_eep10_text,global,class=CODE,delta=2
    12                           	psect	_eep2_text,global,class=CODE,delta=2
    13                           	psect	_eep3_text,global,class=CODE,delta=2
    14                           	psect	_eep4_text,global,class=CODE,delta=2
    15                           	psect	_eep5_text,global,class=CODE,delta=2
    16                           	psect	_eep6_text,global,class=CODE,delta=2
    17                           	psect	_eep7_text,global,class=CODE,delta=2
    18                           	psect	_eep8_text,global,class=CODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    29                           	psect	maintext,global,class=CODE,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2
    32                           	psect	text3,local,class=CODE,merge=1,delta=2
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2
    36                           	psect	text7,local,class=CODE,merge=1,delta=2
    37                           	psect	text8,local,class=CODE,merge=1,delta=2
    38                           	psect	text9,local,class=CODE,merge=1,delta=2
    39                           	psect	text10,local,class=CODE,merge=1,delta=2
    40                           	psect	text11,local,class=CODE,merge=1,delta=2
    41                           	psect	text12,local,class=CODE,merge=1,delta=2
    42                           	psect	text13,local,class=CODE,merge=1,delta=2
    43                           	psect	text14,local,class=CODE,merge=1,delta=2
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,inline,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,inline,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,inline,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text29,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text30,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	functab,global,reloc=256,class=CODE,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011E                     	;# 
   131  011F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  019D                     	;# 
   135  019E                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0115                     	;# 
   198  0116                     	;# 
   199  0118                     	;# 
   200  0119                     	;# 
   201  011A                     	;# 
   202  011B                     	;# 
   203  011E                     	;# 
   204  011F                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  019D                     	;# 
   208  019E                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0095                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009E                     	;# 
   264  009F                     	;# 
   265  010C                     	;# 
   266  010C                     	;# 
   267  010D                     	;# 
   268  010E                     	;# 
   269  010F                     	;# 
   270  0115                     	;# 
   271  0116                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011E                     	;# 
   277  011F                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  019D                     	;# 
   281  019E                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  000A                     	;# 
   291  000B                     	;# 
   292  000C                     	;# 
   293  000D                     	;# 
   294  000E                     	;# 
   295  000E                     	;# 
   296  000F                     	;# 
   297  0010                     	;# 
   298  0011                     	;# 
   299  0012                     	;# 
   300  0013                     	;# 
   301  0014                     	;# 
   302  0015                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001C                     	;# 
   310  001D                     	;# 
   311  001E                     	;# 
   312  001F                     	;# 
   313  0081                     	;# 
   314  0085                     	;# 
   315  0086                     	;# 
   316  0087                     	;# 
   317  008C                     	;# 
   318  008D                     	;# 
   319  008E                     	;# 
   320  008F                     	;# 
   321  0090                     	;# 
   322  0092                     	;# 
   323  0093                     	;# 
   324  0093                     	;# 
   325  0093                     	;# 
   326  0094                     	;# 
   327  0095                     	;# 
   328  0095                     	;# 
   329  0096                     	;# 
   330  0096                     	;# 
   331  0097                     	;# 
   332  0098                     	;# 
   333  0099                     	;# 
   334  009A                     	;# 
   335  009B                     	;# 
   336  009E                     	;# 
   337  009F                     	;# 
   338  010C                     	;# 
   339  010C                     	;# 
   340  010D                     	;# 
   341  010E                     	;# 
   342  010F                     	;# 
   343  0115                     	;# 
   344  0116                     	;# 
   345  0118                     	;# 
   346  0119                     	;# 
   347  011A                     	;# 
   348  011B                     	;# 
   349  011E                     	;# 
   350  011F                     	;# 
   351  018C                     	;# 
   352  018D                     	;# 
   353  019D                     	;# 
   354  019E                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000D                     	;# 
   367  000E                     	;# 
   368  000E                     	;# 
   369  000F                     	;# 
   370  0010                     	;# 
   371  0011                     	;# 
   372  0012                     	;# 
   373  0013                     	;# 
   374  0014                     	;# 
   375  0015                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0017                     	;# 
   379  0018                     	;# 
   380  0019                     	;# 
   381  001A                     	;# 
   382  001C                     	;# 
   383  001D                     	;# 
   384  001E                     	;# 
   385  001F                     	;# 
   386  0081                     	;# 
   387  0085                     	;# 
   388  0086                     	;# 
   389  0087                     	;# 
   390  008C                     	;# 
   391  008D                     	;# 
   392  008E                     	;# 
   393  008F                     	;# 
   394  0090                     	;# 
   395  0092                     	;# 
   396  0093                     	;# 
   397  0093                     	;# 
   398  0093                     	;# 
   399  0094                     	;# 
   400  0095                     	;# 
   401  0095                     	;# 
   402  0096                     	;# 
   403  0096                     	;# 
   404  0097                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009A                     	;# 
   408  009B                     	;# 
   409  009E                     	;# 
   410  009F                     	;# 
   411  010C                     	;# 
   412  010C                     	;# 
   413  010D                     	;# 
   414  010E                     	;# 
   415  010F                     	;# 
   416  0115                     	;# 
   417  0116                     	;# 
   418  0118                     	;# 
   419  0119                     	;# 
   420  011A                     	;# 
   421  011B                     	;# 
   422  011E                     	;# 
   423  011F                     	;# 
   424  018C                     	;# 
   425  018D                     	;# 
   426  019D                     	;# 
   427  019E                     	;# 
   428  0000                     	;# 
   429  0001                     	;# 
   430  0002                     	;# 
   431  0003                     	;# 
   432  0004                     	;# 
   433  0005                     	;# 
   434  0006                     	;# 
   435  0007                     	;# 
   436  000A                     	;# 
   437  000B                     	;# 
   438  000C                     	;# 
   439  000D                     	;# 
   440  000E                     	;# 
   441  000E                     	;# 
   442  000F                     	;# 
   443  0010                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0015                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001C                     	;# 
   456  001D                     	;# 
   457  001E                     	;# 
   458  001F                     	;# 
   459  0081                     	;# 
   460  0085                     	;# 
   461  0086                     	;# 
   462  0087                     	;# 
   463  008C                     	;# 
   464  008D                     	;# 
   465  008E                     	;# 
   466  008F                     	;# 
   467  0090                     	;# 
   468  0092                     	;# 
   469  0093                     	;# 
   470  0093                     	;# 
   471  0093                     	;# 
   472  0094                     	;# 
   473  0095                     	;# 
   474  0095                     	;# 
   475  0096                     	;# 
   476  0096                     	;# 
   477  0097                     	;# 
   478  0098                     	;# 
   479  0099                     	;# 
   480  009A                     	;# 
   481  009B                     	;# 
   482  009E                     	;# 
   483  009F                     	;# 
   484  010C                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0115                     	;# 
   490  0116                     	;# 
   491  0118                     	;# 
   492  0119                     	;# 
   493  011A                     	;# 
   494  011B                     	;# 
   495  011E                     	;# 
   496  011F                     	;# 
   497  018C                     	;# 
   498  018D                     	;# 
   499  019D                     	;# 
   500  019E                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000D                     	;# 
   513  000E                     	;# 
   514  000E                     	;# 
   515  000F                     	;# 
   516  0010                     	;# 
   517  0011                     	;# 
   518  0012                     	;# 
   519  0013                     	;# 
   520  0014                     	;# 
   521  0015                     	;# 
   522  0015                     	;# 
   523  0016                     	;# 
   524  0017                     	;# 
   525  0018                     	;# 
   526  0019                     	;# 
   527  001A                     	;# 
   528  001C                     	;# 
   529  001D                     	;# 
   530  001E                     	;# 
   531  001F                     	;# 
   532  0081                     	;# 
   533  0085                     	;# 
   534  0086                     	;# 
   535  0087                     	;# 
   536  008C                     	;# 
   537  008D                     	;# 
   538  008E                     	;# 
   539  008F                     	;# 
   540  0090                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0093                     	;# 
   544  0093                     	;# 
   545  0094                     	;# 
   546  0095                     	;# 
   547  0095                     	;# 
   548  0096                     	;# 
   549  0096                     	;# 
   550  0097                     	;# 
   551  0098                     	;# 
   552  0099                     	;# 
   553  009A                     	;# 
   554  009B                     	;# 
   555  009E                     	;# 
   556  009F                     	;# 
   557  010C                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  010E                     	;# 
   561  010F                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0118                     	;# 
   565  0119                     	;# 
   566  011A                     	;# 
   567  011B                     	;# 
   568  011E                     	;# 
   569  011F                     	;# 
   570  018C                     	;# 
   571  018D                     	;# 
   572  019D                     	;# 
   573  019E                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  000A                     	;# 
   583  000B                     	;# 
   584  000C                     	;# 
   585  000D                     	;# 
   586  000E                     	;# 
   587  000E                     	;# 
   588  000F                     	;# 
   589  0010                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0014                     	;# 
   594  0015                     	;# 
   595  0015                     	;# 
   596  0016                     	;# 
   597  0017                     	;# 
   598  0018                     	;# 
   599  0019                     	;# 
   600  001A                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  0081                     	;# 
   606  0085                     	;# 
   607  0086                     	;# 
   608  0087                     	;# 
   609  008C                     	;# 
   610  008D                     	;# 
   611  008E                     	;# 
   612  008F                     	;# 
   613  0090                     	;# 
   614  0092                     	;# 
   615  0093                     	;# 
   616  0093                     	;# 
   617  0093                     	;# 
   618  0094                     	;# 
   619  0095                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0096                     	;# 
   623  0097                     	;# 
   624  0098                     	;# 
   625  0099                     	;# 
   626  009A                     	;# 
   627  009B                     	;# 
   628  009E                     	;# 
   629  009F                     	;# 
   630  010C                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  010F                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0118                     	;# 
   638  0119                     	;# 
   639  011A                     	;# 
   640  011B                     	;# 
   641  011E                     	;# 
   642  011F                     	;# 
   643  018C                     	;# 
   644  018D                     	;# 
   645  019D                     	;# 
   646  019E                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000D                     	;# 
   659  000E                     	;# 
   660  000E                     	;# 
   661  000F                     	;# 
   662  0010                     	;# 
   663  0011                     	;# 
   664  0012                     	;# 
   665  0013                     	;# 
   666  0014                     	;# 
   667  0015                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001C                     	;# 
   675  001D                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  0081                     	;# 
   679  0085                     	;# 
   680  0086                     	;# 
   681  0087                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008F                     	;# 
   686  0090                     	;# 
   687  0092                     	;# 
   688  0093                     	;# 
   689  0093                     	;# 
   690  0093                     	;# 
   691  0094                     	;# 
   692  0095                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0096                     	;# 
   696  0097                     	;# 
   697  0098                     	;# 
   698  0099                     	;# 
   699  009A                     	;# 
   700  009B                     	;# 
   701  009E                     	;# 
   702  009F                     	;# 
   703  010C                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  010F                     	;# 
   708  0115                     	;# 
   709  0116                     	;# 
   710  0118                     	;# 
   711  0119                     	;# 
   712  011A                     	;# 
   713  011B                     	;# 
   714  011E                     	;# 
   715  011F                     	;# 
   716  018C                     	;# 
   717  018D                     	;# 
   718  019D                     	;# 
   719  019E                     	;# 
   720  0000                     	;# 
   721  0001                     	;# 
   722  0002                     	;# 
   723  0003                     	;# 
   724  0004                     	;# 
   725  0005                     	;# 
   726  0006                     	;# 
   727  0007                     	;# 
   728  000A                     	;# 
   729  000B                     	;# 
   730  000C                     	;# 
   731  000D                     	;# 
   732  000E                     	;# 
   733  000E                     	;# 
   734  000F                     	;# 
   735  0010                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0015                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001C                     	;# 
   748  001D                     	;# 
   749  001E                     	;# 
   750  001F                     	;# 
   751  0081                     	;# 
   752  0085                     	;# 
   753  0086                     	;# 
   754  0087                     	;# 
   755  008C                     	;# 
   756  008D                     	;# 
   757  008E                     	;# 
   758  008F                     	;# 
   759  0090                     	;# 
   760  0092                     	;# 
   761  0093                     	;# 
   762  0093                     	;# 
   763  0093                     	;# 
   764  0094                     	;# 
   765  0095                     	;# 
   766  0095                     	;# 
   767  0096                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009E                     	;# 
   775  009F                     	;# 
   776  010C                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  010E                     	;# 
   780  010F                     	;# 
   781  0115                     	;# 
   782  0116                     	;# 
   783  0118                     	;# 
   784  0119                     	;# 
   785  011A                     	;# 
   786  011B                     	;# 
   787  011E                     	;# 
   788  011F                     	;# 
   789  018C                     	;# 
   790  018D                     	;# 
   791  019D                     	;# 
   792  019E                     	;# 
   793  0000                     	;# 
   794  0001                     	;# 
   795  0002                     	;# 
   796  0003                     	;# 
   797  0004                     	;# 
   798  0005                     	;# 
   799  0006                     	;# 
   800  0007                     	;# 
   801  000A                     	;# 
   802  000B                     	;# 
   803  000C                     	;# 
   804  000D                     	;# 
   805  000E                     	;# 
   806  000E                     	;# 
   807  000F                     	;# 
   808  0010                     	;# 
   809  0011                     	;# 
   810  0012                     	;# 
   811  0013                     	;# 
   812  0014                     	;# 
   813  0015                     	;# 
   814  0015                     	;# 
   815  0016                     	;# 
   816  0017                     	;# 
   817  0018                     	;# 
   818  0019                     	;# 
   819  001A                     	;# 
   820  001C                     	;# 
   821  001D                     	;# 
   822  001E                     	;# 
   823  001F                     	;# 
   824  0081                     	;# 
   825  0085                     	;# 
   826  0086                     	;# 
   827  0087                     	;# 
   828  008C                     	;# 
   829  008D                     	;# 
   830  008E                     	;# 
   831  008F                     	;# 
   832  0090                     	;# 
   833  0092                     	;# 
   834  0093                     	;# 
   835  0093                     	;# 
   836  0093                     	;# 
   837  0094                     	;# 
   838  0095                     	;# 
   839  0095                     	;# 
   840  0096                     	;# 
   841  0096                     	;# 
   842  0097                     	;# 
   843  0098                     	;# 
   844  0099                     	;# 
   845  009A                     	;# 
   846  009B                     	;# 
   847  009E                     	;# 
   848  009F                     	;# 
   849  010C                     	;# 
   850  010C                     	;# 
   851  010D                     	;# 
   852  010E                     	;# 
   853  010F                     	;# 
   854  0115                     	;# 
   855  0116                     	;# 
   856  0118                     	;# 
   857  0119                     	;# 
   858  011A                     	;# 
   859  011B                     	;# 
   860  011E                     	;# 
   861  011F                     	;# 
   862  018C                     	;# 
   863  018D                     	;# 
   864  019D                     	;# 
   865  019E                     	;# 
   866  0000                     	;# 
   867  0001                     	;# 
   868  0002                     	;# 
   869  0003                     	;# 
   870  0004                     	;# 
   871  0005                     	;# 
   872  0006                     	;# 
   873  0007                     	;# 
   874  000A                     	;# 
   875  000B                     	;# 
   876  000C                     	;# 
   877  000D                     	;# 
   878  000E                     	;# 
   879  000E                     	;# 
   880  000F                     	;# 
   881  0010                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0014                     	;# 
   886  0015                     	;# 
   887  0015                     	;# 
   888  0016                     	;# 
   889  0017                     	;# 
   890  0018                     	;# 
   891  0019                     	;# 
   892  001A                     	;# 
   893  001C                     	;# 
   894  001D                     	;# 
   895  001E                     	;# 
   896  001F                     	;# 
   897  0081                     	;# 
   898  0085                     	;# 
   899  0086                     	;# 
   900  0087                     	;# 
   901  008C                     	;# 
   902  008D                     	;# 
   903  008E                     	;# 
   904  008F                     	;# 
   905  0090                     	;# 
   906  0092                     	;# 
   907  0093                     	;# 
   908  0093                     	;# 
   909  0093                     	;# 
   910  0094                     	;# 
   911  0095                     	;# 
   912  0095                     	;# 
   913  0096                     	;# 
   914  0096                     	;# 
   915  0097                     	;# 
   916  0098                     	;# 
   917  0099                     	;# 
   918  009A                     	;# 
   919  009B                     	;# 
   920  009E                     	;# 
   921  009F                     	;# 
   922  010C                     	;# 
   923  010C                     	;# 
   924  010D                     	;# 
   925  010E                     	;# 
   926  010F                     	;# 
   927  0115                     	;# 
   928  0116                     	;# 
   929  0118                     	;# 
   930  0119                     	;# 
   931  011A                     	;# 
   932  011B                     	;# 
   933  011E                     	;# 
   934  011F                     	;# 
   935  018C                     	;# 
   936  018D                     	;# 
   937  019D                     	;# 
   938  019E                     	;# 
   939  0000                     	;# 
   940  0001                     	;# 
   941  0002                     	;# 
   942  0003                     	;# 
   943  0004                     	;# 
   944  0005                     	;# 
   945  0006                     	;# 
   946  0007                     	;# 
   947  000A                     	;# 
   948  000B                     	;# 
   949  000C                     	;# 
   950  000D                     	;# 
   951  000E                     	;# 
   952  000E                     	;# 
   953  000F                     	;# 
   954  0010                     	;# 
   955  0011                     	;# 
   956  0012                     	;# 
   957  0013                     	;# 
   958  0014                     	;# 
   959  0015                     	;# 
   960  0015                     	;# 
   961  0016                     	;# 
   962  0017                     	;# 
   963  0018                     	;# 
   964  0019                     	;# 
   965  001A                     	;# 
   966  001C                     	;# 
   967  001D                     	;# 
   968  001E                     	;# 
   969  001F                     	;# 
   970  0081                     	;# 
   971  0085                     	;# 
   972  0086                     	;# 
   973  0087                     	;# 
   974  008C                     	;# 
   975  008D                     	;# 
   976  008E                     	;# 
   977  008F                     	;# 
   978  0090                     	;# 
   979  0092                     	;# 
   980  0093                     	;# 
   981  0093                     	;# 
   982  0093                     	;# 
   983  0094                     	;# 
   984  0095                     	;# 
   985  0095                     	;# 
   986  0096                     	;# 
   987  0096                     	;# 
   988  0097                     	;# 
   989  0098                     	;# 
   990  0099                     	;# 
   991  009A                     	;# 
   992  009B                     	;# 
   993  009E                     	;# 
   994  009F                     	;# 
   995  010C                     	;# 
   996  010C                     	;# 
   997  010D                     	;# 
   998  010E                     	;# 
   999  010F                     	;# 
  1000  0115                     	;# 
  1001  0116                     	;# 
  1002  0118                     	;# 
  1003  0119                     	;# 
  1004  011A                     	;# 
  1005  011B                     	;# 
  1006  011E                     	;# 
  1007  011F                     	;# 
  1008  018C                     	;# 
  1009  018D                     	;# 
  1010  019D                     	;# 
  1011  019E                     	;# 
  1012                           
  1013                           	psect	idataBANK0
  1014  06FA                     __pidataBANK0:	
  1015                           
  1016                           ;initializer for num_to_string@num_string
  1017  06FA  3430               	retlw	48
  1018  06FB  3430               	retlw	48
  1019  06FC  3430               	retlw	48
  1020  06FD  3400               	retlw	0
  1021                           
  1022                           	psect	idataBANK1
  1023  062E                     __pidataBANK1:	
  1024                           
  1025                           ;initializer for _Nano_Os
  1026  062E  3422               	retlw	low (_Os_10ms_Task| (0+32768))
  1027  062F  3487               	retlw	high (_Os_10ms_Task| (0+32768))
  1028  0630  342F               	retlw	low (_Os_50ms_Task| (0+32768))
  1029  0631  3487               	retlw	high (_Os_50ms_Task| (0+32768))
  1030  0632  342D               	retlw	low (_Os_100ms_Task| (0+32768))
  1031  0633  3487               	retlw	high (_Os_100ms_Task| (0+32768))
  1032  0634  3425               	retlw	low (_Os_200ms_Task| (0+32768))
  1033  0635  3487               	retlw	high (_Os_200ms_Task| (0+32768))
  1034  0636  342B               	retlw	low (_Os_1000ms_Task| (0+32768))
  1035  0637  3487               	retlw	high (_Os_1000ms_Task| (0+32768))
  1036  0638  3428               	retlw	low (_Os_Back_Ground_Task| (0+32768))
  1037  0639  3487               	retlw	high (_Os_Back_Ground_Task| (0+32768))
  1038  063A  3400               	retlw	0
  1039  063B  3400               	retlw	0
  1040  063C  3400               	retlw	0
  1041  063D  3400               	retlw	0
  1042  063E  3400               	retlw	0
  1043  063F  3400               	retlw	0
  1044  0640  3400               	retlw	0
  1045  0641  3400               	retlw	0
  1046  0642  3400               	retlw	0
  1047  0643  3400               	retlw	0
  1048  0644  3400               	retlw	0
  1049  0645  3401               	retlw	1
  1050  0646  34FF               	retlw	255
  1051  0647  34FF               	retlw	255
  1052  0648  34FF               	retlw	255
  1053  0649  34FF               	retlw	255
  1054  064A  34FF               	retlw	255
  1055  064B  34FF               	retlw	255
  1056                           
  1057                           	psect	stringtext
  1058  0700                     __pstringtext:	
  1059  0700                     stringtab:	
  1060  0700                     __stringtab:	
  1061                           
  1062                           ;	String table - string pointers are 2 bytes each
  1063  0700  1BFF               	btfsc	btemp+1,7
  1064  0701  2F0A               	ljmp	stringcode
  1065  0702  1383               	bcf	3,7
  1066  0703  187F               	btfsc	btemp+1,0
  1067  0704  1783               	bsf	3,7
  1068  0705  0800               	movf	0,w
  1069  0706  0A84               	incf	4,f
  1070  0707  1903               	skipnz
  1071  0708  0AFF               	incf	btemp+1,f
  1072  0709  0008               	return
  1073  070A                     stringcode:	
  1074  070A  087F               	movf	btemp+1,w
  1075  070B  397F               	andlw	127
  1076  070C  008A               	movwf	10
  1077  070D  0804               	movf	4,w
  1078  070E  0A84               	incf	4,f
  1079  070F  1903               	skipnz
  1080  0710  0AFF               	incf	btemp+1,f
  1081  0711  0082               	movwf	2
  1082  0712                     __stringbase:	
  1083  0712                     __end_of__stringtab:	
  1084  0712                     _Led_Matrix:	
  1085  0712  3400               	retlw	0
  1086  0713  3401               	retlw	1
  1087  0714  3401               	retlw	1
  1088  0715  3400               	retlw	0
  1089  0716  3402               	retlw	2
  1090  0717  3401               	retlw	1
  1091  0718                     __end_of_Led_Matrix:	
  1092  0718                     _Switch_Matrix:	
  1093  0718  3400               	retlw	0
  1094  0719  3400               	retlw	0
  1095  071A  3401               	retlw	1
  1096  071B  3401               	retlw	1
  1097  071C  3402               	retlw	2
  1098  071D  3400               	retlw	0
  1099  071E                     __end_of_Switch_Matrix:	
  1100  071E                     _BACKGROUND_TASK:	
  1101  071E  3405               	retlw	5
  1102  071F                     __end_of_BACKGROUND_TASK:	
  1103  210A                     _abc11_absaddr	set	8458
  1104  210B                     _abc12_absaddr	set	8459
  1105  2100                     _eep0_absaddr	set	8448
  1106  2101                     _eep1_absaddr	set	8449
  1107  2109                     _eep10_absaddr	set	8457
  1108  2102                     _eep2_absaddr	set	8450
  1109  2103                     _eep3_absaddr	set	8451
  1110  2104                     _eep4_absaddr	set	8452
  1111  2105                     _eep5_absaddr	set	8453
  1112  2106                     _eep6_absaddr	set	8454
  1113  2107                     _eep7_absaddr	set	8455
  1114  2108                     _eep8_absaddr	set	8456
  1115  071F                     _Kernel_vHWReset:	
  1116  071F  3403               	retlw	(fp__Systm_Ini_Proc_1-fpbase)& (0+255)
  1117  0720  3401               	retlw	(fp__Systm_Ini_Proc_2-fpbase)& (0+255)
  1118  0721  3400               	retlw	0
  1119  0722                     __end_of_Kernel_vHWReset:	
  1120  0722                     _Os_10ms_Task:	
  1121  0722  340F               	retlw	(fp__Uart_Manager-fpbase)& (0+255)
  1122  0723  3407               	retlw	(fp__adc_updator-fpbase)& (0+255)
  1123  0724  3400               	retlw	0
  1124  0725                     __end_of_Os_10ms_Task:	
  1125  0725                     _Os_200ms_Task:	
  1126  0725  3413               	retlw	(fp__System_Status_Indicator-fpbase)& (0+255)
  1127  0726  3409               	retlw	(fp__Led_Manager-fpbase)& (0+255)
  1128  0727  3400               	retlw	0
  1129  0728                     __end_of_Os_200ms_Task:	
  1130  0728                     _Os_Back_Ground_Task:	
  1131  0728  340D               	retlw	(fp__Eep_Manager-fpbase)& (0+255)
  1132  0729  3415               	retlw	(fp__Sw_Timer_Updator-fpbase)& (0+255)
  1133  072A  3400               	retlw	0
  1134  072B                     __end_of_Os_Back_Ground_Task:	
  1135  072B                     _Os_1000ms_Task:	
  1136  072B  3405               	retlw	(fp__usege_timer-fpbase)& (0+255)
  1137  072C  3400               	retlw	0
  1138  072D                     __end_of_Os_1000ms_Task:	
  1139  072D                     _Os_100ms_Task:	
  1140  072D  340B               	retlw	(fp__Switch_Manager-fpbase)& (0+255)
  1141  072E  3400               	retlw	0
  1142  072F                     __end_of_Os_100ms_Task:	
  1143  072F                     _Os_50ms_Task:	
  1144  072F  3411               	retlw	(fp__Api_Uart_Read_Rx-fpbase)& (0+255)
  1145  0730  3400               	retlw	0
  1146  0731                     __end_of_Os_50ms_Task:	
  1147  210A                     _abc11_absaddr	set	8458
  1148                           
  1149                           	psect	_abc11_text
  1150  210A                     __p_abc11_text:	
  1151  210A                     _abc11:	
  1152  210A  34FF               	retlw	255
  1153  210B                     __end_of_abc11:	
  1154  210B                     _abc12_absaddr	set	8459
  1155                           
  1156                           	psect	_abc12_text
  1157  210B                     __p_abc12_text:	
  1158  210B                     _abc12:	
  1159  210B  34FF               	retlw	255
  1160  210C                     __end_of_abc12:	
  1161  2100                     _eep0_absaddr	set	8448
  1162                           
  1163                           	psect	_eep0_text
  1164  2100                     __p_eep0_text:	
  1165  2100                     _eep0:	
  1166  2100  34FF               	retlw	255
  1167  2101                     __end_of_eep0:	
  1168  2101                     _eep1_absaddr	set	8449
  1169                           
  1170                           	psect	_eep1_text
  1171  2101                     __p_eep1_text:	
  1172  2101                     _eep1:	
  1173  2101  340C               	retlw	12
  1174  2102                     __end_of_eep1:	
  1175  2109                     _eep10_absaddr	set	8457
  1176                           
  1177                           	psect	_eep10_text
  1178  2109                     __p_eep10_text:	
  1179  2109                     _eep10:	
  1180  2109  34FF               	retlw	255
  1181  210A                     __end_of_eep10:	
  1182  2102                     _eep2_absaddr	set	8450
  1183                           
  1184                           	psect	_eep2_text
  1185  2102                     __p_eep2_text:	
  1186  2102                     _eep2:	
  1187  2102  3466               	retlw	102
  1188  2103                     __end_of_eep2:	
  1189  2103                     _eep3_absaddr	set	8451
  1190                           
  1191                           	psect	_eep3_text
  1192  2103                     __p_eep3_text:	
  1193  2103                     _eep3:	
  1194  2103  34FF               	retlw	255
  1195  2104                     __end_of_eep3:	
  1196  2104                     _eep4_absaddr	set	8452
  1197                           
  1198                           	psect	_eep4_text
  1199  2104                     __p_eep4_text:	
  1200  2104                     _eep4:	
  1201  2104  3400               	retlw	0
  1202  2105                     __end_of_eep4:	
  1203  2105                     _eep5_absaddr	set	8453
  1204                           
  1205                           	psect	_eep5_text
  1206  2105                     __p_eep5_text:	
  1207  2105                     _eep5:	
  1208  2105  3400               	retlw	0
  1209  2106                     __end_of_eep5:	
  1210  2106                     _eep6_absaddr	set	8454
  1211                           
  1212                           	psect	_eep6_text
  1213  2106                     __p_eep6_text:	
  1214  2106                     _eep6:	
  1215  2106  3400               	retlw	0
  1216  2107                     __end_of_eep6:	
  1217  2107                     _eep7_absaddr	set	8455
  1218                           
  1219                           	psect	_eep7_text
  1220  2107                     __p_eep7_text:	
  1221  2107                     _eep7:	
  1222  2107  3400               	retlw	0
  1223  2108                     __end_of_eep7:	
  1224  2108                     _eep8_absaddr	set	8456
  1225                           
  1226                           	psect	_eep8_text
  1227  2108                     __p_eep8_text:	
  1228  2108                     _eep8:	
  1229  2108  34FF               	retlw	255
  1230  2109                     __end_of_eep8:	
  1231  000E                     _TMR1	set	14
  1232  001F                     _ADCON0	set	31
  1233  001E                     _ADRESH	set	30
  1234  0017                     _CCP1CON	set	23
  1235  0015                     _CCPR1L	set	21
  1236  0005                     _PORTA	set	5
  1237  0006                     _PORTB	set	6
  1238  0007                     _PORTC	set	7
  1239  001A                     _RCREG	set	26
  1240  0012                     _T2CON	set	18
  1241  0001                     _TMR0	set	1
  1242  0011                     _TMR2	set	17
  1243  0019                     _TXREG	set	25
  1244  00FF                     _ADFM	set	255
  1245  0066                     _ADIF	set	102
  1246  00F8                     _ADON	set	248
  1247  00FA                     _CHS0	set	250
  1248  00FB                     _CHS1	set	251
  1249  00C4                     _CREN	set	196
  1250  006C                     _EEIF	set	108
  1251  005F                     _GIE	set	95
  1252  00F9                     _GO	set	249
  1253  0059                     _INTF	set	89
  1254  00C1                     _OERR	set	193
  1255  005E                     _PEIE	set	94
  1256  0065                     _RCIF	set	101
  1257  00C7                     _SPEN	set	199
  1258  005D                     _T0IE	set	93
  1259  005A                     _T0IF	set	90
  1260  0083                     _T1OSCEN	set	131
  1261  0081                     _TMR1CS	set	129
  1262  0060                     _TMR1IF	set	96
  1263  0080                     _TMR1ON	set	128
  1264  0061                     _TMR2IF	set	97
  1265  0092                     _TMR2ON	set	146
  1266  0064                     _TXIF	set	100
  1267  00FE                     _VCFG	set	254
  1268  009F                     _ADCON1	set	159
  1269  009E                     _ADRESL	set	158
  1270  0081                     _OPTION_REGbits	set	129
  1271  008F                     _OSCCON	set	143
  1272  0092                     _PR2	set	146
  1273  0099                     _SPBRG	set	153
  1274  0466                     _ADIE	set	1126
  1275  04DB                     _BRG16	set	1243
  1276  04C2                     _BRGH	set	1218
  1277  046C                     _EEIE	set	1132
  1278  047A                     _HTS	set	1146
  1279  0465                     _RCIE	set	1125
  1280  04C4                     _SYNC	set	1220
  1281  0460                     _TMR1IE	set	1120
  1282  0428                     _TRISA0	set	1064
  1283  0429                     _TRISA1	set	1065
  1284  042A                     _TRISA2	set	1066
  1285  042B                     _TRISA3	set	1067
  1286  042C                     _TRISA4	set	1068
  1287  042D                     _TRISA5	set	1069
  1288  0434                     _TRISB4	set	1076
  1289  0435                     _TRISB5	set	1077
  1290  0436                     _TRISB6	set	1078
  1291  0437                     _TRISB7	set	1079
  1292  0438                     _TRISC0	set	1080
  1293  0439                     _TRISC1	set	1081
  1294  043A                     _TRISC2	set	1082
  1295  043B                     _TRISC3	set	1083
  1296  043C                     _TRISC4	set	1084
  1297  043D                     _TRISC5	set	1085
  1298  043E                     _TRISC6	set	1086
  1299  043F                     _TRISC7	set	1087
  1300  04C5                     _TXEN	set	1221
  1301  011E                     _ANSEL	set	286
  1302  011F                     _ANSELH	set	287
  1303  010D                     _EEADR	set	269
  1304  010C                     _EEDAT	set	268
  1305  08F0                     _ANS0	set	2288
  1306  08F1                     _ANS1	set	2289
  1307  08F3                     _ANS3	set	2291
  1308  08F4                     _ANS4	set	2292
  1309  08F5                     _ANS5	set	2293
  1310  018D                     _EECON2	set	397
  1311  019D                     _PSTRCON	set	413
  1312  0C60                     _RD	set	3168
  1313  0C61                     _WR	set	3169
  1314  0C62                     _WREN	set	3170
  1315                           
  1316                           ; #config settings
  1317  0000                     
  1318                           	psect	cinit
  1319  0013                     start_initialization:	
  1320  0013                     __initialization:	
  1321                           
  1322                           ; Clear objects allocated to COMMON
  1323  0013  3078               	movlw	low __pbssCOMMON
  1324  0014  0084               	movwf	4
  1325  0015  307E               	movlw	low (__pbssCOMMON+6)
  1326  0016  118A  2080  118A   	fcall	clear_ram0
  1327                           
  1328                           ; Clear objects allocated to BANK0
  1329  0019  1383               	bcf	3,7	;select IRP bank0
  1330  001A  3020               	movlw	low __pbssBANK0
  1331  001B  0084               	movwf	4
  1332  001C  3052               	movlw	low (__pbssBANK0+50)
  1333  001D  118A  2080  118A   	fcall	clear_ram0
  1334                           
  1335                           ; Clear objects allocated to BANK1
  1336  0020  30BE               	movlw	low __pbssBANK1
  1337  0021  0084               	movwf	4
  1338  0022  30D5               	movlw	low (__pbssBANK1+23)
  1339  0023  118A  2080  118A   	fcall	clear_ram0
  1340                           
  1341                           ; Initialize objects allocated to BANK1
  1342  0026  30BE               	movlw	low (__pdataBANK1+30)
  1343  0027  00FD               	movwf	btemp+-1
  1344  0028  3006               	movlw	high __pidataBANK1
  1345  0029  00FE               	movwf	btemp
  1346  002A  302E               	movlw	low __pidataBANK1
  1347  002B  00FF               	movwf	btemp+1
  1348  002C  30A0               	movlw	low __pdataBANK1
  1349  002D  0084               	movwf	4
  1350  002E  118A  2056  118A   	fcall	init_ram0
  1351                           
  1352                           ; Initialize objects allocated to BANK0
  1353  0031  306B               	movlw	low (__pdataBANK0+4)
  1354  0032  00FD               	movwf	btemp+-1
  1355  0033  3006               	movlw	high __pidataBANK0
  1356  0034  00FE               	movwf	btemp
  1357  0035  30FA               	movlw	low __pidataBANK0
  1358  0036  00FF               	movwf	btemp+1
  1359  0037  3067               	movlw	low __pdataBANK0
  1360  0038  0084               	movwf	4
  1361  0039  118A  2056         	fcall	init_ram0
  1362  003B                     end_of_initialization:	
  1363                           ;End of C runtime variable initialization code
  1364                           
  1365  003B                     __end_of__initialization:	
  1366  003B  0183               	clrf	3
  1367  003C  118A  2A88         	ljmp	_main	;jump to C main() function
  1368                           
  1369                           	psect	bssCOMMON
  1370  0078                     __pbssCOMMON:	
  1371  0078                     _usage_time:	
  1372  0078                     	ds	2
  1373  007A                     Kernel_Co_Op_Timer_ISR@ms10_ctr:	
  1374  007A                     	ds	1
  1375  007B                     _maintainace_status:	
  1376  007B                     	ds	1
  1377  007C                     _start_stop_tmr_val:	
  1378  007C                     	ds	1
  1379  007D                     usege_timer@usage_time_res_count:	
  1380  007D                     	ds	1
  1381                           
  1382                           	psect	bssBANK0
  1383  0020                     __pbssBANK0:	
  1384  0020                     _Kernel_stTimer:	
  1385  0020                     	ds	8
  1386  0028                     _EEPRAM_SYSTEM_DATA:	
  1387  0028                     	ds	6
  1388  002E                     _Eep_Mgr:	
  1389  002E                     	ds	4
  1390  0032                     _EEPRAM_APP_DATA:	
  1391  0032                     	ds	2
  1392  0034                     _adc_chn0_data:	
  1393  0034                     	ds	2
  1394  0036                     _adc_chn1_data:	
  1395  0036                     	ds	2
  1396  0038                     _adc_chn2_data:	
  1397  0038                     	ds	2
  1398  003A                     _adc_chn3_data:	
  1399  003A                     	ds	2
  1400  003C                     Api_Get_Pwm@dutycycle_old:	
  1401  003C                     	ds	1
  1402  003D                     Kernel_Co_Op_Timer_ISR@ms200_ctr:	
  1403  003D                     	ds	1
  1404  003E                     Kernel_Co_Op_Timer_ISR@ms50_ctr:	
  1405  003E                     	ds	1
  1406  003F                     _Os_Task_Ptr_Temp:	
  1407  003F                     	ds	1
  1408  0040                     _Sys_u8_st_Globle_System_Status:	
  1409  0040                     	ds	1
  1410  0041                     _i:	
  1411  0041                     	ds	1
  1412  0042                     adc_updator@adc_no:	
  1413  0042                     	ds	1
  1414  0043                     _Dio:	
  1415  0043                     	ds	15
  1416                           
  1417                           	psect	dataBANK0
  1418  0067                     __pdataBANK0:	
  1419  0067                     num_to_string@num_string:	
  1420  0067                     	ds	4
  1421                           
  1422                           	psect	bssBANK1
  1423  00BE                     __pbssBANK1:	
  1424  00BE                     _Uart_Net_Mgr:	
  1425  00BE                     	ds	23
  1426                           
  1427                           	psect	dataBANK1
  1428  00A0                     __pdataBANK1:	
  1429  00A0                     _Nano_Os:	
  1430  00A0                     	ds	30
  1431                           
  1432                           	psect	clrtext
  1433  0080                     clear_ram0:	
  1434                           ;	Called with FSR containing the base address, and
  1435                           ;	W with the last address+1
  1436                           
  1437  0080  0064               	clrwdt	;clear the watchdog before getting into this loop
  1438  0081                     clrloop0:	
  1439  0081  0180               	clrf	0	;clear RAM location pointed to by FSR
  1440  0082  0A84               	incf	4,f	;increment pointer
  1441  0083  0604               	xorwf	4,w	;XOR with final address
  1442  0084  1903               	btfsc	3,2	;have we reached the end yet?
  1443  0085  3400               	retlw	0	;all done for this memory range, return
  1444  0086  0604               	xorwf	4,w	;XOR again to restore value
  1445  0087  2881               	goto	clrloop0	;do the next byte
  1446                           
  1447                           	psect	inittext
  1448  0052                     init_fetch0:	
  1449                           ;	Called with low address in FSR and high address in W
  1450                           
  1451  0052  087E               	movf	126,w
  1452  0053  008A               	movwf	10
  1453  0054  087F               	movf	127,w
  1454  0055  0082               	movwf	2
  1455  0056                     init_ram0:	
  1456                           ;Called with:
  1457                           ;	high address of idata address in btemp 
  1458                           ;	low address of idata address in btemp+1 
  1459                           ;	low address of data in FSR
  1460                           ;	high address + 1 of data in btemp-1
  1461                           
  1462  0056  2052  118A         	fcall	init_fetch0
  1463  0058  0080               	movwf	0
  1464  0059  0A84               	incf	4,f
  1465  005A  0804               	movf	4,w
  1466  005B  067D               	xorwf	125,w
  1467  005C  1903               	btfsc	3,2
  1468  005D  3400               	retlw	0
  1469  005E  0AFF               	incf	127,f
  1470  005F  1903               	btfsc	3,2
  1471  0060  0AFE               	incf	126,f
  1472  0061  2856               	goto	init_ram0
  1473                           
  1474                           	psect	cstackCOMMON
  1475  0070                     __pcstackCOMMON:	
  1476  0070                     ?_Systm_Ini_Proc_1:	
  1477  0070                     ?_Systm_Ini_Proc_2:	
  1478                           ; 0 bytes @ 0x0
  1479                           
  1480  0070                     ?_Uart_Manager:	
  1481                           ; 0 bytes @ 0x0
  1482                           
  1483  0070                     ?_Api_Uart_Read_Rx:	
  1484                           ; 0 bytes @ 0x0
  1485                           
  1486  0070                     ?_System_Status_Indicator:	
  1487                           ; 0 bytes @ 0x0
  1488                           
  1489  0070                     ?_Sw_Timer_Updator:	
  1490                           ; 0 bytes @ 0x0
  1491                           
  1492  0070                     ?_Uart_Isr:	
  1493                           ; 0 bytes @ 0x0
  1494                           
  1495  0070                     ??_Uart_Isr:	
  1496                           ; 0 bytes @ 0x0
  1497                           
  1498  0070                     ?_Uart_Ini:	
  1499                           ; 0 bytes @ 0x0
  1500                           
  1501  0070                     ?_Adc_Ini:	
  1502                           ; 0 bytes @ 0x0
  1503                           
  1504  0070                     ?_adc_updator:	
  1505                           ; 0 bytes @ 0x0
  1506                           
  1507  0070                     ?_Dio_Ini:	
  1508                           ; 0 bytes @ 0x0
  1509                           
  1510  0070                     ?_Led_Manager:	
  1511                           ; 0 bytes @ 0x0
  1512                           
  1513  0070                     ?_Switch_Manager:	
  1514                           ; 0 bytes @ 0x0
  1515                           
  1516  0070                     ?_Eep_Ini:	
  1517                           ; 0 bytes @ 0x0
  1518                           
  1519  0070                     ?_Eep_Manager:	
  1520                           ; 0 bytes @ 0x0
  1521                           
  1522  0070                     ?_EEP_to_RAM:	
  1523                           ; 0 bytes @ 0x0
  1524                           
  1525  0070                     ?_usage_time_ini:	
  1526                           ; 0 bytes @ 0x0
  1527                           
  1528  0070                     ?_usege_timer:	
  1529                           ; 0 bytes @ 0x0
  1530                           
  1531  0070                     ?_main:	
  1532                           ; 0 bytes @ 0x0
  1533                           
  1534  0070                     ?_Kernel_Co_Op_Timer_ISR:	
  1535                           ; 0 bytes @ 0x0
  1536                           
  1537  0070                     ??_Kernel_Co_Op_Timer_ISR:	
  1538                           ; 0 bytes @ 0x0
  1539                           
  1540  0070                     ?_Os_Ini:	
  1541                           ; 0 bytes @ 0x0
  1542                           
  1543  0070                     ?_Pwm_Ini:	
  1544                           ; 0 bytes @ 0x0
  1545                           
  1546  0070                     ?_isr:	
  1547                           ; 0 bytes @ 0x0
  1548                           
  1549  0070                     ?_check_eep_checksum:	
  1550                           ; 0 bytes @ 0x0
  1551                           
  1552  0070                     ?_EEP_READ:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555                           
  1556                           ; 1 bytes @ 0x0
  1557  0070                     	ds	1
  1558  0071                     Kernel_Co_Op_Timer_ISR@i:	
  1559                           
  1560                           ; 1 bytes @ 0x1
  1561  0071                     	ds	1
  1562  0072                     ??_isr:	
  1563                           
  1564                           ; 0 bytes @ 0x2
  1565  0072                     	ds	4
  1566  0076                     ?_Dio_Write:	
  1567  0076                     ??_Uart_Manager:	
  1568                           ; 0 bytes @ 0x6
  1569                           
  1570  0076                     ??_Api_Uart_Read_Rx:	
  1571                           ; 0 bytes @ 0x6
  1572                           
  1573  0076                     ??_Uart_Ini:	
  1574                           ; 0 bytes @ 0x6
  1575                           
  1576  0076                     ??_Adc_Ini:	
  1577                           ; 0 bytes @ 0x6
  1578                           
  1579  0076                     ??_adc_updator:	
  1580                           ; 0 bytes @ 0x6
  1581                           
  1582  0076                     ??_Dio_Ini:	
  1583                           ; 0 bytes @ 0x6
  1584                           
  1585  0076                     ?_Api_Led_Control:	
  1586                           ; 0 bytes @ 0x6
  1587                           
  1588  0076                     ??_Eep_Ini:	
  1589                           ; 0 bytes @ 0x6
  1590                           
  1591  0076                     ??_Eep_Manager:	
  1592                           ; 0 bytes @ 0x6
  1593                           
  1594  0076                     ??_EEP_READ:	
  1595                           ; 0 bytes @ 0x6
  1596                           
  1597  0076                     ??_usege_timer:	
  1598                           ; 0 bytes @ 0x6
  1599                           
  1600  0076                     ??_Os_Ini:	
  1601                           ; 0 bytes @ 0x6
  1602                           
  1603  0076                     ?_delay_ms:	
  1604                           ; 0 bytes @ 0x6
  1605                           
  1606  0076                     ?_Dio_Read:	
  1607                           ; 0 bytes @ 0x6
  1608                           
  1609  0076                     ?_set_bit_position:	
  1610                           ; 1 bytes @ 0x6
  1611                           
  1612  0076                     Api_Led_Control@led_status:	
  1613                           ; 1 bytes @ 0x6
  1614                           
  1615  0076                     Dio_Read@pin_no:	
  1616                           ; 1 bytes @ 0x6
  1617                           
  1618  0076                     Dio_Write@pin_no:	
  1619                           ; 1 bytes @ 0x6
  1620                           
  1621  0076                     Sw_Timer_Updator@i:	
  1622                           ; 1 bytes @ 0x6
  1623                           
  1624  0076                     set_bit_position@bit_position:	
  1625                           ; 1 bytes @ 0x6
  1626                           
  1627  0076                     usage_time_ini@maint_time:	
  1628                           ; 1 bytes @ 0x6
  1629                           
  1630  0076                     delay_ms@delay_count:	
  1631                           ; 2 bytes @ 0x6
  1632                           
  1633                           
  1634                           ; 2 bytes @ 0x6
  1635  0076                     	ds	1
  1636  0077                     ??_check_eep_checksum:	
  1637  0077                     ??_set_bit_position:	
  1638                           ; 0 bytes @ 0x7
  1639                           
  1640  0077                     ??_Api_Led_Control:	
  1641                           ; 0 bytes @ 0x7
  1642                           
  1643  0077                     Dio_Write@bit_value:	
  1644                           ; 0 bytes @ 0x7
  1645                           
  1646  0077                     Eep_Manager@temp_data:	
  1647                           ; 1 bytes @ 0x7
  1648                           
  1649                           
  1650                           ; 1 bytes @ 0x7
  1651  0077                     	ds	1
  1652  0078                     ??_Systm_Ini_Proc_2:	
  1653  0078                     ??_Kernel_vRunContainer:	
  1654                           ; 0 bytes @ 0x8
  1655                           
  1656  0078                     ??_Pwm_Ini:	
  1657                           ; 0 bytes @ 0x8
  1658                           
  1659                           
  1660                           	psect	cstackBANK0
  1661  0052                     __pcstackBANK0:	
  1662                           ; 0 bytes @ 0x8
  1663                           
  1664  0052                     ??_Dio_Write:	
  1665  0052                     ??_Dio_Read:	
  1666                           ; 0 bytes @ 0x0
  1667                           
  1668  0052                     ??_Sw_Timer_Updator:	
  1669                           ; 0 bytes @ 0x0
  1670                           
  1671  0052                     ??_usage_time_ini:	
  1672                           ; 0 bytes @ 0x0
  1673                           
  1674  0052                     ??_delay_ms:	
  1675                           ; 0 bytes @ 0x0
  1676                           
  1677  0052                     Api_Led_Control@led_no:	
  1678                           ; 0 bytes @ 0x0
  1679                           
  1680  0052                     EEP_READ@Index:	
  1681                           ; 1 bytes @ 0x0
  1682                           
  1683  0052                     set_bit_position@number1:	
  1684                           ; 1 bytes @ 0x0
  1685                           
  1686  0052                     adc_updator@temp_data:	
  1687                           ; 1 bytes @ 0x0
  1688                           
  1689                           
  1690                           ; 2 bytes @ 0x0
  1691  0052                     	ds	1
  1692  0053                     ??_System_Status_Indicator:	
  1693  0053                     EEP_READ@temp_data:	
  1694                           ; 0 bytes @ 0x1
  1695                           
  1696  0053                     delay_ms@i:	
  1697                           ; 1 bytes @ 0x1
  1698                           
  1699                           
  1700                           ; 1 bytes @ 0x1
  1701  0053                     	ds	1
  1702  0054                     Dio_Read@port_no:	
  1703  0054                     check_eep_checksum@checksum_data:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706                           
  1707                           ; 1 bytes @ 0x2
  1708  0054                     	ds	1
  1709  0055                     Dio_Read@temp_port_data:	
  1710  0055                     check_eep_checksum@i:	
  1711                           ; 1 bytes @ 0x3
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0x3
  1715  0055                     	ds	1
  1716  0056                     ??_Switch_Manager:	
  1717  0056                     ??_EEP_to_RAM:	
  1718                           ; 0 bytes @ 0x4
  1719                           
  1720                           
  1721                           ; 0 bytes @ 0x4
  1722  0056                     	ds	1
  1723  0057                     Dio_Write@port_no:	
  1724  0057                     EEP_to_RAM@eep_error_stetegy:	
  1725                           ; 1 bytes @ 0x5
  1726                           
  1727                           
  1728                           ; 1 bytes @ 0x5
  1729  0057                     	ds	1
  1730  0058                     EEP_to_RAM@temp_data:	
  1731  0058                     _Dio_Write$120:	
  1732                           ; 1 bytes @ 0x6
  1733                           
  1734                           
  1735                           ; 2 bytes @ 0x6
  1736  0058                     	ds	1
  1737  0059                     Switch_Manager@u8_st_temp_switch_ststus:	
  1738  0059                     EEP_to_RAM@j:	
  1739                           ; 1 bytes @ 0x7
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0x7
  1743  0059                     	ds	1
  1744  005A                     Switch_Manager@i:	
  1745  005A                     EEP_to_RAM@j_192:	
  1746                           ; 1 bytes @ 0x8
  1747                           
  1748  005A                     _Dio_Write$121:	
  1749                           ; 1 bytes @ 0x8
  1750                           
  1751                           
  1752                           ; 2 bytes @ 0x8
  1753  005A                     	ds	1
  1754  005B                     EEP_to_RAM@i:	
  1755                           
  1756                           ; 1 bytes @ 0x9
  1757  005B                     	ds	1
  1758  005C                     EEP_to_RAM@i_191:	
  1759  005C                     _Dio_Write$122:	
  1760                           ; 1 bytes @ 0xA
  1761                           
  1762                           
  1763                           ; 2 bytes @ 0xA
  1764  005C                     	ds	1
  1765  005D                     ??_Systm_Ini_Proc_1:	
  1766                           
  1767                           ; 0 bytes @ 0xB
  1768  005D                     	ds	1
  1769  005E                     ?_Kernel_vRunContainer:	
  1770  005E                     ??_Led_Manager:	
  1771                           ; 0 bytes @ 0xC
  1772                           
  1773  005E                     Kernel_vRunContainer@afpContainerArray:	
  1774                           ; 0 bytes @ 0xC
  1775                           
  1776                           
  1777                           ; 2 bytes @ 0xC
  1778  005E                     	ds	3
  1779  0061                     Led_Manager@u8_temp_led:	
  1780                           
  1781                           ; 1 bytes @ 0xF
  1782  0061                     	ds	1
  1783  0062                     Led_Manager@i:	
  1784                           
  1785                           ; 1 bytes @ 0x10
  1786  0062                     	ds	1
  1787  0063                     ??_main:	
  1788                           
  1789                           ; 0 bytes @ 0x11
  1790  0063                     	ds	4
  1791                           
  1792                           	psect	maintext
  1793  0288                     __pmaintext:	
  1794 ;;
  1795 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1796 ;;
  1797 ;; *************** function _main *****************
  1798 ;; Defined at:
  1799 ;;		line 36 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/os.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;		None
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;		None
  1804 ;; Return value:  Size  Location     Type
  1805 ;;		None               void
  1806 ;; Registers used:
  1807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 17F/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1813 ;;      Params:         0       0       0       0
  1814 ;;      Locals:         0       0       0       0
  1815 ;;      Temps:          0       4       0       0
  1816 ;;      Totals:         0       4       0       0
  1817 ;;Total ram usage:        4 bytes
  1818 ;; Hardware stack levels required when called:    7
  1819 ;; This function calls:
  1820 ;;		Absolute function
  1821 ;;		_Api_Uart_Read_Rx
  1822 ;;		_Eep_Manager
  1823 ;;		_Kernel_vRunContainer
  1824 ;;		_Led_Manager
  1825 ;;		_Sw_Timer_Updator
  1826 ;;		_Switch_Manager
  1827 ;;		_System_Status_Indicator
  1828 ;;		_Uart_Manager
  1829 ;;		_adc_updator
  1830 ;;		_usege_timer
  1831 ;; This function is called by:
  1832 ;;		Startup code after reset
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _main
  1838  0288                     _main:	
  1839                           
  1840                           ;os.c: 39: Kernel_vRunContainer(Kernel_vHWReset);
  1841                           
  1842                           ;incstack = 0
  1843                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1844  0288  301F               	movlw	low (_Kernel_vHWReset| (0+32768))
  1845  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1846  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1847  028B  00DE               	movwf	Kernel_vRunContainer@afpContainerArray
  1848  028C  3087               	movlw	high (_Kernel_vHWReset| (0+32768))
  1849  028D  00DF               	movwf	Kernel_vRunContainer@afpContainerArray+1
  1850  028E  118A  27AD  118A   	fcall	_Kernel_vRunContainer
  1851  0291                     l2895:	
  1852                           ;os.c: 42: while(1)
  1853                           
  1854                           
  1855                           ;os.c: 43: {
  1856                           ;os.c: 46: Os_Task_Ptr_Temp=0;
  1857  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0293  01BF               	clrf	_Os_Task_Ptr_Temp
  1860                           
  1861                           ;os.c: 47: for(i=0;i<6;i++)
  1862  0294  01C1               	clrf	_i
  1863  0295  3006               	movlw	6
  1864  0296  0241               	subwf	_i,w
  1865  0297  1803               	btfsc	3,0
  1866  0298  2B0C               	goto	l2925
  1867  0299                     l2903:	
  1868                           
  1869                           ;os.c: 48: {
  1870                           ;os.c: 49: if(Nano_Os.Os_ms_Task_Sts[i]==1)
  1871  0299  0841               	movf	_i,w
  1872  029A  3EB2               	addlw	(_Nano_Os+18)& (0+255)
  1873  029B  0084               	movwf	4
  1874  029C  1383               	bcf	3,7	;select IRP bank1
  1875  029D  0800               	movf	0,w
  1876  029E  3A01               	xorlw	1
  1877  029F  1D03               	skipz
  1878  02A0  2B04               	goto	l2921
  1879                           
  1880                           ;os.c: 50: {
  1881                           ;os.c: 51: if((*(Nano_Os.Os_ms_Task_Ptr[i]+ Nano_Os.Os_ms_Task_Func_Num[i]))!=0)
  1882  02A1  0841               	movf	_i,w
  1883  02A2  00E3               	movwf	??_main
  1884  02A3  0763               	addwf	??_main,w
  1885  02A4  3EA0               	addlw	_Nano_Os& (0+255)
  1886  02A5  0084               	movwf	4
  1887  02A6  0800               	movf	0,w
  1888  02A7  00E4               	movwf	??_main+1
  1889  02A8  0A84               	incf	4,f
  1890  02A9  0800               	movf	0,w
  1891  02AA  00E5               	movwf	??_main+2
  1892  02AB  0841               	movf	_i,w
  1893  02AC  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1894  02AD  0084               	movwf	4
  1895  02AE  0800               	movf	0,w
  1896  02AF  0764               	addwf	??_main+1,w
  1897  02B0  0084               	movwf	4
  1898  02B1  0865               	movf	??_main+2,w
  1899  02B2  1803               	skipnc
  1900  02B3  0A65               	incf	??_main+2,w
  1901  02B4  00FF               	movwf	127
  1902  02B5  118A  2700  118A   	fcall	stringtab
  1903  02B8  3A00               	xorlw	0
  1904  02B9  1903               	skipnz
  1905  02BA  2AF0               	goto	l2915
  1906                           
  1907                           ;os.c: 52: {
  1908                           ;os.c: 53: if((Nano_Os.Os_ms_Task_Func_Mask[i]>>Nano_Os.Os_ms_Task_Func_Num[i])&0x01)
  1909  02BB  0841               	movf	_i,w
  1910  02BC  3EB8               	addlw	(_Nano_Os+24)& (0+255)
  1911  02BD  0084               	movwf	4
  1912  02BE  1383               	bcf	3,7	;select IRP bank1
  1913  02BF  0800               	movf	0,w
  1914  02C0  00E3               	movwf	??_main
  1915  02C1  0841               	movf	_i,w
  1916  02C2  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1917  02C3  0084               	movwf	4
  1918  02C4  0A00               	incf	0,w
  1919  02C5  2AC8               	goto	u2434
  1920  02C6                     u2435:	
  1921  02C6  1003               	clrc
  1922  02C7  0CE3               	rrf	??_main,f
  1923  02C8                     u2434:	
  1924  02C8  3EFF               	addlw	-1
  1925  02C9  1D03               	skipz
  1926  02CA  2AC6               	goto	u2435
  1927  02CB  1C63               	btfss	??_main,0
  1928  02CC  2AE7               	goto	l2911
  1929                           
  1930                           ;os.c: 54: {
  1931                           ;os.c: 55: Os_Task_Ptr_Temp=(*(Nano_Os.Os_ms_Task_Ptr[i] +Nano_Os.Os_ms_Task_Func_Num[i]
      +                           ));
  1932  02CD  0841               	movf	_i,w
  1933  02CE  00E3               	movwf	??_main
  1934  02CF  0763               	addwf	??_main,w
  1935  02D0  3EA0               	addlw	_Nano_Os& (0+255)
  1936  02D1  0084               	movwf	4
  1937  02D2  0800               	movf	0,w
  1938  02D3  00E4               	movwf	??_main+1
  1939  02D4  0A84               	incf	4,f
  1940  02D5  0800               	movf	0,w
  1941  02D6  00E5               	movwf	??_main+2
  1942  02D7  0841               	movf	_i,w
  1943  02D8  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1944  02D9  0084               	movwf	4
  1945  02DA  0800               	movf	0,w
  1946  02DB  0764               	addwf	??_main+1,w
  1947  02DC  0084               	movwf	4
  1948  02DD  0865               	movf	??_main+2,w
  1949  02DE  1803               	skipnc
  1950  02DF  0A65               	incf	??_main+2,w
  1951  02E0  00FF               	movwf	127
  1952  02E1  118A  2700  118A   	fcall	stringtab
  1953  02E4  00E6               	movwf	??_main+3
  1954  02E5  0866               	movf	??_main+3,w
  1955  02E6  00BF               	movwf	_Os_Task_Ptr_Temp
  1956  02E7                     l2911:	
  1957                           
  1958                           ;os.c: 57: }
  1959                           ;os.c: 59: Nano_Os.Os_ms_Task_Func_Num[i]++;
  1960  02E7  3001               	movlw	1
  1961  02E8  00E3               	movwf	??_main
  1962  02E9  0841               	movf	_i,w
  1963  02EA  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1964  02EB  0084               	movwf	4
  1965  02EC  0863               	movf	??_main,w
  1966  02ED  1383               	bcf	3,7	;select IRP bank1
  1967  02EE  0780               	addwf	0,f
  1968                           
  1969                           ;os.c: 60: break;
  1970  02EF  2B0C               	goto	l2925
  1971  02F0                     l2915:	
  1972                           ;os.c: 61: }
  1973                           
  1974                           
  1975                           ;os.c: 62: else
  1976                           ;os.c: 63: {
  1977                           ;os.c: 65: Nano_Os.Os_ms_Task_Func_Num[i]=0;
  1978  02F0  0841               	movf	_i,w
  1979  02F1  3EAC               	addlw	(_Nano_Os+12)& (0+255)
  1980  02F2  0084               	movwf	4
  1981  02F3  1383               	bcf	3,7	;select IRP bank1
  1982  02F4  0180               	clrf	0
  1983                           
  1984                           ;os.c: 66: if(i<(BACKGROUND_TASK))
  1985  02F5  301E               	movlw	low (_BACKGROUND_TASK| (0+32768))
  1986  02F6  0084               	movwf	4
  1987  02F7  3087               	movlw	high (_BACKGROUND_TASK| (0+32768))
  1988  02F8  00FF               	movwf	127
  1989  02F9  118A  2700  118A   	fcall	stringtab
  1990  02FC  0241               	subwf	_i,w
  1991  02FD  1803               	skipnc
  1992  02FE  2B04               	goto	l2921
  1993                           
  1994                           ;os.c: 67: {
  1995                           ;os.c: 68: Nano_Os.Os_ms_Task_Sts[i]=0;
  1996  02FF  0841               	movf	_i,w
  1997  0300  3EB2               	addlw	(_Nano_Os+18)& (0+255)
  1998  0301  0084               	movwf	4
  1999  0302  1383               	bcf	3,7	;select IRP bank1
  2000  0303  0180               	clrf	0
  2001  0304                     l2921:	
  2002  0304  3001               	movlw	1
  2003  0305  00E3               	movwf	??_main
  2004  0306  0863               	movf	??_main,w
  2005  0307  07C1               	addwf	_i,f
  2006  0308  3006               	movlw	6
  2007  0309  0241               	subwf	_i,w
  2008  030A  1C03               	skipc
  2009  030B  2A99               	goto	l2903
  2010  030C                     l2925:	
  2011                           
  2012                           ;os.c: 69: }
  2013                           ;os.c: 73: }
  2014                           ;os.c: 74: }
  2015                           ;os.c: 75: }
  2016                           ;os.c: 78: if(Os_Task_Ptr_Temp)
  2017  030C  083F               	movf	_Os_Task_Ptr_Temp,w
  2018  030D  1903               	btfsc	3,2
  2019  030E  2A91               	goto	l2895
  2020                           
  2021                           ;os.c: 79: {
  2022                           ;os.c: 80: (*Os_Task_Ptr_Temp)();
  2023  030F  083F               	movf	_Os_Task_Ptr_Temp,w
  2024  0310  118A  2100  118A   	fcall	fptable
  2025  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2026  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0315  2A91               	goto	l2895
  2028  0316                     __end_of_main:	
  2029                           
  2030                           	psect	text1
  2031  044B                     __ptext1:	
  2032 ;; *************** function _Sw_Timer_Updator *****************
  2033 ;; Defined at:
  2034 ;;		line 271 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/os.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  i               1    6[COMMON] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;		None               void
  2041 ;; Registers used:
  2042 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2048 ;;      Params:         0       0       0       0
  2049 ;;      Locals:         1       0       0       0
  2050 ;;      Temps:          0       3       0       0
  2051 ;;      Totals:         1       3       0       0
  2052 ;;Total ram usage:        4 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    2
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function _Sw_Timer_Updator
  2064  044B                     _Sw_Timer_Updator:	
  2065                           
  2066                           ;os.c: 274: for(_UBYTE i = 0;i<2;i++)
  2067                           
  2068                           ;incstack = 0
  2069                           ; Regs used in _Sw_Timer_Updator: [wreg-fsr0h+status,2+status,0]
  2070  044B  01F6               	clrf	Sw_Timer_Updator@i
  2071  044C                     L1:	
  2072  044C  3002               	movlw	2
  2073  044D  0276               	subwf	Sw_Timer_Updator@i,w
  2074  044E  1803               	btfsc	3,0
  2075  044F  0008               	return
  2076                           
  2077                           ;os.c: 275: {
  2078                           ;os.c: 277: if(Kernel_stTimer[i].Lock == 0x01)
  2079  0450  0876               	movf	Sw_Timer_Updator@i,w
  2080  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2081  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0453  00D2               	movwf	??_Sw_Timer_Updator
  2083  0454  3001               	movlw	1
  2084  0455                     u2205:	
  2085  0455  1003               	clrc
  2086  0456  0DD2               	rlf	??_Sw_Timer_Updator,f
  2087  0457  3EFF               	addlw	-1
  2088  0458  1D03               	skipz
  2089  0459  2C55               	goto	u2205
  2090  045A  1003               	clrc
  2091  045B  0D52               	rlf	??_Sw_Timer_Updator,w
  2092  045C  3E20               	addlw	_Kernel_stTimer& (0+255)
  2093  045D  0084               	movwf	4
  2094  045E  1383               	bcf	3,7	;select IRP bank0
  2095  045F  0800               	movf	0,w
  2096  0460  3A01               	xorlw	1
  2097  0461  1D03               	skipz
  2098  0462  2C9F               	goto	l2837
  2099                           
  2100                           ;os.c: 278: {
  2101                           ;os.c: 280: if(Kernel_stTimer[i].TimerValue == 0)
  2102  0463  0876               	movf	Sw_Timer_Updator@i,w
  2103  0464  00D2               	movwf	??_Sw_Timer_Updator
  2104  0465  3001               	movlw	1
  2105  0466                     u2225:	
  2106  0466  1003               	clrc
  2107  0467  0DD2               	rlf	??_Sw_Timer_Updator,f
  2108  0468  3EFF               	addlw	-1
  2109  0469  1D03               	skipz
  2110  046A  2C66               	goto	u2225
  2111  046B  1003               	clrc
  2112  046C  0D52               	rlf	??_Sw_Timer_Updator,w
  2113  046D  3E01               	addlw	1
  2114  046E  3E20               	addlw	_Kernel_stTimer& (0+255)
  2115  046F  0084               	movwf	4
  2116  0470  0800               	movf	0,w
  2117  0471  1D03               	skipz
  2118  0472  2C9F               	goto	l2837
  2119                           
  2120                           ;os.c: 284: {
  2121                           ;os.c: 285: (*Kernel_stTimer[i].cb)();
  2122  0473  0876               	movf	Sw_Timer_Updator@i,w
  2123  0474  00D2               	movwf	??_Sw_Timer_Updator
  2124  0475  3001               	movlw	1
  2125  0476                     u2245:	
  2126  0476  1003               	clrc
  2127  0477  0DD2               	rlf	??_Sw_Timer_Updator,f
  2128  0478  3EFF               	addlw	-1
  2129  0479  1D03               	skipz
  2130  047A  2C76               	goto	u2245
  2131  047B  1003               	clrc
  2132  047C  0D52               	rlf	??_Sw_Timer_Updator,w
  2133  047D  3E03               	addlw	3
  2134  047E  3E20               	addlw	_Kernel_stTimer& (0+255)
  2135  047F  0084               	movwf	4
  2136  0480  0800               	movf	0,w
  2137                           
  2138                           ;os.c: 287: }
  2139                           ;os.c: 288: Kernel_stTimer[i].TimerValue = Kernel_stTimer[i].TimerValueBk;
  2140  0481  0876               	movf	Sw_Timer_Updator@i,w
  2141  0482  00D2               	movwf	??_Sw_Timer_Updator
  2142  0483  3001               	movlw	1
  2143  0484                     u2255:	
  2144  0484  1003               	clrc
  2145  0485  0DD2               	rlf	??_Sw_Timer_Updator,f
  2146  0486  3EFF               	addlw	-1
  2147  0487  1D03               	skipz
  2148  0488  2C84               	goto	u2255
  2149  0489  1003               	clrc
  2150  048A  0D52               	rlf	??_Sw_Timer_Updator,w
  2151  048B  3E02               	addlw	2
  2152  048C  3E20               	addlw	_Kernel_stTimer& (0+255)
  2153  048D  0084               	movwf	4
  2154  048E  0800               	movf	0,w
  2155  048F  00D3               	movwf	??_Sw_Timer_Updator+1
  2156  0490  0876               	movf	Sw_Timer_Updator@i,w
  2157  0491  00D4               	movwf	??_Sw_Timer_Updator+2
  2158  0492  3001               	movlw	1
  2159  0493                     u2265:	
  2160  0493  1003               	clrc
  2161  0494  0DD4               	rlf	??_Sw_Timer_Updator+2,f
  2162  0495  3EFF               	addlw	-1
  2163  0496  1D03               	skipz
  2164  0497  2C93               	goto	u2265
  2165  0498  1003               	clrc
  2166  0499  0D54               	rlf	??_Sw_Timer_Updator+2,w
  2167  049A  3E01               	addlw	1
  2168  049B  3E20               	addlw	_Kernel_stTimer& (0+255)
  2169  049C  0084               	movwf	4
  2170  049D  0853               	movf	??_Sw_Timer_Updator+1,w
  2171  049E  0080               	movwf	0
  2172  049F                     l2837:	
  2173  049F  3001               	movlw	1
  2174  04A0  00D2               	movwf	??_Sw_Timer_Updator
  2175  04A1  0852               	movf	??_Sw_Timer_Updator,w
  2176  04A2  07F6               	addwf	Sw_Timer_Updator@i,f
  2177  04A3  2C4C               	goto	L1
  2178  04A4                     __end_of_Sw_Timer_Updator:	
  2179                           
  2180                           	psect	text2
  2181  06A3                     __ptext2:	
  2182 ;; *************** function _System_Status_Indicator *****************
  2183 ;; Defined at:
  2184 ;;		line 122 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/system.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;		None               void
  2191 ;; Registers used:
  2192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2198 ;;      Params:         0       0       0       0
  2199 ;;      Locals:         0       0       0       0
  2200 ;;      Temps:          0       1       0       0
  2201 ;;      Totals:         0       1       0       0
  2202 ;;Total ram usage:        1 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    3
  2205 ;; This function calls:
  2206 ;;		_Api_Led_Control
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           
  2213                           ;psect for function _System_Status_Indicator
  2214  06A3                     _System_Status_Indicator:	
  2215                           
  2216                           ;system.c: 124: if(Sys_u8_st_Globle_System_Status!=0)
  2217                           
  2218                           ;incstack = 0
  2219                           ; Regs used in _System_Status_Indicator: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2220  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  2221  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  2222  06A5  0840               	movf	_Sys_u8_st_Globle_System_Status,w
  2223  06A6  1903               	btfsc	3,2
  2224  06A7  2EB0               	goto	l2871
  2225                           
  2226                           ;system.c: 125: {
  2227                           ;system.c: 127: Api_Led_Control(0,2);
  2228  06A8  3002               	movlw	2
  2229  06A9  00D3               	movwf	??_System_Status_Indicator
  2230  06AA  0853               	movf	??_System_Status_Indicator,w
  2231  06AB  00F6               	movwf	Api_Led_Control@led_status
  2232  06AC  3000               	movlw	0
  2233  06AD  118A  26BA         	fcall	_Api_Led_Control
  2234                           
  2235                           ;system.c: 129: }
  2236  06AF  0008               	return
  2237  06B0                     l2871:	
  2238                           
  2239                           ;system.c: 130: else
  2240                           ;system.c: 131: {
  2241                           ;system.c: 132: Api_Led_Control(0,5);
  2242  06B0  3005               	movlw	5
  2243  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  2244  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  2245  06B3  00D3               	movwf	??_System_Status_Indicator
  2246  06B4  0853               	movf	??_System_Status_Indicator,w
  2247  06B5  00F6               	movwf	Api_Led_Control@led_status
  2248  06B6  3000               	movlw	0
  2249  06B7  118A  26BA         	fcall	_Api_Led_Control
  2250  06B9  0008               	return
  2251  06BA                     __end_of_System_Status_Indicator:	
  2252                           
  2253                           	psect	text3
  2254  0062                     __ptext3:	
  2255 ;; *************** function _Api_Uart_Read_Rx *****************
  2256 ;; Defined at:
  2257 ;;		line 94 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/uart.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;		None               void
  2264 ;; Registers used:
  2265 ;;		wreg
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2271 ;;      Params:         0       0       0       0
  2272 ;;      Locals:         0       0       0       0
  2273 ;;      Temps:          1       0       0       0
  2274 ;;      Totals:         1       0       0       0
  2275 ;;Total ram usage:        1 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    2
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _Api_Uart_Read_Rx
  2287  0062                     _Api_Uart_Read_Rx:	
  2288                           
  2289                           ;uart.c: 97: if(Uart_Net_Mgr.Uart_Rx.com_status==3)
  2290                           
  2291                           ;incstack = 0
  2292                           ; Regs used in _Api_Uart_Read_Rx: [wreg]
  2293  0062  1683               	bsf	3,5	;RP0=1, select bank1
  2294  0063  1303               	bcf	3,6	;RP1=0, select bank1
  2295  0064  083E               	movf	_Uart_Net_Mgr^(0+128),w
  2296  0065  3A03               	xorlw	3
  2297  0066  1D03               	skipz
  2298  0067  0008               	return
  2299                           
  2300                           ;uart.c: 98: {
  2301                           ;uart.c: 112: Uart_Net_Mgr.Uart_Rx.rx_data_ptr= &Uart_Net_Mgr.Uart_Rx.RX_DATA[0];
  2302  0068  30C1               	movlw	(_Uart_Net_Mgr+3)& (0+255)
  2303  0069  00F6               	movwf	??_Api_Uart_Read_Rx
  2304  006A  0876               	movf	??_Api_Uart_Read_Rx,w
  2305  006B  00C0               	movwf	(_Uart_Net_Mgr+2)^(0+128)
  2306                           
  2307                           ;uart.c: 113: Uart_Net_Mgr.Uart_Rx.com_status=4;
  2308  006C  3004               	movlw	4
  2309  006D  00F6               	movwf	??_Api_Uart_Read_Rx
  2310  006E  0876               	movf	??_Api_Uart_Read_Rx,w
  2311  006F  00BE               	movwf	_Uart_Net_Mgr^(0+128)
  2312  0070  0008               	return
  2313  0071                     __end_of_Api_Uart_Read_Rx:	
  2314                           
  2315                           	psect	text4
  2316  07EB                     __ptext4:	
  2317 ;; *************** function _Uart_Manager *****************
  2318 ;; Defined at:
  2319 ;;		line 78 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/uart.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;		None               void
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2333 ;;      Params:         0       0       0       0
  2334 ;;      Locals:         0       0       0       0
  2335 ;;      Temps:          1       0       0       0
  2336 ;;      Totals:         1       0       0       0
  2337 ;;Total ram usage:        1 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    2
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function _Uart_Manager
  2349  07EB                     _Uart_Manager:	
  2350                           
  2351                           ;uart.c: 80: if( Uart_Net_Mgr.Uart_Rx.rx_period<=Uart_Net_Mgr.Uart_Rx.rx_period_max)
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in _Uart_Manager: [wreg+status,2+status,0]
  2355  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  2356  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  2357  07ED  083F               	movf	(_Uart_Net_Mgr^(0+128)+1),w
  2358  07EE  0249               	subwf	(_Uart_Net_Mgr^(0+128)+11),w
  2359  07EF  1C03               	skipc
  2360  07F0  2FF7               	goto	l2877
  2361                           
  2362                           ;uart.c: 81: {
  2363                           ;uart.c: 82: Uart_Net_Mgr.Uart_Rx.rx_period=Uart_Net_Mgr.Uart_Rx.rx_period+1;
  2364  07F1  083F               	movf	(_Uart_Net_Mgr^(0+128)+1),w
  2365  07F2  3E01               	addlw	1
  2366  07F3  00F6               	movwf	??_Uart_Manager
  2367  07F4  0876               	movf	??_Uart_Manager,w
  2368  07F5  00BF               	movwf	(_Uart_Net_Mgr^(0+128)+1)
  2369                           
  2370                           ;uart.c: 83: }
  2371  07F6  0008               	return
  2372  07F7                     l2877:	
  2373                           
  2374                           ;uart.c: 84: else
  2375                           ;uart.c: 85: {
  2376                           ;uart.c: 86: if(Uart_Net_Mgr.Uart_Rx.com_status==2)
  2377  07F7  083E               	movf	_Uart_Net_Mgr^(0+128),w
  2378  07F8  3A02               	xorlw	2
  2379  07F9  1D03               	skipz
  2380  07FA  0008               	return
  2381                           
  2382                           ;uart.c: 87: {
  2383                           ;uart.c: 88: Uart_Net_Mgr.Uart_Rx.com_status=3;
  2384  07FB  3003               	movlw	3
  2385  07FC  00F6               	movwf	??_Uart_Manager
  2386  07FD  0876               	movf	??_Uart_Manager,w
  2387  07FE  00BE               	movwf	_Uart_Net_Mgr^(0+128)
  2388  07FF  0008               	return
  2389  0800                     __end_of_Uart_Manager:	
  2390                           
  2391                           	psect	text5
  2392  04F5                     __ptext5:	
  2393 ;; *************** function _Eep_Manager *****************
  2394 ;; Defined at:
  2395 ;;		line 48 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/eep.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  temp_data       1    7[COMMON] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2409 ;;      Params:         0       0       0       0
  2410 ;;      Locals:         1       0       0       0
  2411 ;;      Temps:          1       0       0       0
  2412 ;;      Totals:         2       0       0       0
  2413 ;;Total ram usage:        2 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    2
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _Eep_Manager
  2425  04F5                     _Eep_Manager:	
  2426                           
  2427                           ;eep.c: 50: _UBYTE temp_data;
  2428                           ;eep.c: 52: switch(Eep_Mgr.State)
  2429                           
  2430                           ;incstack = 0
  2431                           ; Regs used in _Eep_Manager: [wreg-fsr0h+status,2+status,0]
  2432  04F5  2D30               	goto	l2691
  2433  04F6                     l2667:	
  2434                           ;eep.c: 53: {
  2435                           ;eep.c: 54: case 1:
  2436                           
  2437                           
  2438                           ;eep.c: 55: EEADR=Eep_Mgr.Index;
  2439  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2440  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2441  04F8  082F               	movf	_Eep_Mgr+1,w
  2442  04F9  1283               	bcf	3,5	;RP0=0, select bank2
  2443  04FA  1703               	bsf	3,6	;RP1=1, select bank2
  2444  04FB  008D               	movwf	13	;volatile
  2445                           
  2446                           ;eep.c: 56: RD=1;
  2447  04FC  1683               	bsf	3,5	;RP0=1, select bank3
  2448  04FD  1703               	bsf	3,6	;RP1=1, select bank3
  2449  04FE  140C               	bsf	12,0	;volsfr
  2450                           
  2451                           ;eep.c: 57: temp_data=EEDAT;
  2452  04FF  1283               	bcf	3,5	;RP0=0, select bank2
  2453  0500  1703               	bsf	3,6	;RP1=1, select bank2
  2454  0501  080C               	movf	12,w	;volatile
  2455  0502  00F6               	movwf	??_Eep_Manager
  2456  0503  0876               	movf	??_Eep_Manager,w
  2457  0504  00F7               	movwf	Eep_Manager@temp_data
  2458                           
  2459                           ;eep.c: 58: if(temp_data!=Eep_Mgr.Eep_Data)
  2460  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0506  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0507  0830               	movf	_Eep_Mgr+2,w
  2463  0508  0677               	xorwf	Eep_Manager@temp_data,w
  2464  0509  1903               	skipnz
  2465  050A  2D10               	goto	l2673
  2466                           
  2467                           ;eep.c: 59: {
  2468                           ;eep.c: 60: Eep_Mgr.State=2;
  2469  050B  3002               	movlw	2
  2470  050C  00F6               	movwf	??_Eep_Manager
  2471  050D  0876               	movf	??_Eep_Manager,w
  2472  050E  00AE               	movwf	_Eep_Mgr
  2473                           
  2474                           ;eep.c: 61: }
  2475  050F  0008               	return
  2476  0510                     l2673:	
  2477                           
  2478                           ;eep.c: 62: else
  2479                           ;eep.c: 63: {
  2480                           ;eep.c: 64: Eep_Mgr.State=0;
  2481  0510  01AE               	clrf	_Eep_Mgr
  2482                           
  2483                           ;eep.c: 65: }
  2484                           ;eep.c: 66: break;
  2485  0511  0008               	return
  2486  0512                     l2675:	
  2487                           ;eep.c: 67: case 2:
  2488                           
  2489                           
  2490                           ;eep.c: 68: EEADR=Eep_Mgr.Index;
  2491  0512  082F               	movf	_Eep_Mgr+1,w
  2492  0513  1283               	bcf	3,5	;RP0=0, select bank2
  2493  0514  1703               	bsf	3,6	;RP1=1, select bank2
  2494  0515  008D               	movwf	13	;volatile
  2495                           
  2496                           ;eep.c: 69: EEDAT=Eep_Mgr.Eep_Data;
  2497  0516  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0517  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0518  0830               	movf	_Eep_Mgr+2,w
  2500  0519  1283               	bcf	3,5	;RP0=0, select bank2
  2501  051A  1703               	bsf	3,6	;RP1=1, select bank2
  2502  051B  008C               	movwf	12	;volatile
  2503                           
  2504                           ;eep.c: 70: WREN=1;
  2505  051C  1683               	bsf	3,5	;RP0=1, select bank3
  2506  051D  1703               	bsf	3,6	;RP1=1, select bank3
  2507  051E  150C               	bsf	12,2	;volsfr
  2508                           
  2509                           ;eep.c: 71: EECON2=0x55;
  2510  051F  3055               	movlw	85
  2511  0520  008D               	movwf	13	;volsfr
  2512                           
  2513                           ;eep.c: 72: EECON2=0xAA;
  2514  0521  30AA               	movlw	170
  2515  0522  008D               	movwf	13	;volsfr
  2516                           
  2517                           ;eep.c: 73: WR=1;
  2518  0523  148C               	bsf	12,1	;volsfr
  2519                           
  2520                           ;eep.c: 74: WREN=0;
  2521  0524  110C               	bcf	12,2	;volsfr
  2522                           
  2523                           ;eep.c: 75: Eep_Mgr.State=3;
  2524  0525  3003               	movlw	3
  2525  0526  00F6               	movwf	??_Eep_Manager
  2526  0527  0876               	movf	??_Eep_Manager,w
  2527  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2529  052A  00AE               	movwf	_Eep_Mgr
  2530  052B                     l2683:	
  2531                           ;eep.c: 76: case 3:
  2532                           
  2533                           
  2534                           ;eep.c: 77: if(EEIF==0)
  2535  052B  1E0D               	btfss	13,4	;volatile
  2536  052C  0008               	return
  2537                           
  2538                           ;eep.c: 81: else
  2539                           ;eep.c: 82: {
  2540                           ;eep.c: 85: EEIF=0;
  2541                           
  2542                           ;eep.c: 78: {
  2543                           ;eep.c: 80: }
  2544  052D  120D               	bcf	13,4	;volatile
  2545                           
  2546                           ;eep.c: 86: Eep_Mgr.State=0;
  2547  052E  01AE               	clrf	_Eep_Mgr
  2548                           
  2549                           ;eep.c: 93: }
  2550                           
  2551                           ;eep.c: 91: break;
  2552                           
  2553                           ;eep.c: 90: default:
  2554                           
  2555                           ;eep.c: 87: }
  2556                           ;eep.c: 89: break;
  2557  052F  0008               	return
  2558  0530                     l2691:	
  2559  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0532  082E               	movf	_Eep_Mgr,w
  2562                           
  2563                           ; Switch size 1, requested type "space"
  2564                           ; Number of cases is 3, Range of values is 1 to 3
  2565                           ; switch strategies available:
  2566                           ; Name         Instructions Cycles
  2567                           ; simple_byte           10     6 (average)
  2568                           ; direct_byte           16    10 (fixed)
  2569                           ; jumptable            263     9 (fixed)
  2570                           ;	Chosen strategy is simple_byte
  2571  0533  3A01               	xorlw	1	; case 1
  2572  0534  1903               	skipnz
  2573  0535  2CF6               	goto	l2667
  2574  0536  3A03               	xorlw	3	; case 2
  2575  0537  1903               	skipnz
  2576  0538  2D12               	goto	l2675
  2577  0539  3A01               	xorlw	1	; case 3
  2578  053A  1903               	skipnz
  2579  053B  2D2B               	goto	l2683
  2580  053C  2D3D               	goto	l268
  2581  053D                     l268:	
  2582  053D  0008               	return
  2583  053E                     __end_of_Eep_Manager:	
  2584                           
  2585                           	psect	text6
  2586  0396                     __ptext6:	
  2587 ;; *************** function _Switch_Manager *****************
  2588 ;; Defined at:
  2589 ;;		line 160 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  i               1    8[BANK0 ] unsigned char 
  2594 ;;  u8_st_temp_s    1    7[BANK0 ] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;		None               void
  2597 ;; Registers used:
  2598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2604 ;;      Params:         0       0       0       0
  2605 ;;      Locals:         0       2       0       0
  2606 ;;      Temps:          0       3       0       0
  2607 ;;      Totals:         0       5       0       0
  2608 ;;Total ram usage:        5 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    3
  2611 ;; This function calls:
  2612 ;;		_Dio_Read
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           
  2619                           ;psect for function _Switch_Manager
  2620  0396                     _Switch_Manager:	
  2621                           
  2622                           ;dio.c: 162: _UBYTE u8_st_temp_switch_ststus;
  2623                           ;dio.c: 163: for(_UBYTE i=0;i<3;i++)
  2624                           
  2625                           ;incstack = 0
  2626                           ; Regs used in _Switch_Manager: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2627  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2629  0398  01DA               	clrf	Switch_Manager@i
  2630  0399                     L2:	
  2631  0399  3003               	movlw	3
  2632  039A  025A               	subwf	Switch_Manager@i,w
  2633  039B  1803               	btfsc	3,0
  2634  039C  0008               	return
  2635                           
  2636                           ;dio.c: 164: {
  2637                           ;dio.c: 166: u8_st_temp_switch_ststus=Dio_Read(Switch_Matrix[i][0],Switch_Matrix[i][1]);
  2638  039D  1403               	setc
  2639  039E  0D5A               	rlf	Switch_Manager@i,w
  2640  039F  3E18               	addlw	low (_Switch_Matrix| (0+32768))
  2641  03A0  0084               	movwf	4
  2642  03A1  3087               	movlw	high (_Switch_Matrix| (0+32768))
  2643  03A2  1803               	skipnc
  2644  03A3  3E01               	addlw	1
  2645  03A4  00FF               	movwf	127
  2646  03A5  118A  2700  118A   	fcall	stringtab
  2647  03A8  00D6               	movwf	??_Switch_Manager
  2648  03A9  0856               	movf	??_Switch_Manager,w
  2649  03AA  00F6               	movwf	Dio_Read@pin_no
  2650  03AB  085A               	movf	Switch_Manager@i,w
  2651  03AC  00D7               	movwf	??_Switch_Manager+1
  2652  03AD  0757               	addwf	??_Switch_Manager+1,w
  2653  03AE  3E18               	addlw	low (_Switch_Matrix| (0+32768))
  2654  03AF  0084               	movwf	4
  2655  03B0  3087               	movlw	high (_Switch_Matrix| (0+32768))
  2656  03B1  1803               	skipnc
  2657  03B2  3E01               	addlw	1
  2658  03B3  00FF               	movwf	127
  2659  03B4  118A  2700  118A   	fcall	stringtab
  2660  03B7  118A  23F1  118A   	fcall	_Dio_Read
  2661  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2662  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2663  03BC  00D8               	movwf	??_Switch_Manager+2
  2664  03BD  0858               	movf	??_Switch_Manager+2,w
  2665  03BE  00D9               	movwf	Switch_Manager@u8_st_temp_switch_ststus
  2666                           
  2667                           ;dio.c: 168: if(u8_st_temp_switch_ststus==Dio.Switch_u8_st_Current_Status[i])
  2668  03BF  085A               	movf	Switch_Manager@i,w
  2669  03C0  3E49               	addlw	(_Dio+6)& (0+255)
  2670  03C1  0084               	movwf	4
  2671  03C2  1383               	bcf	3,7	;select IRP bank0
  2672  03C3  0800               	movf	0,w
  2673  03C4  0659               	xorwf	Switch_Manager@u8_st_temp_switch_ststus,w
  2674  03C5  1D03               	skipz
  2675  03C6  2BE1               	goto	l2659
  2676                           
  2677                           ;dio.c: 169: {
  2678                           ;dio.c: 171: if(Dio.Switch_u8_st_Deb_Count[i] == 3)
  2679  03C7  085A               	movf	Switch_Manager@i,w
  2680  03C8  3E4F               	addlw	(_Dio+12)& (0+255)
  2681  03C9  0084               	movwf	4
  2682  03CA  0800               	movf	0,w
  2683  03CB  3A03               	xorlw	3
  2684  03CC  1D03               	skipz
  2685  03CD  2BD9               	goto	l2657
  2686                           
  2687                           ;dio.c: 172: {
  2688                           ;dio.c: 173: Dio.Switch_u8_st_Stable_Status[i]=Dio.Switch_u8_st_Current_Status[i];
  2689  03CE  085A               	movf	Switch_Manager@i,w
  2690  03CF  3E49               	addlw	(_Dio+6)& (0+255)
  2691  03D0  0084               	movwf	4
  2692  03D1  0800               	movf	0,w
  2693  03D2  00D6               	movwf	??_Switch_Manager
  2694  03D3  085A               	movf	Switch_Manager@i,w
  2695  03D4  3E4C               	addlw	(_Dio+9)& (0+255)
  2696  03D5  0084               	movwf	4
  2697  03D6  0856               	movf	??_Switch_Manager,w
  2698  03D7  0080               	movwf	0
  2699  03D8  2BE1               	goto	l2659
  2700  03D9                     l2657:	
  2701                           ;dio.c: 175: }
  2702                           
  2703                           ;dio.c: 174: Dio.Switch_u8_st_Deb_Count[i]=0;
  2704                           
  2705                           
  2706                           ;dio.c: 176: else
  2707                           ;dio.c: 177: {
  2708                           ;dio.c: 178: Dio.Switch_u8_st_Deb_Count[i]++;
  2709  03D9  3001               	movlw	1
  2710  03DA  00D6               	movwf	??_Switch_Manager
  2711  03DB  085A               	movf	Switch_Manager@i,w
  2712  03DC  3E4F               	addlw	(_Dio+12)& (0+255)
  2713  03DD  0084               	movwf	4
  2714  03DE  0856               	movf	??_Switch_Manager,w
  2715  03DF  0780               	addwf	0,f
  2716                           
  2717                           ;dio.c: 179: }
  2718                           ;dio.c: 181: }
  2719  03E0  2BE5               	goto	l144
  2720  03E1                     l2659:	
  2721                           
  2722                           ;dio.c: 182: else
  2723                           ;dio.c: 183: {
  2724                           ;dio.c: 184: Dio.Switch_u8_st_Deb_Count[i]=0;
  2725  03E1  085A               	movf	Switch_Manager@i,w
  2726  03E2  3E4F               	addlw	(_Dio+12)& (0+255)
  2727  03E3  0084               	movwf	4
  2728  03E4  0180               	clrf	0
  2729  03E5                     l144:	
  2730                           
  2731                           ;dio.c: 185: }
  2732                           ;dio.c: 187: Dio.Switch_u8_st_Current_Status[i]=u8_st_temp_switch_ststus;
  2733  03E5  0859               	movf	Switch_Manager@u8_st_temp_switch_ststus,w
  2734  03E6  00D6               	movwf	??_Switch_Manager
  2735  03E7  085A               	movf	Switch_Manager@i,w
  2736  03E8  3E49               	addlw	(_Dio+6)& (0+255)
  2737  03E9  0084               	movwf	4
  2738  03EA  0856               	movf	??_Switch_Manager,w
  2739  03EB  0080               	movwf	0
  2740  03EC  3001               	movlw	1
  2741  03ED  00D6               	movwf	??_Switch_Manager
  2742  03EE  0856               	movf	??_Switch_Manager,w
  2743  03EF  07DA               	addwf	Switch_Manager@i,f
  2744  03F0  2B99               	goto	L2
  2745  03F1                     __end_of_Switch_Manager:	
  2746                           
  2747                           	psect	text7
  2748  011C                     __ptext7:	
  2749 ;; *************** function _Led_Manager *****************
  2750 ;; Defined at:
  2751 ;;		line 125 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;		None
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  i               1   16[BANK0 ] unsigned char 
  2756 ;;  u8_temp_led     1   15[BANK0 ] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;		None               void
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2766 ;;      Params:         0       0       0       0
  2767 ;;      Locals:         0       2       0       0
  2768 ;;      Temps:          0       3       0       0
  2769 ;;      Totals:         0       5       0       0
  2770 ;;Total ram usage:        5 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    3
  2773 ;; This function calls:
  2774 ;;		_Dio_Read
  2775 ;;		_Dio_Write
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           
  2782                           ;psect for function _Led_Manager
  2783  011C                     _Led_Manager:	
  2784                           
  2785                           ;dio.c: 127: _UBYTE u8_temp_led;
  2786                           ;dio.c: 128: for(_UBYTE i=0;i<3;i++)
  2787                           
  2788                           ;incstack = 0
  2789                           ; Regs used in _Led_Manager: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2790  011C  1283               	bcf	3,5	;RP0=0, select bank0
  2791  011D  1303               	bcf	3,6	;RP1=0, select bank0
  2792  011E  01E2               	clrf	Led_Manager@i
  2793  011F                     L3:	
  2794  011F  3003               	movlw	3
  2795  0120  0262               	subwf	Led_Manager@i,w
  2796  0121  1803               	btfsc	3,0
  2797  0122  0008               	return
  2798                           
  2799                           ;dio.c: 129: {
  2800                           ;dio.c: 130: if(Dio.Led_u8_st_Led_Status[i]==0)
  2801  0123  0862               	movf	Led_Manager@i,w
  2802  0124  3E46               	addlw	(_Dio+3)& (0+255)
  2803  0125  0084               	movwf	4
  2804  0126  1383               	bcf	3,7	;select IRP bank0
  2805  0127  0880               	movf	0,f
  2806  0128  1D03               	skipz
  2807  0129  2949               	goto	l2627
  2808                           
  2809                           ;dio.c: 131: {
  2810                           ;dio.c: 133: Dio_Write(Led_Matrix[i][0],Led_Matrix[i][1],0);
  2811  012A  1403               	setc
  2812  012B  0D62               	rlf	Led_Manager@i,w
  2813  012C  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2814  012D  0084               	movwf	4
  2815  012E  3087               	movlw	high (_Led_Matrix| (0+32768))
  2816  012F  1803               	skipnc
  2817  0130  3E01               	addlw	1
  2818  0131  00FF               	movwf	127
  2819  0132  118A  2700  118A   	fcall	stringtab
  2820  0135  00DE               	movwf	??_Led_Manager
  2821  0136  085E               	movf	??_Led_Manager,w
  2822  0137  00F6               	movwf	Dio_Write@pin_no
  2823  0138  01F7               	clrf	Dio_Write@bit_value
  2824  0139  0862               	movf	Led_Manager@i,w
  2825  013A  00DF               	movwf	??_Led_Manager+1
  2826  013B  075F               	addwf	??_Led_Manager+1,w
  2827  013C  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2828  013D  0084               	movwf	4
  2829  013E  3087               	movlw	high (_Led_Matrix| (0+32768))
  2830  013F  1803               	skipnc
  2831  0140  3E01               	addlw	1
  2832  0141  00FF               	movwf	127
  2833  0142  118A  2700  118A   	fcall	stringtab
  2834  0145  118A  21DC  118A   	fcall	_Dio_Write
  2835                           
  2836                           ;dio.c: 135: }
  2837  0148  29D5               	goto	l2639
  2838  0149                     l2627:	
  2839                           
  2840                           ;dio.c: 136: else if(Dio.Led_u8_st_Led_Status[i]==255)
  2841  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2842  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2843  014B  0862               	movf	Led_Manager@i,w
  2844  014C  3E46               	addlw	(_Dio+3)& (0+255)
  2845  014D  0084               	movwf	4
  2846  014E  1383               	bcf	3,7	;select IRP bank0
  2847  014F  0800               	movf	0,w
  2848  0150  3AFF               	xorlw	255
  2849  0151  1D03               	skipz
  2850  0152  2973               	goto	l2631
  2851                           
  2852                           ;dio.c: 137: {
  2853                           ;dio.c: 139: Dio_Write(Led_Matrix[i][0],Led_Matrix[i][1],1);
  2854  0153  1403               	setc
  2855  0154  0D62               	rlf	Led_Manager@i,w
  2856  0155  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2857  0156  0084               	movwf	4
  2858  0157  3087               	movlw	high (_Led_Matrix| (0+32768))
  2859  0158  1803               	skipnc
  2860  0159  3E01               	addlw	1
  2861  015A  00FF               	movwf	127
  2862  015B  118A  2700  118A   	fcall	stringtab
  2863  015E  00DE               	movwf	??_Led_Manager
  2864  015F  085E               	movf	??_Led_Manager,w
  2865  0160  00F6               	movwf	Dio_Write@pin_no
  2866  0161  01F7               	clrf	Dio_Write@bit_value
  2867  0162  0AF7               	incf	Dio_Write@bit_value,f
  2868  0163  0862               	movf	Led_Manager@i,w
  2869  0164  00DF               	movwf	??_Led_Manager+1
  2870  0165  075F               	addwf	??_Led_Manager+1,w
  2871  0166  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2872  0167  0084               	movwf	4
  2873  0168  3087               	movlw	high (_Led_Matrix| (0+32768))
  2874  0169  1803               	skipnc
  2875  016A  3E01               	addlw	1
  2876  016B  00FF               	movwf	127
  2877  016C  118A  2700  118A   	fcall	stringtab
  2878  016F  118A  21DC  118A   	fcall	_Dio_Write
  2879                           
  2880                           ;dio.c: 141: }
  2881  0172  29D5               	goto	l2639
  2882  0173                     l2631:	
  2883                           
  2884                           ;dio.c: 142: else
  2885                           ;dio.c: 143: {
  2886                           ;dio.c: 144: if(Dio.Led_u8_st_Led_Status[i]==0)
  2887  0173  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0174  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0175  0862               	movf	Led_Manager@i,w
  2890  0176  3E46               	addlw	(_Dio+3)& (0+255)
  2891  0177  0084               	movwf	4
  2892  0178  1383               	bcf	3,7	;select IRP bank0
  2893  0179  0880               	movf	0,f
  2894  017A  1D03               	skipz
  2895  017B  29D0               	goto	l2637
  2896                           
  2897                           ;dio.c: 145: {
  2898                           ;dio.c: 147: u8_temp_led=Dio_Read(Led_Matrix[i][0],Led_Matrix[i][1]);
  2899  017C  1403               	setc
  2900  017D  0D62               	rlf	Led_Manager@i,w
  2901  017E  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2902  017F  0084               	movwf	4
  2903  0180  3087               	movlw	high (_Led_Matrix| (0+32768))
  2904  0181  1803               	skipnc
  2905  0182  3E01               	addlw	1
  2906  0183  00FF               	movwf	127
  2907  0184  118A  2700  118A   	fcall	stringtab
  2908  0187  00DE               	movwf	??_Led_Manager
  2909  0188  085E               	movf	??_Led_Manager,w
  2910  0189  00F6               	movwf	Dio_Read@pin_no
  2911  018A  0862               	movf	Led_Manager@i,w
  2912  018B  00DF               	movwf	??_Led_Manager+1
  2913  018C  075F               	addwf	??_Led_Manager+1,w
  2914  018D  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2915  018E  0084               	movwf	4
  2916  018F  3087               	movlw	high (_Led_Matrix| (0+32768))
  2917  0190  1803               	skipnc
  2918  0191  3E01               	addlw	1
  2919  0192  00FF               	movwf	127
  2920  0193  118A  2700  118A   	fcall	stringtab
  2921  0196  118A  23F1  118A   	fcall	_Dio_Read
  2922  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2923  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2924  019B  00E0               	movwf	??_Led_Manager+2
  2925  019C  0860               	movf	??_Led_Manager+2,w
  2926  019D  00E1               	movwf	Led_Manager@u8_temp_led
  2927                           
  2928                           ;dio.c: 148: Dio_Write(Led_Matrix[i][0],Led_Matrix[i][1],(!u8_temp_led));
  2929  019E  1403               	setc
  2930  019F  0D62               	rlf	Led_Manager@i,w
  2931  01A0  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2932  01A1  0084               	movwf	4
  2933  01A2  3087               	movlw	high (_Led_Matrix| (0+32768))
  2934  01A3  1803               	skipnc
  2935  01A4  3E01               	addlw	1
  2936  01A5  00FF               	movwf	127
  2937  01A6  118A  2700  118A   	fcall	stringtab
  2938  01A9  00DE               	movwf	??_Led_Manager
  2939  01AA  085E               	movf	??_Led_Manager,w
  2940  01AB  00F6               	movwf	Dio_Write@pin_no
  2941  01AC  08E1               	movf	Led_Manager@u8_temp_led,f
  2942  01AD  3000               	movlw	0
  2943  01AE  1903               	skipnz
  2944  01AF  3001               	movlw	1
  2945  01B0  00DF               	movwf	??_Led_Manager+1
  2946  01B1  085F               	movf	??_Led_Manager+1,w
  2947  01B2  00F7               	movwf	Dio_Write@bit_value
  2948  01B3  0862               	movf	Led_Manager@i,w
  2949  01B4  00E0               	movwf	??_Led_Manager+2
  2950  01B5  0760               	addwf	??_Led_Manager+2,w
  2951  01B6  3E12               	addlw	low (_Led_Matrix| (0+32768))
  2952  01B7  0084               	movwf	4
  2953  01B8  3087               	movlw	high (_Led_Matrix| (0+32768))
  2954  01B9  1803               	skipnc
  2955  01BA  3E01               	addlw	1
  2956  01BB  00FF               	movwf	127
  2957  01BC  118A  2700  118A   	fcall	stringtab
  2958  01BF  118A  21DC  118A   	fcall	_Dio_Write
  2959                           
  2960                           ;dio.c: 149: Dio.Led_u8_st_Led_Status[i]=Dio.Led_u8_st_Led_Status_Comp[i];
  2961  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2962  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2963  01C4  0862               	movf	Led_Manager@i,w
  2964  01C5  3E43               	addlw	_Dio& (0+255)
  2965  01C6  0084               	movwf	4
  2966  01C7  1383               	bcf	3,7	;select IRP bank0
  2967  01C8  0800               	movf	0,w
  2968  01C9  00DE               	movwf	??_Led_Manager
  2969  01CA  0862               	movf	Led_Manager@i,w
  2970  01CB  3E46               	addlw	(_Dio+3)& (0+255)
  2971  01CC  0084               	movwf	4
  2972  01CD  085E               	movf	??_Led_Manager,w
  2973  01CE  0080               	movwf	0
  2974                           
  2975                           ;dio.c: 150: }
  2976  01CF  29D5               	goto	l2639
  2977  01D0                     l2637:	
  2978                           
  2979                           ;dio.c: 151: else
  2980                           ;dio.c: 152: {
  2981                           ;dio.c: 153: Dio.Led_u8_st_Led_Status[i]--;
  2982  01D0  0862               	movf	Led_Manager@i,w
  2983  01D1  3E46               	addlw	(_Dio+3)& (0+255)
  2984  01D2  0084               	movwf	4
  2985  01D3  3001               	movlw	1
  2986  01D4  0280               	subwf	0,f
  2987  01D5                     l2639:	
  2988  01D5  3001               	movlw	1
  2989  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2990  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2991  01D8  00DE               	movwf	??_Led_Manager
  2992  01D9  085E               	movf	??_Led_Manager,w
  2993  01DA  07E2               	addwf	Led_Manager@i,f
  2994  01DB  291F               	goto	L3
  2995  01DC                     __end_of_Led_Manager:	
  2996                           
  2997                           	psect	text8
  2998  05C9                     __ptext8:	
  2999 ;; *************** function _adc_updator *****************
  3000 ;; Defined at:
  3001 ;;		line 76 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/adc.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  temp_data       2    0[BANK0 ] unsigned int 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;		None               void
  3008 ;; Registers used:
  3009 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3015 ;;      Params:         0       0       0       0
  3016 ;;      Locals:         0       2       0       0
  3017 ;;      Temps:          1       0       0       0
  3018 ;;      Totals:         1       2       0       0
  3019 ;;Total ram usage:        3 bytes
  3020 ;; Hardware stack levels used:    1
  3021 ;; Hardware stack levels required when called:    2
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _adc_updator
  3031  05C9                     _adc_updator:	
  3032                           
  3033                           ;adc.c: 78: static _UBYTE adc_no;
  3034                           ;adc.c: 79: _UINT16 temp_data;
  3035                           ;adc.c: 80: if(GO==0)
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _adc_updator: [wreg-fsr0h+status,2+status,0]
  3039  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3040  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  3041  05CB  189F               	btfsc	31,1	;volatile
  3042  05CC  0008               	return
  3043                           
  3044                           ;adc.c: 81: {
  3045                           ;adc.c: 82: temp_data=((((_UINT16)ADRESH)<<8)|(_UINT16)ADRESL);
  3046  05CD  081E               	movf	30,w	;volatile
  3047  05CE  01D3               	clrf	adc_updator@temp_data+1
  3048  05CF  07D3               	addwf	adc_updator@temp_data+1,f
  3049  05D0  1683               	bsf	3,5	;RP0=1, select bank1
  3050  05D1  1303               	bcf	3,6	;RP1=0, select bank1
  3051  05D2  081E               	movf	30,w	;volatile
  3052  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3053  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3054  05D5  01D2               	clrf	adc_updator@temp_data
  3055  05D6  07D2               	addwf	adc_updator@temp_data,f
  3056                           
  3057                           ;adc.c: 83: switch(adc_no)
  3058  05D7  2DEC               	goto	l2615
  3059  05D8                     l60:	
  3060                           ;adc.c: 84: {
  3061                           ;adc.c: 85: case 0 :
  3062                           
  3063                           
  3064                           ;adc.c: 95: adc_no=1;
  3065  05D8  01C2               	clrf	adc_updator@adc_no
  3066  05D9  0AC2               	incf	adc_updator@adc_no,f
  3067                           
  3068                           ;adc.c: 96: break;
  3069  05DA  2DFA               	goto	l61
  3070  05DB                     l2603:	
  3071                           ;adc.c: 97: case 1:
  3072                           
  3073                           
  3074                           ;adc.c: 107: adc_no=2;break;
  3075  05DB  3002               	movlw	2
  3076  05DC  2DE0               	goto	L4
  3077  05DD                     l63:	
  3078                           ;adc.c: 108: case 2:
  3079                           
  3080                           
  3081                           ;adc.c: 115: CHS0=1;
  3082  05DD  151F               	bsf	31,2	;volatile
  3083                           
  3084                           ;adc.c: 116: CHS1=1;
  3085  05DE  159F               	bsf	31,3	;volatile
  3086                           
  3087                           ;adc.c: 118: adc_no=3;break;
  3088  05DF  3003               	movlw	3
  3089  05E0                     L4:	
  3090  05E0  00F6               	movwf	??_adc_updator
  3091  05E1  0876               	movf	??_adc_updator,w
  3092  05E2  00C2               	movwf	adc_updator@adc_no
  3093  05E3  2DFA               	goto	l61
  3094  05E4                     l2607:	
  3095                           ;adc.c: 119: case 3:
  3096                           
  3097                           
  3098                           ;adc.c: 122: adc_chn3_data=temp_data;
  3099  05E4  0853               	movf	adc_updator@temp_data+1,w
  3100  05E5  01BB               	clrf	_adc_chn3_data+1
  3101  05E6  07BB               	addwf	_adc_chn3_data+1,f
  3102  05E7  0852               	movf	adc_updator@temp_data,w
  3103  05E8  01BA               	clrf	_adc_chn3_data
  3104  05E9  07BA               	addwf	_adc_chn3_data,f
  3105  05EA                     l2611:	
  3106                           ;adc.c: 130: default:
  3107                           
  3108                           ;adc.c: 129: adc_no=0;break;
  3109                           
  3110                           
  3111                           ;adc.c: 135: adc_no=0;break;
  3112  05EA  01C2               	clrf	adc_updator@adc_no
  3113                           
  3114                           ;adc.c: 136: }
  3115  05EB  2DFA               	goto	l61
  3116  05EC                     l2615:	
  3117  05EC  0842               	movf	adc_updator@adc_no,w
  3118                           
  3119                           ; Switch size 1, requested type "space"
  3120                           ; Number of cases is 4, Range of values is 0 to 3
  3121                           ; switch strategies available:
  3122                           ; Name         Instructions Cycles
  3123                           ; simple_byte           13     7 (average)
  3124                           ; direct_byte           15     7 (fixed)
  3125                           ; jumptable            260     6 (fixed)
  3126                           ;	Chosen strategy is simple_byte
  3127  05ED  3A00               	xorlw	0	; case 0
  3128  05EE  1903               	skipnz
  3129  05EF  2DD8               	goto	l60
  3130  05F0  3A01               	xorlw	1	; case 1
  3131  05F1  1903               	skipnz
  3132  05F2  2DDB               	goto	l2603
  3133  05F3  3A03               	xorlw	3	; case 2
  3134  05F4  1903               	skipnz
  3135  05F5  2DDD               	goto	l63
  3136  05F6  3A01               	xorlw	1	; case 3
  3137  05F7  1903               	skipnz
  3138  05F8  2DE4               	goto	l2607
  3139  05F9  2DEA               	goto	l2611
  3140  05FA                     l61:	
  3141                           
  3142                           ;adc.c: 137: GO=1;
  3143  05FA  149F               	bsf	31,1	;volatile
  3144  05FB  0008               	return
  3145  05FC                     __end_of_adc_updator:	
  3146                           
  3147                           	psect	text9
  3148  075E                     __ptext9:	
  3149 ;; *************** function _usege_timer *****************
  3150 ;; Defined at:
  3151 ;;		line 289 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;		None               void
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3165 ;;      Params:         0       0       0       0
  3166 ;;      Locals:         0       0       0       0
  3167 ;;      Temps:          1       0       0       0
  3168 ;;      Totals:         1       0       0       0
  3169 ;;Total ram usage:        1 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    2
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _usege_timer
  3181  075E                     _usege_timer:	
  3182                           
  3183                           ;eep.c: 292: static _UBYTE usage_time_res_count=0;
  3184                           ;eep.c: 293: if(start_stop_tmr_val)
  3185                           
  3186                           ;incstack = 0
  3187                           ; Regs used in _usege_timer: [wreg+status,2+status,0]
  3188  075E  087C               	movf	_start_stop_tmr_val,w
  3189  075F  1903               	btfsc	3,2
  3190  0760  0008               	return
  3191                           
  3192                           ;eep.c: 294: {
  3193                           ;eep.c: 295: if(usage_time_res_count>=10)
  3194  0761  300A               	movlw	10
  3195  0762  027D               	subwf	usege_timer@usage_time_res_count,w
  3196  0763  1C03               	skipc
  3197  0764  2F83               	goto	l2769
  3198                           
  3199                           ;eep.c: 296: {
  3200                           ;eep.c: 297: usage_time_res_count=0;
  3201  0765  01FD               	clrf	usege_timer@usage_time_res_count
  3202                           
  3203                           ;eep.c: 298: if(maintainace_status==0)
  3204  0766  08FB               	movf	_maintainace_status,f
  3205  0767  1D03               	skipz
  3206  0768  2F83               	goto	l2769
  3207                           
  3208                           ;eep.c: 299: {
  3209                           ;eep.c: 300: if(usage_time<0xFFFF)
  3210  0769  30FF               	movlw	255
  3211  076A  0679               	xorwf	_usage_time+1,w
  3212  076B  1D03               	skipz
  3213  076C  2F6F               	goto	u2085
  3214  076D  30FF               	movlw	255
  3215  076E  0678               	xorwf	_usage_time,w
  3216  076F                     u2085:	
  3217  076F  1903               	skipnz
  3218  0770  2F83               	goto	l2769
  3219                           
  3220                           ;eep.c: 301: {
  3221                           ;eep.c: 302: usage_time=usage_time+1;
  3222  0771  0878               	movf	_usage_time,w
  3223  0772  3E01               	addlw	1
  3224  0773  00F8               	movwf	_usage_time
  3225  0774  0879               	movf	_usage_time+1,w
  3226  0775  1803               	skipnc
  3227  0776  3E01               	addlw	1
  3228  0777  3E00               	addlw	0
  3229  0778  00F9               	movwf	_usage_time+1
  3230                           
  3231                           ;eep.c: 304: EEPRAM_SYSTEM_DATA[2]=(usage_time>>8);
  3232  0779  0879               	movf	_usage_time+1,w
  3233  077A  00F6               	movwf	??_usege_timer
  3234  077B  0876               	movf	??_usege_timer,w
  3235  077C  1283               	bcf	3,5	;RP0=0, select bank0
  3236  077D  1303               	bcf	3,6	;RP1=0, select bank0
  3237  077E  00AA               	movwf	_EEPRAM_SYSTEM_DATA+2
  3238                           
  3239                           ;eep.c: 306: EEPRAM_SYSTEM_DATA[1]=(usage_time&0x00FF);
  3240  077F  0878               	movf	_usage_time,w
  3241  0780  00F6               	movwf	??_usege_timer
  3242  0781  0876               	movf	??_usege_timer,w
  3243  0782  00A9               	movwf	_EEPRAM_SYSTEM_DATA+1
  3244  0783                     l2769:	
  3245                           ;eep.c: 309: else
  3246                           ;eep.c: 310: {
  3247                           
  3248                           ;eep.c: 307: }
  3249                           ;eep.c: 308: }
  3250                           
  3251                           
  3252                           ;eep.c: 313: }
  3253                           ;eep.c: 314: }
  3254                           ;eep.c: 315: usage_time_res_count=usage_time_res_count+1;
  3255  0783  087D               	movf	usege_timer@usage_time_res_count,w
  3256  0784  3E01               	addlw	1
  3257  0785  00F6               	movwf	??_usege_timer
  3258  0786  0876               	movf	??_usege_timer,w
  3259  0787  00FD               	movwf	usege_timer@usage_time_res_count
  3260  0788  0008               	return
  3261  0789                     __end_of_usege_timer:	
  3262                           
  3263                           	psect	text10
  3264  06BA                     __ptext10:	
  3265 ;; *************** function _Api_Led_Control *****************
  3266 ;; Defined at:
  3267 ;;		line 115 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  led_no          1    wreg     unsigned char 
  3270 ;;  led_status      1    6[COMMON] unsigned char 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  led_no          1    0[BANK0 ] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;		None               void
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3282 ;;      Params:         1       0       0       0
  3283 ;;      Locals:         0       1       0       0
  3284 ;;      Temps:          1       0       0       0
  3285 ;;      Totals:         2       1       0       0
  3286 ;;Total ram usage:        3 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    2
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_System_Status_Indicator
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           
  3297                           ;psect for function _Api_Led_Control
  3298  06BA                     _Api_Led_Control:	
  3299                           
  3300                           ;incstack = 0
  3301                           ; Regs used in _Api_Led_Control: [wreg-fsr0h+status,2+status,0]
  3302                           ;Api_Led_Control@led_no stored from wreg
  3303  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3304  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3305  06BC  00D2               	movwf	Api_Led_Control@led_no
  3306                           
  3307                           ;dio.c: 117: if(led_no<3)
  3308  06BD  3003               	movlw	3
  3309  06BE  0252               	subwf	Api_Led_Control@led_no,w
  3310  06BF  1803               	skipnc
  3311  06C0  0008               	return
  3312                           
  3313                           ;dio.c: 118: {
  3314                           ;dio.c: 119: Dio.Led_u8_st_Led_Status_Comp[led_no]=led_status;
  3315  06C1  0876               	movf	Api_Led_Control@led_status,w
  3316  06C2  00F7               	movwf	??_Api_Led_Control
  3317  06C3  0852               	movf	Api_Led_Control@led_no,w
  3318  06C4  3E43               	addlw	_Dio& (0+255)
  3319  06C5  0084               	movwf	4
  3320  06C6  0877               	movf	??_Api_Led_Control,w
  3321  06C7  1383               	bcf	3,7	;select IRP bank0
  3322  06C8  0080               	movwf	0
  3323                           
  3324                           ;dio.c: 120: Dio.Led_u8_st_Led_Status[led_no]=led_status;
  3325  06C9  0876               	movf	Api_Led_Control@led_status,w
  3326  06CA  00F7               	movwf	??_Api_Led_Control
  3327  06CB  0852               	movf	Api_Led_Control@led_no,w
  3328  06CC  3E46               	addlw	(_Dio+3)& (0+255)
  3329  06CD  0084               	movwf	4
  3330  06CE  0877               	movf	??_Api_Led_Control,w
  3331  06CF  0080               	movwf	0
  3332  06D0  0008               	return
  3333  06D1                     __end_of_Api_Led_Control:	
  3334                           
  3335                           	psect	text11
  3336  01DC                     __ptext11:	
  3337 ;; *************** function _Dio_Write *****************
  3338 ;; Defined at:
  3339 ;;		line 238 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  port_no         1    wreg     unsigned char 
  3342 ;;  pin_no          1    6[COMMON] unsigned char 
  3343 ;;  bit_value       1    7[COMMON] unsigned char 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  port_no         1    5[BANK0 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3355 ;;      Params:         2       0       0       0
  3356 ;;      Locals:         0       7       0       0
  3357 ;;      Temps:          0       5       0       0
  3358 ;;      Totals:         2      12       0       0
  3359 ;;Total ram usage:       14 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    2
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_Led_Manager
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _Dio_Write
  3371  01DC                     _Dio_Write:	
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _Dio_Write: [wreg-fsr0h+status,2+status,0]
  3375                           ;Dio_Write@port_no stored from wreg
  3376  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  3377  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  3378  01DE  00D7               	movwf	Dio_Write@port_no
  3379                           
  3380                           ;dio.c: 243: switch(port_no)
  3381  01DF  2A7C               	goto	l2543
  3382  01E0                     l2505:	
  3383                           ;dio.c: 244: {
  3384                           ;dio.c: 245: case 0: if(pin_no<8)
  3385                           
  3386  01E0  3008               	movlw	8
  3387  01E1  0276               	subwf	Dio_Write@pin_no,w
  3388  01E2  1803               	skipnc
  3389  01E3  2A11               	goto	l2515
  3390                           
  3391                           ;dio.c: 246: {
  3392                           ;dio.c: 247: PORTA=(bit_value?( PORTA | (0x01<<pin_no) ):(PORTA & (~(0x01<<pin_no))));
  3393  01E4  08F7               	movf	Dio_Write@bit_value,f
  3394  01E5  1D03               	skipz
  3395  01E6  29F9               	goto	l2511
  3396  01E7  3001               	movlw	1
  3397  01E8  00D2               	movwf	??_Dio_Write
  3398  01E9  0A76               	incf	Dio_Write@pin_no,w
  3399  01EA  29ED               	goto	u1724
  3400  01EB                     u1725:	
  3401  01EB  1003               	clrc
  3402  01EC  0DD2               	rlf	??_Dio_Write,f
  3403  01ED                     u1724:	
  3404  01ED  3EFF               	addlw	-1
  3405  01EE  1D03               	skipz
  3406  01EF  29EB               	goto	u1725
  3407  01F0  0852               	movf	??_Dio_Write,w
  3408  01F1  3AFF               	xorlw	255
  3409  01F2  0505               	andwf	5,w	;volatile
  3410  01F3  00D3               	movwf	??_Dio_Write+1
  3411  01F4  01D4               	clrf	??_Dio_Write+2
  3412  01F5  0853               	movf	??_Dio_Write+1,w
  3413  01F6  00D8               	movwf	_Dio_Write$120
  3414  01F7  0854               	movf	??_Dio_Write+2,w
  3415  01F8  2A0D               	goto	L5
  3416  01F9                     l2511:	
  3417  01F9  0A76               	incf	Dio_Write@pin_no,w
  3418  01FA  00D2               	movwf	??_Dio_Write
  3419  01FB  3001               	movlw	1
  3420  01FC  00D3               	movwf	??_Dio_Write+1
  3421  01FD  3000               	movlw	0
  3422  01FE  00D4               	movwf	??_Dio_Write+2
  3423  01FF  2A03               	goto	u1734
  3424  0200                     u1735:	
  3425  0200  1003               	clrc
  3426  0201  0DD3               	rlf	??_Dio_Write+1,f
  3427  0202  0DD4               	rlf	??_Dio_Write+2,f
  3428  0203                     u1734:	
  3429  0203  0BD2               	decfsz	??_Dio_Write,f
  3430  0204  2A00               	goto	u1735
  3431  0205  0853               	movf	??_Dio_Write+1,w
  3432  0206  0405               	iorwf	5,w	;volatile
  3433  0207  00D5               	movwf	??_Dio_Write+3
  3434  0208  0854               	movf	??_Dio_Write+2,w
  3435  0209  00D6               	movwf	??_Dio_Write+4
  3436  020A  0855               	movf	??_Dio_Write+3,w
  3437  020B  00D8               	movwf	_Dio_Write$120
  3438  020C  0856               	movf	??_Dio_Write+4,w
  3439  020D                     L5:	
  3440  020D  00D9               	movwf	_Dio_Write$120+1
  3441  020E  0858               	movf	_Dio_Write$120,w
  3442  020F  0085               	movwf	5	;volatile
  3443                           
  3444                           ;dio.c: 248: }
  3445  0210  0008               	return
  3446  0211                     l2515:	
  3447                           
  3448                           ;dio.c: 249: else
  3449                           ;dio.c: 250: {
  3450                           ;dio.c: 251: PORTA=pin_no;
  3451  0211  0876               	movf	Dio_Write@pin_no,w
  3452  0212  0085               	movwf	5	;volatile
  3453                           
  3454                           ;dio.c: 252: }
  3455                           ;dio.c: 253: break;
  3456  0213  0008               	return
  3457  0214                     l2517:	
  3458                           ;dio.c: 254: case 1: if(pin_no<8)
  3459                           
  3460  0214  3008               	movlw	8
  3461  0215  0276               	subwf	Dio_Write@pin_no,w
  3462  0216  1803               	skipnc
  3463  0217  2A45               	goto	l2527
  3464                           
  3465                           ;dio.c: 255: {
  3466                           ;dio.c: 256: PORTB=(bit_value?( PORTB | (0x01<<pin_no) ):(PORTB & (~(0x01<<pin_no))));
  3467  0218  08F7               	movf	Dio_Write@bit_value,f
  3468  0219  1D03               	skipz
  3469  021A  2A2D               	goto	l2523
  3470  021B  3001               	movlw	1
  3471  021C  00D2               	movwf	??_Dio_Write
  3472  021D  0A76               	incf	Dio_Write@pin_no,w
  3473  021E  2A21               	goto	u1764
  3474  021F                     u1765:	
  3475  021F  1003               	clrc
  3476  0220  0DD2               	rlf	??_Dio_Write,f
  3477  0221                     u1764:	
  3478  0221  3EFF               	addlw	-1
  3479  0222  1D03               	skipz
  3480  0223  2A1F               	goto	u1765
  3481  0224  0852               	movf	??_Dio_Write,w
  3482  0225  3AFF               	xorlw	255
  3483  0226  0506               	andwf	6,w	;volatile
  3484  0227  00D3               	movwf	??_Dio_Write+1
  3485  0228  01D4               	clrf	??_Dio_Write+2
  3486  0229  0853               	movf	??_Dio_Write+1,w
  3487  022A  00DA               	movwf	_Dio_Write$121
  3488  022B  0854               	movf	??_Dio_Write+2,w
  3489  022C  2A41               	goto	L6
  3490  022D                     l2523:	
  3491  022D  0A76               	incf	Dio_Write@pin_no,w
  3492  022E  00D2               	movwf	??_Dio_Write
  3493  022F  3001               	movlw	1
  3494  0230  00D3               	movwf	??_Dio_Write+1
  3495  0231  3000               	movlw	0
  3496  0232  00D4               	movwf	??_Dio_Write+2
  3497  0233  2A37               	goto	u1774
  3498  0234                     u1775:	
  3499  0234  1003               	clrc
  3500  0235  0DD3               	rlf	??_Dio_Write+1,f
  3501  0236  0DD4               	rlf	??_Dio_Write+2,f
  3502  0237                     u1774:	
  3503  0237  0BD2               	decfsz	??_Dio_Write,f
  3504  0238  2A34               	goto	u1775
  3505  0239  0853               	movf	??_Dio_Write+1,w
  3506  023A  0406               	iorwf	6,w	;volatile
  3507  023B  00D5               	movwf	??_Dio_Write+3
  3508  023C  0854               	movf	??_Dio_Write+2,w
  3509  023D  00D6               	movwf	??_Dio_Write+4
  3510  023E  0855               	movf	??_Dio_Write+3,w
  3511  023F  00DA               	movwf	_Dio_Write$121
  3512  0240  0856               	movf	??_Dio_Write+4,w
  3513  0241                     L6:	
  3514  0241  00DB               	movwf	_Dio_Write$121+1
  3515  0242  085A               	movf	_Dio_Write$121,w
  3516  0243  0086               	movwf	6	;volatile
  3517                           
  3518                           ;dio.c: 257: }
  3519  0244  0008               	return
  3520  0245                     l2527:	
  3521                           
  3522                           ;dio.c: 258: else
  3523                           ;dio.c: 259: {
  3524                           ;dio.c: 260: PORTB=pin_no;
  3525  0245  0876               	movf	Dio_Write@pin_no,w
  3526  0246  0086               	movwf	6	;volatile
  3527                           
  3528                           ;dio.c: 261: }
  3529                           ;dio.c: 262: break;
  3530  0247  0008               	return
  3531  0248                     l2529:	
  3532                           ;dio.c: 263: case 2: if(pin_no<8)
  3533                           
  3534  0248  3008               	movlw	8
  3535  0249  0276               	subwf	Dio_Write@pin_no,w
  3536  024A  1803               	skipnc
  3537  024B  2A79               	goto	l2539
  3538                           
  3539                           ;dio.c: 264: {
  3540                           ;dio.c: 265: PORTC=(bit_value?( PORTC | (0x01<<pin_no) ):(PORTC & (~(0x01<<pin_no))));
  3541  024C  08F7               	movf	Dio_Write@bit_value,f
  3542  024D  1D03               	skipz
  3543  024E  2A61               	goto	l2535
  3544  024F  3001               	movlw	1
  3545  0250  00D2               	movwf	??_Dio_Write
  3546  0251  0A76               	incf	Dio_Write@pin_no,w
  3547  0252  2A55               	goto	u1804
  3548  0253                     u1805:	
  3549  0253  1003               	clrc
  3550  0254  0DD2               	rlf	??_Dio_Write,f
  3551  0255                     u1804:	
  3552  0255  3EFF               	addlw	-1
  3553  0256  1D03               	skipz
  3554  0257  2A53               	goto	u1805
  3555  0258  0852               	movf	??_Dio_Write,w
  3556  0259  3AFF               	xorlw	255
  3557  025A  0507               	andwf	7,w	;volatile
  3558  025B  00D3               	movwf	??_Dio_Write+1
  3559  025C  01D4               	clrf	??_Dio_Write+2
  3560  025D  0853               	movf	??_Dio_Write+1,w
  3561  025E  00DC               	movwf	_Dio_Write$122
  3562  025F  0854               	movf	??_Dio_Write+2,w
  3563  0260  2A75               	goto	L7
  3564  0261                     l2535:	
  3565  0261  0A76               	incf	Dio_Write@pin_no,w
  3566  0262  00D2               	movwf	??_Dio_Write
  3567  0263  3001               	movlw	1
  3568  0264  00D3               	movwf	??_Dio_Write+1
  3569  0265  3000               	movlw	0
  3570  0266  00D4               	movwf	??_Dio_Write+2
  3571  0267  2A6B               	goto	u1814
  3572  0268                     u1815:	
  3573  0268  1003               	clrc
  3574  0269  0DD3               	rlf	??_Dio_Write+1,f
  3575  026A  0DD4               	rlf	??_Dio_Write+2,f
  3576  026B                     u1814:	
  3577  026B  0BD2               	decfsz	??_Dio_Write,f
  3578  026C  2A68               	goto	u1815
  3579  026D  0853               	movf	??_Dio_Write+1,w
  3580  026E  0407               	iorwf	7,w	;volatile
  3581  026F  00D5               	movwf	??_Dio_Write+3
  3582  0270  0854               	movf	??_Dio_Write+2,w
  3583  0271  00D6               	movwf	??_Dio_Write+4
  3584  0272  0855               	movf	??_Dio_Write+3,w
  3585  0273  00DC               	movwf	_Dio_Write$122
  3586  0274  0856               	movf	??_Dio_Write+4,w
  3587  0275                     L7:	
  3588  0275  00DD               	movwf	_Dio_Write$122+1
  3589  0276  085C               	movf	_Dio_Write$122,w
  3590  0277  0087               	movwf	7	;volatile
  3591                           
  3592                           ;dio.c: 266: }
  3593  0278  0008               	return
  3594  0279                     l2539:	
  3595                           
  3596                           ;dio.c: 267: else
  3597                           ;dio.c: 268: {
  3598                           ;dio.c: 269: PORTC=pin_no;
  3599  0279  0876               	movf	Dio_Write@pin_no,w
  3600  027A  0087               	movwf	7	;volatile
  3601                           
  3602                           ;dio.c: 272: }
  3603                           
  3604                           ;dio.c: 270: }
  3605                           ;dio.c: 271: default : break;
  3606  027B  0008               	return
  3607  027C                     l2543:	
  3608  027C  0857               	movf	Dio_Write@port_no,w
  3609                           
  3610                           ; Switch size 1, requested type "space"
  3611                           ; Number of cases is 3, Range of values is 0 to 2
  3612                           ; switch strategies available:
  3613                           ; Name         Instructions Cycles
  3614                           ; simple_byte           10     6 (average)
  3615                           ; direct_byte           13     7 (fixed)
  3616                           ; jumptable            260     6 (fixed)
  3617                           ;	Chosen strategy is simple_byte
  3618  027D  3A00               	xorlw	0	; case 0
  3619  027E  1903               	skipnz
  3620  027F  29E0               	goto	l2505
  3621  0280  3A01               	xorlw	1	; case 1
  3622  0281  1903               	skipnz
  3623  0282  2A14               	goto	l2517
  3624  0283  3A03               	xorlw	3	; case 2
  3625  0284  1903               	skipnz
  3626  0285  2A48               	goto	l2529
  3627  0286  2A87               	goto	l192
  3628  0287                     l192:	
  3629  0287  0008               	return
  3630  0288                     __end_of_Dio_Write:	
  3631                           
  3632                           	psect	text12
  3633  03F1                     __ptext12:	
  3634 ;; *************** function _Dio_Read *****************
  3635 ;; Defined at:
  3636 ;;		line 203 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/dio.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  port_no         1    wreg     unsigned char 
  3639 ;;  pin_no          1    6[COMMON] unsigned char 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  port_no         1    2[BANK0 ] unsigned char 
  3642 ;;  temp_port_da    1    3[BANK0 ] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      unsigned char 
  3645 ;; Registers used:
  3646 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3652 ;;      Params:         1       0       0       0
  3653 ;;      Locals:         0       2       0       0
  3654 ;;      Temps:          0       2       0       0
  3655 ;;      Totals:         1       4       0       0
  3656 ;;Total ram usage:        5 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    2
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_Led_Manager
  3663 ;;		_Switch_Manager
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           
  3668                           ;psect for function _Dio_Read
  3669  03F1                     _Dio_Read:	
  3670                           
  3671                           ;incstack = 0
  3672                           ; Regs used in _Dio_Read: [wreg-fsr0h+status,2+status,0]
  3673                           ;Dio_Read@port_no stored from wreg
  3674  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3675  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3676  03F3  00D4               	movwf	Dio_Read@port_no
  3677                           
  3678                           ;dio.c: 205: _UBYTE temp_port_data;
  3679                           ;dio.c: 206: switch(port_no)
  3680  03F4  2C3F               	goto	l2569
  3681  03F5                     l2547:	
  3682                           ;dio.c: 207: {
  3683                           ;dio.c: 208: case 0: if(pin_no<8)
  3684                           
  3685  03F5  3008               	movlw	8
  3686  03F6  0276               	subwf	Dio_Read@pin_no,w
  3687  03F7  1803               	skipnc
  3688  03F8  2C08               	goto	l2551
  3689                           
  3690                           ;dio.c: 209: {
  3691                           ;dio.c: 210: temp_port_data=((PORTA>>pin_no)&0x01);
  3692  03F9  0805               	movf	5,w	;volatile
  3693  03FA  00D2               	movwf	??_Dio_Read
  3694  03FB  0A76               	incf	Dio_Read@pin_no,w
  3695  03FC  2BFF               	goto	u1834
  3696  03FD                     u1835:	
  3697  03FD  1003               	clrc
  3698  03FE  0CD2               	rrf	??_Dio_Read,f
  3699  03FF                     u1834:	
  3700  03FF  3EFF               	addlw	-1
  3701  0400  1D03               	skipz
  3702  0401  2BFD               	goto	u1835
  3703  0402  0852               	movf	??_Dio_Read,w
  3704  0403  3901               	andlw	1
  3705  0404  00D3               	movwf	??_Dio_Read+1
  3706  0405  0853               	movf	??_Dio_Read+1,w
  3707  0406  00D5               	movwf	Dio_Read@temp_port_data
  3708                           
  3709                           ;dio.c: 211: }
  3710  0407  0008               	return
  3711  0408                     l2551:	
  3712                           
  3713                           ;dio.c: 212: else
  3714                           ;dio.c: 213: {
  3715                           ;dio.c: 214: temp_port_data= PORTA;
  3716  0408  0805               	movf	5,w	;volatile
  3717  0409  00D2               	movwf	??_Dio_Read
  3718  040A  0852               	movf	??_Dio_Read,w
  3719  040B  00D5               	movwf	Dio_Read@temp_port_data
  3720                           
  3721                           ;dio.c: 215: }
  3722                           ;dio.c: 216: break;
  3723  040C  0008               	return
  3724  040D                     l2553:	
  3725                           ;dio.c: 217: case 1: if(pin_no<8)
  3726                           
  3727  040D  3008               	movlw	8
  3728  040E  0276               	subwf	Dio_Read@pin_no,w
  3729  040F  1803               	skipnc
  3730  0410  2C20               	goto	l2557
  3731                           
  3732                           ;dio.c: 218: {
  3733                           ;dio.c: 219: temp_port_data=((PORTB>>pin_no)&0x01);
  3734  0411  0806               	movf	6,w	;volatile
  3735  0412  00D2               	movwf	??_Dio_Read
  3736  0413  0A76               	incf	Dio_Read@pin_no,w
  3737  0414  2C17               	goto	u1854
  3738  0415                     u1855:	
  3739  0415  1003               	clrc
  3740  0416  0CD2               	rrf	??_Dio_Read,f
  3741  0417                     u1854:	
  3742  0417  3EFF               	addlw	-1
  3743  0418  1D03               	skipz
  3744  0419  2C15               	goto	u1855
  3745  041A  0852               	movf	??_Dio_Read,w
  3746  041B  3901               	andlw	1
  3747  041C  00D3               	movwf	??_Dio_Read+1
  3748  041D  0853               	movf	??_Dio_Read+1,w
  3749  041E  00D5               	movwf	Dio_Read@temp_port_data
  3750                           
  3751                           ;dio.c: 220: }
  3752  041F  0008               	return
  3753  0420                     l2557:	
  3754                           
  3755                           ;dio.c: 221: else
  3756                           ;dio.c: 222: {
  3757                           ;dio.c: 223: temp_port_data= PORTB;
  3758  0420  0806               	movf	6,w	;volatile
  3759  0421  00D2               	movwf	??_Dio_Read
  3760  0422  0852               	movf	??_Dio_Read,w
  3761  0423  00D5               	movwf	Dio_Read@temp_port_data
  3762                           
  3763                           ;dio.c: 224: }
  3764                           ;dio.c: 225: break;
  3765  0424  0008               	return
  3766  0425                     l2559:	
  3767                           ;dio.c: 226: case 2: if(pin_no<8)
  3768                           
  3769  0425  3008               	movlw	8
  3770  0426  0276               	subwf	Dio_Read@pin_no,w
  3771  0427  1803               	skipnc
  3772  0428  2C38               	goto	l2563
  3773                           
  3774                           ;dio.c: 227: {
  3775                           ;dio.c: 228: temp_port_data=((PORTC>>pin_no)&0x01);
  3776  0429  0807               	movf	7,w	;volatile
  3777  042A  00D2               	movwf	??_Dio_Read
  3778  042B  0A76               	incf	Dio_Read@pin_no,w
  3779  042C  2C2F               	goto	u1874
  3780  042D                     u1875:	
  3781  042D  1003               	clrc
  3782  042E  0CD2               	rrf	??_Dio_Read,f
  3783  042F                     u1874:	
  3784  042F  3EFF               	addlw	-1
  3785  0430  1D03               	skipz
  3786  0431  2C2D               	goto	u1875
  3787  0432  0852               	movf	??_Dio_Read,w
  3788  0433  3901               	andlw	1
  3789  0434  00D3               	movwf	??_Dio_Read+1
  3790  0435  0853               	movf	??_Dio_Read+1,w
  3791  0436  00D5               	movwf	Dio_Read@temp_port_data
  3792                           
  3793                           ;dio.c: 229: }
  3794  0437  0008               	return
  3795  0438                     l2563:	
  3796                           
  3797                           ;dio.c: 230: else
  3798                           ;dio.c: 231: {
  3799                           ;dio.c: 232: temp_port_data= PORTC;
  3800  0438  0807               	movf	7,w	;volatile
  3801  0439  00D2               	movwf	??_Dio_Read
  3802  043A  0852               	movf	??_Dio_Read,w
  3803  043B  00D5               	movwf	Dio_Read@temp_port_data
  3804                           
  3805                           ;dio.c: 233: }
  3806                           ;dio.c: 234: break;
  3807  043C  0008               	return
  3808  043D                     l2565:	
  3809                           ;dio.c: 235: default : temp_port_data=0x00;break;
  3810                           
  3811  043D  01D5               	clrf	Dio_Read@temp_port_data
  3812                           
  3813                           ;dio.c: 236: }
  3814  043E  0008               	return
  3815  043F                     l2569:	
  3816  043F  0854               	movf	Dio_Read@port_no,w
  3817                           
  3818                           ; Switch size 1, requested type "space"
  3819                           ; Number of cases is 3, Range of values is 0 to 2
  3820                           ; switch strategies available:
  3821                           ; Name         Instructions Cycles
  3822                           ; simple_byte           10     6 (average)
  3823                           ; direct_byte           13     7 (fixed)
  3824                           ; jumptable            260     6 (fixed)
  3825                           ;	Chosen strategy is simple_byte
  3826  0440  3A00               	xorlw	0	; case 0
  3827  0441  1903               	skipnz
  3828  0442  2BF5               	goto	l2547
  3829  0443  3A01               	xorlw	1	; case 1
  3830  0444  1903               	skipnz
  3831  0445  2C0D               	goto	l2553
  3832  0446  3A03               	xorlw	3	; case 2
  3833  0447  1903               	skipnz
  3834  0448  2C25               	goto	l2559
  3835  0449  2C3D               	goto	l2565
  3836  044A  0008               	return
  3837  044B                     __end_of_Dio_Read:	
  3838                           
  3839                           	psect	text13
  3840  07AD                     __ptext13:	
  3841 ;; *************** function _Kernel_vRunContainer *****************
  3842 ;; Defined at:
  3843 ;;		line 146 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/os.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  afpContainer    2   12[BANK0 ] PTR const PTR FTN()void 
  3846 ;;		 -> Kernel_vHWReset(3), 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;		None               void
  3851 ;; Registers used:
  3852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3858 ;;      Params:         0       2       0       0
  3859 ;;      Locals:         0       0       0       0
  3860 ;;      Temps:          0       0       0       0
  3861 ;;      Totals:         0       2       0       0
  3862 ;;Total ram usage:        2 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    6
  3865 ;; This function calls:
  3866 ;;		Absolute function
  3867 ;;		_Systm_Ini_Proc_1
  3868 ;;		_Systm_Ini_Proc_2
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _Kernel_vRunContainer
  3876  07AD                     _Kernel_vRunContainer:	
  3877  07AD                     l2777:	
  3878                           ;os.c: 149: while (*afpContainerArray != 0)
  3879                           
  3880                           ;incstack = 0
  3881                           ; Regs used in _Kernel_vRunContainer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  3882                           
  3883  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  3884  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  3885  07AF  085F               	movf	Kernel_vRunContainer@afpContainerArray+1,w
  3886  07B0  00FF               	movwf	127
  3887  07B1  085E               	movf	Kernel_vRunContainer@afpContainerArray,w
  3888  07B2  0084               	movwf	4
  3889  07B3  118A  2700  118A   	fcall	stringtab
  3890  07B6  3800               	iorlw	0
  3891  07B7  1903               	btfsc	3,2
  3892  07B8  0008               	return
  3893                           
  3894                           ;os.c: 150: {
  3895                           ;os.c: 151: (*afpContainerArray)();
  3896  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3897  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3898  07BB  085F               	movf	Kernel_vRunContainer@afpContainerArray+1,w
  3899  07BC  00FF               	movwf	127
  3900  07BD  085E               	movf	Kernel_vRunContainer@afpContainerArray,w
  3901  07BE  0084               	movwf	4
  3902  07BF  118A  2700  118A   	fcall	stringtab
  3903  07C2  118A  2100  118A   	fcall	fptable
  3904                           
  3905                           ;os.c: 152: afpContainerArray++ ;
  3906  07C5  3001               	movlw	1
  3907  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3908  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3909  07C8  07DE               	addwf	Kernel_vRunContainer@afpContainerArray,f
  3910  07C9  1803               	skipnc
  3911  07CA  0ADF               	incf	Kernel_vRunContainer@afpContainerArray+1,f
  3912  07CB  2FAD               	goto	l2777
  3913  07CC                     __end_of_Kernel_vRunContainer:	
  3914                           
  3915                           	psect	text14
  3916  0789                     __ptext14:	
  3917 ;; *************** function _Systm_Ini_Proc_1 *****************
  3918 ;; Defined at:
  3919 ;;		line 76 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/system.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;		None
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;		None               void
  3926 ;; Registers used:
  3927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3933 ;;      Params:         0       0       0       0
  3934 ;;      Locals:         0       0       0       0
  3935 ;;      Temps:          0       1       0       0
  3936 ;;      Totals:         0       1       0       0
  3937 ;;Total ram usage:        1 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    5
  3940 ;; This function calls:
  3941 ;;		_Adc_Ini
  3942 ;;		_Dio_Ini
  3943 ;;		_EEP_to_RAM
  3944 ;;		_Eep_Ini
  3945 ;;		_Os_Ini
  3946 ;;		_Pwm_Ini
  3947 ;;		_Uart_Ini
  3948 ;;		_usage_time_ini
  3949 ;; This function is called by:
  3950 ;;		_Kernel_vRunContainer
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function _Systm_Ini_Proc_1
  3956  0789                     _Systm_Ini_Proc_1:	
  3957                           
  3958                           ;system.c: 79: OSCCON |= 0b01110001;
  3959                           
  3960                           ;incstack = 0
  3961                           ; Regs used in _Systm_Ini_Proc_1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3962  0789  3071               	movlw	113
  3963  078A  1283               	bcf	3,5	;RP0=0, select bank0
  3964  078B  1303               	bcf	3,6	;RP1=0, select bank0
  3965  078C  00DD               	movwf	??_Systm_Ini_Proc_1
  3966  078D  085D               	movf	??_Systm_Ini_Proc_1,w
  3967  078E  1683               	bsf	3,5	;RP0=1, select bank1
  3968  078F  1303               	bcf	3,6	;RP1=0, select bank1
  3969  0790  048F               	iorwf	15,f	;volatile
  3970                           
  3971                           ;system.c: 80: GIE=0;
  3972  0791  138B               	bcf	11,7	;volatile
  3973  0792                     l681:	
  3974                           ;system.c: 81: while(!HTS);
  3975                           
  3976  0792  1D0F               	btfss	15,2	;volatile
  3977  0793  2F92               	goto	l681
  3978                           
  3979                           ;system.c: 83: Dio_Ini();
  3980  0794  118A  26D1  118A   	fcall	_Dio_Ini
  3981                           
  3982                           ;system.c: 88: Adc_Ini();
  3983  0797  118A  27CC  118A   	fcall	_Adc_Ini
  3984                           
  3985                           ;system.c: 91: Os_Ini();
  3986  079A  118A  266A  118A   	fcall	_Os_Ini
  3987                           
  3988                           ;system.c: 94: Uart_Ini();
  3989  079D  118A  26E6  118A   	fcall	_Uart_Ini
  3990                           
  3991                           ;system.c: 99: Pwm_Ini();
  3992  07A0  118A  264C  118A   	fcall	_Pwm_Ini
  3993                           
  3994                           ;system.c: 102: Eep_Ini();
  3995  07A3  118A  2090  118A   	fcall	_Eep_Ini
  3996                           
  3997                           ;system.c: 103: EEP_to_RAM(0);
  3998  07A6  3000               	movlw	0
  3999  07A7  118A  24A4  118A   	fcall	_EEP_to_RAM
  4000                           
  4001                           ;system.c: 104: usage_time_ini();
  4002  07AA  118A  2731         	fcall	_usage_time_ini
  4003  07AC  0008               	return
  4004  07AD                     __end_of_Systm_Ini_Proc_1:	
  4005                           
  4006                           	psect	text15
  4007  0088                     __ptext15:	
  4008 ;; *************** function _Systm_Ini_Proc_2 *****************
  4009 ;; Defined at:
  4010 ;;		line 117 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/system.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;		None               void
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, pclath, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4024 ;;      Params:         0       0       0       0
  4025 ;;      Locals:         0       0       0       0
  4026 ;;      Temps:          0       0       0       0
  4027 ;;      Totals:         0       0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    3
  4031 ;; This function calls:
  4032 ;;		_delay_ms
  4033 ;; This function is called by:
  4034 ;;		_Kernel_vRunContainer
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           
  4039                           ;psect for function _Systm_Ini_Proc_2
  4040  0088                     _Systm_Ini_Proc_2:	
  4041                           
  4042                           ;system.c: 119: delay_ms(100);
  4043                           
  4044                           ;incstack = 0
  4045                           ; Regs used in _Systm_Ini_Proc_2: [wreg+status,2+status,0+pclath+cstack]
  4046  0088  3064               	movlw	100
  4047  0089  00F6               	movwf	delay_ms@delay_count
  4048  008A  3000               	movlw	0
  4049  008B  00F7               	movwf	delay_ms@delay_count+1
  4050  008C  118A  2687         	fcall	_delay_ms
  4051                           
  4052                           ;system.c: 120: GIE=1;
  4053  008E  178B               	bsf	11,7	;volatile
  4054  008F  0008               	return
  4055  0090                     __end_of_Systm_Ini_Proc_2:	
  4056                           
  4057                           	psect	text16
  4058  0687                     __ptext16:	
  4059 ;; *************** function _delay_ms *****************
  4060 ;; Defined at:
  4061 ;;		line 220 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/sevlb.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  delay_count     2    6[COMMON] unsigned int 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  i               1    1[BANK0 ] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4075 ;;      Params:         2       0       0       0
  4076 ;;      Locals:         0       1       0       0
  4077 ;;      Temps:          0       1       0       0
  4078 ;;      Totals:         2       2       0       0
  4079 ;;Total ram usage:        4 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    2
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_Systm_Ini_Proc_2
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           
  4090                           ;psect for function _delay_ms
  4091  0687                     _delay_ms:	
  4092  0687                     l2487:	
  4093                           ;sevlb.c: 222: _UBYTE i;
  4094                           ;sevlb.c: 223: while(delay_count)
  4095                           
  4096                           ;incstack = 0
  4097                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  4098                           
  4099  0687  0877               	movf	delay_ms@delay_count+1,w
  4100  0688  0476               	iorwf	delay_ms@delay_count,w
  4101  0689  1903               	btfsc	3,2
  4102  068A  0008               	return
  4103                           
  4104                           ;sevlb.c: 224: {
  4105                           ;sevlb.c: 225: for(i=0;i<224u;i++);
  4106  068B  1283               	bcf	3,5	;RP0=0, select bank0
  4107  068C  1303               	bcf	3,6	;RP1=0, select bank0
  4108  068D  01D3               	clrf	delay_ms@i
  4109  068E  30E0               	movlw	224
  4110  068F  0253               	subwf	delay_ms@i,w
  4111  0690  1803               	btfsc	3,0
  4112  0691  2E9A               	goto	l2485
  4113  0692                     l2481:	
  4114  0692  3001               	movlw	1
  4115  0693  00D2               	movwf	??_delay_ms
  4116  0694  0852               	movf	??_delay_ms,w
  4117  0695  07D3               	addwf	delay_ms@i,f
  4118  0696  30E0               	movlw	224
  4119  0697  0253               	subwf	delay_ms@i,w
  4120  0698  1C03               	skipc
  4121  0699  2E92               	goto	l2481
  4122  069A                     l2485:	
  4123                           
  4124                           ;sevlb.c: 227: delay_count=delay_count-1;
  4125  069A  0876               	movf	delay_ms@delay_count,w
  4126  069B  3EFF               	addlw	255
  4127  069C  00F6               	movwf	delay_ms@delay_count
  4128  069D  0877               	movf	delay_ms@delay_count+1,w
  4129  069E  1803               	skipnc
  4130  069F  3E01               	addlw	1
  4131  06A0  3EFF               	addlw	255
  4132  06A1  00F7               	movwf	delay_ms@delay_count+1
  4133  06A2  2E87               	goto	l2487
  4134  06A3                     __end_of_delay_ms:	
  4135                           
  4136                           	psect	text17
  4137  0731                     __ptext17:	
  4138 ;; *************** function _usage_time_ini *****************
  4139 ;; Defined at:
  4140 ;;		line 256 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  maint_time      2    6[COMMON] unsigned int 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;		None               void
  4147 ;; Registers used:
  4148 ;;		wreg, status,2, btemp+1
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4154 ;;      Params:         0       0       0       0
  4155 ;;      Locals:         2       0       0       0
  4156 ;;      Temps:          0       4       0       0
  4157 ;;      Totals:         2       4       0       0
  4158 ;;Total ram usage:        6 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:    2
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_Systm_Ini_Proc_1
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           
  4169                           ;psect for function _usage_time_ini
  4170  0731                     _usage_time_ini:	
  4171                           
  4172                           ;eep.c: 259: _UINT16 maint_time;
  4173                           ;eep.c: 262: usage_time=((((_UINT16)EEPRAM_SYSTEM_DATA[2])<<8)|EEPRAM_SYSTEM_DATA[1]);
  4174                           
  4175                           ;incstack = 0
  4176                           ; Regs used in _usage_time_ini: [wreg+status,2+btemp+1]
  4177  0731  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0732  1303               	bcf	3,6	;RP1=0, select bank0
  4179  0733  0829               	movf	_EEPRAM_SYSTEM_DATA+1,w
  4180  0734  00D2               	movwf	??_usage_time_ini
  4181  0735  01D3               	clrf	??_usage_time_ini+1
  4182  0736  082A               	movf	_EEPRAM_SYSTEM_DATA+2,w
  4183  0737  00D4               	movwf	??_usage_time_ini+2
  4184  0738  01D5               	clrf	??_usage_time_ini+3
  4185  0739  0854               	movf	??_usage_time_ini+2,w
  4186  073A  00D5               	movwf	??_usage_time_ini+3
  4187  073B  01D4               	clrf	??_usage_time_ini+2
  4188  073C  0852               	movf	??_usage_time_ini,w
  4189  073D  0454               	iorwf	??_usage_time_ini+2,w
  4190  073E  00F8               	movwf	_usage_time
  4191  073F  0853               	movf	??_usage_time_ini+1,w
  4192  0740  0455               	iorwf	??_usage_time_ini+3,w
  4193  0741  00F9               	movwf	_usage_time+1
  4194                           
  4195                           ;eep.c: 264: maint_time =((((_UINT16)EEPRAM_APP_DATA[1])<<8)|EEPRAM_APP_DATA[0]);
  4196  0742  0832               	movf	_EEPRAM_APP_DATA,w
  4197  0743  00D2               	movwf	??_usage_time_ini
  4198  0744  01D3               	clrf	??_usage_time_ini+1
  4199  0745  0833               	movf	_EEPRAM_APP_DATA+1,w
  4200  0746  00D4               	movwf	??_usage_time_ini+2
  4201  0747  01D5               	clrf	??_usage_time_ini+3
  4202  0748  0854               	movf	??_usage_time_ini+2,w
  4203  0749  00D5               	movwf	??_usage_time_ini+3
  4204  074A  01D4               	clrf	??_usage_time_ini+2
  4205  074B  0852               	movf	??_usage_time_ini,w
  4206  074C  0454               	iorwf	??_usage_time_ini+2,w
  4207  074D  00F6               	movwf	usage_time_ini@maint_time
  4208  074E  0853               	movf	??_usage_time_ini+1,w
  4209  074F  0455               	iorwf	??_usage_time_ini+3,w
  4210  0750  00F7               	movwf	usage_time_ini@maint_time+1
  4211                           
  4212                           ;eep.c: 266: if(usage_time<maint_time)
  4213  0751  0877               	movf	usage_time_ini@maint_time+1,w
  4214  0752  0279               	subwf	_usage_time+1,w
  4215  0753  1D03               	skipz
  4216  0754  2F57               	goto	u1655
  4217  0755  0876               	movf	usage_time_ini@maint_time,w
  4218  0756  0278               	subwf	_usage_time,w
  4219  0757                     u1655:	
  4220  0757  1803               	skipnc
  4221  0758  2F5B               	goto	l321
  4222                           
  4223                           ;eep.c: 267: {
  4224                           ;eep.c: 268: maintainace_status=0;
  4225  0759  01FB               	clrf	_maintainace_status
  4226                           
  4227                           ;eep.c: 269: }
  4228  075A  0008               	return
  4229  075B                     l321:	
  4230                           
  4231                           ;eep.c: 270: else
  4232                           ;eep.c: 271: {
  4233                           ;eep.c: 272: maintainace_status=1;
  4234  075B  01FB               	clrf	_maintainace_status
  4235  075C  0AFB               	incf	_maintainace_status,f
  4236  075D  0008               	return
  4237  075E                     __end_of_usage_time_ini:	
  4238                           
  4239                           	psect	text18
  4240  06E6                     __ptext18:	
  4241 ;; *************** function _Uart_Ini *****************
  4242 ;; Defined at:
  4243 ;;		line 12 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/uart.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;		None               void
  4250 ;; Registers used:
  4251 ;;		wreg
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4257 ;;      Params:         0       0       0       0
  4258 ;;      Locals:         0       0       0       0
  4259 ;;      Temps:          0       0       0       0
  4260 ;;      Totals:         0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    2
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_Systm_Ini_Proc_1
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           
  4272                           ;psect for function _Uart_Ini
  4273  06E6                     _Uart_Ini:	
  4274                           
  4275                           ;uart.c: 15: BRGH = 0;
  4276                           
  4277                           ;incstack = 0
  4278                           ; Regs used in _Uart_Ini: [wreg]
  4279  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  4280  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  4281  06E8  1118               	bcf	24,2	;volatile
  4282                           
  4283                           ;uart.c: 16: BRG16 = 0;
  4284  06E9  119B               	bcf	27,3	;volatile
  4285                           
  4286                           ;uart.c: 17: SYNC = 0;
  4287  06EA  1218               	bcf	24,4	;volatile
  4288                           
  4289                           ;uart.c: 18: SPEN = 1;
  4290  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  4291  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  4292  06ED  1798               	bsf	24,7	;volatile
  4293                           
  4294                           ;uart.c: 24: SPBRG=12;
  4295  06EE  300C               	movlw	12
  4296  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  4297  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  4298  06F1  0099               	movwf	25	;volatile
  4299                           
  4300                           ;uart.c: 28: CREN = 1;
  4301  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  4302  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  4303  06F4  1618               	bsf	24,4	;volatile
  4304                           
  4305                           ;uart.c: 29: RCIE=1;
  4306  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  4307  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  4308  06F7  168C               	bsf	12,5	;volatile
  4309                           
  4310                           ;uart.c: 32: TXEN = 1;
  4311  06F8  1698               	bsf	24,5	;volatile
  4312  06F9  0008               	return
  4313  06FA                     __end_of_Uart_Ini:	
  4314                           
  4315                           	psect	text19
  4316  064C                     __ptext19:	
  4317 ;; *************** function _Pwm_Ini *****************
  4318 ;; Defined at:
  4319 ;;		line 4 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/plat
      +form/Pic_16f690_Platform_build.X/files/os/pwm.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;		None               void
  4326 ;; Registers used:
  4327 ;;		wreg, status,2, status,0, pclath, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4333 ;;      Params:         0       0       0       0
  4334 ;;      Locals:         0       0       0       0
  4335 ;;      Temps:          0       0       0       0
  4336 ;;      Totals:         0       0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    3
  4340 ;; This function calls:
  4341 ;;		_set_bit_position
  4342 ;; This function is called by:
  4343 ;;		_Systm_Ini_Proc_1
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           
  4348                           ;psect for function _Pwm_Ini
  4349  064C                     _Pwm_Ini:	
  4350                           
  4351                           ;pwm.c: 7: TMR2IF=0;
  4352                           
  4353                           ;incstack = 0
  4354                           ; Regs used in _Pwm_Ini: [wreg+status,2+status,0+pclath+cstack]
  4355  064C  1283               	bcf	3,5	;RP0=0, select bank0
  4356  064D  1303               	bcf	3,6	;RP1=0, select bank0
  4357  064E  108C               	bcf	12,1	;volatile
  4358                           
  4359                           ;pwm.c: 8: T2CON=set_bit_position(T2CON,1);
  4360  064F  01F6               	clrf	set_bit_position@bit_position
  4361  0650  0AF6               	incf	set_bit_position@bit_position,f
  4362  0651  0812               	movf	18,w	;volatile
  4363  0652  118A  2071         	fcall	_set_bit_position
  4364  0654  1283               	bcf	3,5	;RP0=0, select bank0
  4365  0655  1303               	bcf	3,6	;RP1=0, select bank0
  4366  0656  0092               	movwf	18	;volatile
  4367                           
  4368                           ;pwm.c: 9: TMR2ON=1;
  4369  0657  1512               	bsf	18,2	;volatile
  4370                           
  4371                           ;pwm.c: 13: PR2 = 100;
  4372  0658  3064               	movlw	100
  4373  0659  1683               	bsf	3,5	;RP0=1, select bank1
  4374  065A  1303               	bcf	3,6	;RP1=0, select bank1
  4375  065B  0092               	movwf	18	;volatile
  4376                           
  4377                           ;pwm.c: 14: CCPR1L=0x00;
  4378  065C  1283               	bcf	3,5	;RP0=0, select bank0
  4379  065D  1303               	bcf	3,6	;RP1=0, select bank0
  4380  065E  0195               	clrf	21	;volatile
  4381                           
  4382                           ;pwm.c: 15: CCP1CON=CCP1CON & 0b11001111;
  4383  065F  0817               	movf	23,w	;volatile
  4384  0660  39CF               	andlw	207
  4385  0661  0097               	movwf	23	;volatile
  4386                           
  4387                           ;pwm.c: 16: CCP1CON=CCP1CON|0x0C;
  4388  0662  0817               	movf	23,w	;volatile
  4389  0663  380C               	iorlw	12
  4390  0664  0097               	movwf	23	;volatile
  4391                           
  4392                           ;pwm.c: 17: PSTRCON=0x10;
  4393  0665  3010               	movlw	16
  4394  0666  1683               	bsf	3,5	;RP0=1, select bank3
  4395  0667  1703               	bsf	3,6	;RP1=1, select bank3
  4396  0668  009D               	movwf	29	;volatile
  4397  0669  0008               	return
  4398  066A                     __end_of_Pwm_Ini:	
  4399                           
  4400                           	psect	text20
  4401  0071                     __ptext20:	
  4402 ;; *************** function _set_bit_position *****************
  4403 ;; Defined at:
  4404 ;;		line 13 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/sevlb.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  number1         1    wreg     unsigned char 
  4407 ;;  bit_position    1    6[COMMON] unsigned char 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  number1         1    0[BANK0 ] unsigned char 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      unsigned char 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4419 ;;      Params:         1       0       0       0
  4420 ;;      Locals:         0       1       0       0
  4421 ;;      Temps:          1       0       0       0
  4422 ;;      Totals:         2       1       0       0
  4423 ;;Total ram usage:        3 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    2
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_Pwm_Ini
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           
  4434                           ;psect for function _set_bit_position
  4435  0071                     _set_bit_position:	
  4436                           
  4437                           ;incstack = 0
  4438                           ; Regs used in _set_bit_position: [wreg+status,2+status,0]
  4439                           ;set_bit_position@number1 stored from wreg
  4440  0071  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0072  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0073  00D2               	movwf	set_bit_position@number1
  4443                           
  4444                           ;sevlb.c: 15: return( number1 | (0x01<<bit_position) );
  4445  0074  3001               	movlw	1
  4446  0075  00F7               	movwf	??_set_bit_position
  4447  0076  0A76               	incf	set_bit_position@bit_position,w
  4448  0077  287A               	goto	u1584
  4449  0078                     u1585:	
  4450  0078  1003               	clrc
  4451  0079  0DF7               	rlf	??_set_bit_position,f
  4452  007A                     u1584:	
  4453  007A  3EFF               	addlw	-1
  4454  007B  1D03               	skipz
  4455  007C  2878               	goto	u1585
  4456  007D  0877               	movf	??_set_bit_position,w
  4457  007E  0452               	iorwf	set_bit_position@number1,w
  4458  007F  0008               	return
  4459  0080                     __end_of_set_bit_position:	
  4460                           
  4461                           	psect	text21
  4462  066A                     __ptext21:	
  4463 ;; *************** function _Os_Ini *****************
  4464 ;; Defined at:
  4465 ;;		line 311 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/os.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;		None               void
  4472 ;; Registers used:
  4473 ;;		wreg
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4479 ;;      Params:         0       0       0       0
  4480 ;;      Locals:         0       0       0       0
  4481 ;;      Temps:          0       0       0       0
  4482 ;;      Totals:         0       0       0       0
  4483 ;;Total ram usage:        0 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    2
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_Systm_Ini_Proc_1
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function _Os_Ini
  4495  066A                     _Os_Ini:	
  4496                           
  4497                           ;os.c: 314: OPTION_REGbits.PSA=0;
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _Os_Ini: [wreg]
  4501  066A  1683               	bsf	3,5	;RP0=1, select bank1
  4502  066B  1303               	bcf	3,6	;RP1=0, select bank1
  4503  066C  1181               	bcf	1,3	;volatile
  4504                           
  4505                           ;os.c: 315: OPTION_REGbits.PS2=0;
  4506  066D  1101               	bcf	1,2	;volatile
  4507                           
  4508                           ;os.c: 316: OPTION_REGbits.PS1=1;
  4509  066E  1481               	bsf	1,1	;volatile
  4510                           
  4511                           ;os.c: 317: OPTION_REGbits.PS0=1;
  4512  066F  1401               	bsf	1,0	;volatile
  4513                           
  4514                           ;os.c: 318: OPTION_REGbits.T0CS=0;
  4515  0670  1281               	bcf	1,5	;volatile
  4516                           
  4517                           ;os.c: 319: OPTION_REGbits.T0SE=0;
  4518  0671  1201               	bcf	1,4	;volatile
  4519                           
  4520                           ;os.c: 320: TMR0=135;
  4521  0672  3087               	movlw	135
  4522  0673  1283               	bcf	3,5	;RP0=0, select bank0
  4523  0674  1303               	bcf	3,6	;RP1=0, select bank0
  4524  0675  0081               	movwf	1	;volatile
  4525                           
  4526                           ;os.c: 321: T0IE =0x01;
  4527  0676  168B               	bsf	11,5	;volatile
  4528                           
  4529                           ;os.c: 322: T0IF =0;
  4530  0677  110B               	bcf	11,2	;volatile
  4531                           
  4532                           ;os.c: 326: TMR1CS=0;
  4533  0678  1090               	bcf	16,1	;volatile
  4534                           
  4535                           ;os.c: 327: T1OSCEN = 0;
  4536  0679  1190               	bcf	16,3	;volatile
  4537                           
  4538                           ;os.c: 328: TMR1=0xB1DF;
  4539  067A  30B1               	movlw	177
  4540  067B  008F               	movwf	15	;volatile
  4541  067C  30DF               	movlw	223
  4542  067D  008E               	movwf	14	;volatile
  4543                           
  4544                           ;os.c: 329: TMR1ON=0x01;
  4545  067E  1410               	bsf	16,0	;volatile
  4546                           
  4547                           ;os.c: 330: TMR1IE=0x01;
  4548  067F  1683               	bsf	3,5	;RP0=1, select bank1
  4549  0680  1303               	bcf	3,6	;RP1=0, select bank1
  4550  0681  140C               	bsf	12,0	;volatile
  4551                           
  4552                           ;os.c: 331: TMR1IF=0;
  4553  0682  1283               	bcf	3,5	;RP0=0, select bank0
  4554  0683  1303               	bcf	3,6	;RP1=0, select bank0
  4555  0684  100C               	bcf	12,0	;volatile
  4556                           
  4557                           ;os.c: 341: PEIE=1;
  4558  0685  170B               	bsf	11,6	;volatile
  4559  0686  0008               	return
  4560  0687                     __end_of_Os_Ini:	
  4561                           
  4562                           	psect	text22
  4563  0090                     __ptext22:	
  4564 ;; *************** function _Eep_Ini *****************
  4565 ;; Defined at:
  4566 ;;		line 32 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;		None
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;		None               void
  4573 ;; Registers used:
  4574 ;;		None
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4580 ;;      Params:         0       0       0       0
  4581 ;;      Locals:         0       0       0       0
  4582 ;;      Temps:          0       0       0       0
  4583 ;;      Totals:         0       0       0       0
  4584 ;;Total ram usage:        0 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    2
  4587 ;; This function calls:
  4588 ;;		Nothing
  4589 ;; This function is called by:
  4590 ;;		_Systm_Ini_Proc_1
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           
  4595                           ;psect for function _Eep_Ini
  4596  0090                     _Eep_Ini:	
  4597                           
  4598                           ;eep.c: 35: EEIE=1;
  4599                           
  4600                           ;incstack = 0
  4601                           ; Regs used in _Eep_Ini: []
  4602  0090  1683               	bsf	3,5	;RP0=1, select bank1
  4603  0091  1303               	bcf	3,6	;RP1=0, select bank1
  4604  0092  160D               	bsf	13,4	;volatile
  4605  0093  0008               	return
  4606  0094                     __end_of_Eep_Ini:	
  4607                           
  4608                           	psect	text23
  4609  04A4                     __ptext23:	
  4610 ;; *************** function _EEP_to_RAM *****************
  4611 ;; Defined at:
  4612 ;;		line 185 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  eep_error_st    1    wreg     unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  eep_error_st    1    5[BANK0 ] unsigned char 
  4617 ;;  i               1   10[BANK0 ] unsigned char 
  4618 ;;  j               1    8[BANK0 ] unsigned char 
  4619 ;;  i               1    9[BANK0 ] unsigned char 
  4620 ;;  j               1    7[BANK0 ] unsigned char 
  4621 ;;  temp_data       1    6[BANK0 ] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;		None               void
  4624 ;; Registers used:
  4625 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4631 ;;      Params:         0       0       0       0
  4632 ;;      Locals:         0       6       0       0
  4633 ;;      Temps:          0       1       0       0
  4634 ;;      Totals:         0       7       0       0
  4635 ;;Total ram usage:        7 bytes
  4636 ;; Hardware stack levels used:    1
  4637 ;; Hardware stack levels required when called:    4
  4638 ;; This function calls:
  4639 ;;		_EEP_READ
  4640 ;;		_check_eep_checksum
  4641 ;; This function is called by:
  4642 ;;		_Systm_Ini_Proc_1
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           
  4647                           ;psect for function _EEP_to_RAM
  4648  04A4                     _EEP_to_RAM:	
  4649                           
  4650                           ;incstack = 0
  4651                           ; Regs used in _EEP_to_RAM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4652                           ;EEP_to_RAM@eep_error_stetegy stored from wreg
  4653  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  4654  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  4655  04A6  00D7               	movwf	EEP_to_RAM@eep_error_stetegy
  4656                           
  4657                           ;eep.c: 187: _UBYTE i,temp_data;
  4658                           ;eep.c: 188: _UBYTE j;
  4659                           ;eep.c: 189: temp_data=check_eep_checksum();
  4660  04A7  118A  253E  118A   	fcall	_check_eep_checksum
  4661  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  4662  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  4663  04AC  00D6               	movwf	??_EEP_to_RAM
  4664  04AD  0856               	movf	??_EEP_to_RAM,w
  4665  04AE  00D8               	movwf	EEP_to_RAM@temp_data
  4666                           
  4667                           ;eep.c: 190: if((temp_data==0)||(eep_error_stetegy==0))
  4668  04AF  0858               	movf	EEP_to_RAM@temp_data,w
  4669  04B0  1D03               	skipz
  4670  04B1  08D7               	movf	EEP_to_RAM@eep_error_stetegy,f
  4671  04B2  1D03               	skipz
  4672  04B3  0008               	return
  4673                           
  4674                           ;eep.c: 191: {
  4675                           ;eep.c: 193: for(_UBYTE i=10,j=0;i<=(10+2);i++,j++)
  4676  04B4  300A               	movlw	10
  4677  04B5  00D6               	movwf	??_EEP_to_RAM
  4678  04B6  0856               	movf	??_EEP_to_RAM,w
  4679  04B7  00DC               	movwf	EEP_to_RAM@i_191
  4680  04B8  01DA               	clrf	EEP_to_RAM@j_192
  4681  04B9  300D               	movlw	13
  4682  04BA  025C               	subwf	EEP_to_RAM@i_191,w
  4683  04BB  1803               	btfsc	3,0
  4684  04BC  2CD6               	goto	l2413
  4685  04BD                     l2405:	
  4686                           
  4687                           ;eep.c: 194: {
  4688                           ;eep.c: 195: EEPRAM_APP_DATA[j]=EEP_READ(i);
  4689  04BD  085C               	movf	EEP_to_RAM@i_191,w
  4690  04BE  118A  203E  118A   	fcall	_EEP_READ
  4691  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  4692  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  4693  04C3  00D6               	movwf	??_EEP_to_RAM
  4694  04C4  085A               	movf	EEP_to_RAM@j_192,w
  4695  04C5  3E32               	addlw	_EEPRAM_APP_DATA& (0+255)
  4696  04C6  0084               	movwf	4
  4697  04C7  0856               	movf	??_EEP_to_RAM,w
  4698  04C8  1383               	bcf	3,7	;select IRP bank0
  4699  04C9  0080               	movwf	0
  4700  04CA  3001               	movlw	1
  4701  04CB  00D6               	movwf	??_EEP_to_RAM
  4702  04CC  0856               	movf	??_EEP_to_RAM,w
  4703  04CD  07DC               	addwf	EEP_to_RAM@i_191,f
  4704  04CE  3001               	movlw	1
  4705  04CF  00D6               	movwf	??_EEP_to_RAM
  4706  04D0  0856               	movf	??_EEP_to_RAM,w
  4707  04D1  07DA               	addwf	EEP_to_RAM@j_192,f
  4708  04D2  300D               	movlw	13
  4709  04D3  025C               	subwf	EEP_to_RAM@i_191,w
  4710  04D4  1C03               	skipc
  4711  04D5  2CBD               	goto	l2405
  4712  04D6                     l2413:	
  4713                           
  4714                           ;eep.c: 196: }
  4715                           ;eep.c: 197: for(i=4,j=0;i<=(6+4);i++,j++)
  4716  04D6  3004               	movlw	4
  4717  04D7  00D6               	movwf	??_EEP_to_RAM
  4718  04D8  0856               	movf	??_EEP_to_RAM,w
  4719  04D9  00DB               	movwf	EEP_to_RAM@i
  4720  04DA  01D9               	clrf	EEP_to_RAM@j
  4721  04DB                     L8:	
  4722  04DB  300B               	movlw	11
  4723  04DC  025B               	subwf	EEP_to_RAM@i,w
  4724  04DD  1803               	btfsc	3,0
  4725  04DE  0008               	return
  4726                           
  4727                           ;eep.c: 198: {
  4728                           ;eep.c: 199: EEPRAM_SYSTEM_DATA[j]=EEP_READ(i);
  4729  04DF  085B               	movf	EEP_to_RAM@i,w
  4730  04E0  118A  203E  118A   	fcall	_EEP_READ
  4731  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  4732  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  4733  04E5  00D6               	movwf	??_EEP_to_RAM
  4734  04E6  0859               	movf	EEP_to_RAM@j,w
  4735  04E7  3E28               	addlw	_EEPRAM_SYSTEM_DATA& (0+255)
  4736  04E8  0084               	movwf	4
  4737  04E9  0856               	movf	??_EEP_to_RAM,w
  4738  04EA  1383               	bcf	3,7	;select IRP bank0
  4739  04EB  0080               	movwf	0
  4740  04EC  3001               	movlw	1
  4741  04ED  00D6               	movwf	??_EEP_to_RAM
  4742  04EE  0856               	movf	??_EEP_to_RAM,w
  4743  04EF  07DB               	addwf	EEP_to_RAM@i,f
  4744  04F0  3001               	movlw	1
  4745  04F1  00D6               	movwf	??_EEP_to_RAM
  4746  04F2  0856               	movf	??_EEP_to_RAM,w
  4747  04F3  07D9               	addwf	EEP_to_RAM@j,f
  4748  04F4  2CDB               	goto	L8
  4749  04F5                     __end_of_EEP_to_RAM:	
  4750                           ;eep.c: 202: else
  4751                           ;eep.c: 203: {
  4752                           
  4753                           ;eep.c: 200: }
  4754                           ;eep.c: 201: }
  4755                           
  4756                           
  4757                           	psect	text24
  4758  053E                     __ptext24:	
  4759 ;; *************** function _check_eep_checksum *****************
  4760 ;; Defined at:
  4761 ;;		line 208 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  i               1    3[BANK0 ] unsigned char 
  4766 ;;  checksum_dat    1    2[BANK0 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      unsigned char 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4776 ;;      Params:         0       0       0       0
  4777 ;;      Locals:         0       2       0       0
  4778 ;;      Temps:          1       0       0       0
  4779 ;;      Totals:         1       2       0       0
  4780 ;;Total ram usage:        3 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    3
  4783 ;; This function calls:
  4784 ;;		_EEP_READ
  4785 ;; This function is called by:
  4786 ;;		_EEP_to_RAM
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function _check_eep_checksum
  4792  053E                     _check_eep_checksum:	
  4793                           
  4794                           ;eep.c: 210: _UBYTE checksum_data;
  4795                           ;eep.c: 211: checksum_data=0;
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in _check_eep_checksum: [wreg+status,2+status,0+pclath+cstack]
  4799  053E  1283               	bcf	3,5	;RP0=0, select bank0
  4800  053F  1303               	bcf	3,6	;RP1=0, select bank0
  4801  0540  01D4               	clrf	check_eep_checksum@checksum_data
  4802                           
  4803                           ;eep.c: 212: if(EEP_READ(3)==0xFF)
  4804  0541  3003               	movlw	3
  4805  0542  118A  203E  118A   	fcall	_EEP_READ
  4806  0545  3AFF               	xorlw	255
  4807  0546  1D03               	skipz
  4808  0547  2D4A               	goto	l2317
  4809                           
  4810                           ;eep.c: 213: {
  4811                           ;eep.c: 215: return(0);
  4812  0548  3000               	movlw	0
  4813                           
  4814                           ;eep.c: 216: }
  4815  0549  0008               	return
  4816  054A                     l2317:	
  4817                           
  4818                           ;eep.c: 217: else
  4819                           ;eep.c: 218: {
  4820                           ;eep.c: 219: for(_UBYTE i=0;i<=(10 + 2); i++)
  4821  054A  1283               	bcf	3,5	;RP0=0, select bank0
  4822  054B  1303               	bcf	3,6	;RP1=0, select bank0
  4823  054C  01D5               	clrf	check_eep_checksum@i
  4824  054D  300D               	movlw	13
  4825  054E  0255               	subwf	check_eep_checksum@i,w
  4826  054F  1803               	btfsc	3,0
  4827  0550  2D66               	goto	l2331
  4828  0551                     l2323:	
  4829                           
  4830                           ;eep.c: 220: {
  4831                           ;eep.c: 221: if(i!=3)
  4832  0551  0855               	movf	check_eep_checksum@i,w
  4833  0552  3A03               	xorlw	3
  4834  0553  1903               	skipnz
  4835  0554  2D5E               	goto	l2327
  4836                           
  4837                           ;eep.c: 222: {
  4838                           ;eep.c: 223: checksum_data+=EEP_READ(i);
  4839  0555  0855               	movf	check_eep_checksum@i,w
  4840  0556  118A  203E  118A   	fcall	_EEP_READ
  4841  0559  00F7               	movwf	??_check_eep_checksum
  4842  055A  0877               	movf	??_check_eep_checksum,w
  4843  055B  1283               	bcf	3,5	;RP0=0, select bank0
  4844  055C  1303               	bcf	3,6	;RP1=0, select bank0
  4845  055D  07D4               	addwf	check_eep_checksum@checksum_data,f
  4846  055E                     l2327:	
  4847  055E  3001               	movlw	1
  4848  055F  00F7               	movwf	??_check_eep_checksum
  4849  0560  0877               	movf	??_check_eep_checksum,w
  4850  0561  07D5               	addwf	check_eep_checksum@i,f
  4851  0562  300D               	movlw	13
  4852  0563  0255               	subwf	check_eep_checksum@i,w
  4853  0564  1C03               	skipc
  4854  0565  2D51               	goto	l2323
  4855  0566                     l2331:	
  4856                           
  4857                           ;eep.c: 224: }
  4858                           ;eep.c: 225: }
  4859                           ;eep.c: 226: if(checksum_data==(EEP_READ(3)))
  4860  0566  3003               	movlw	3
  4861  0567  118A  203E  118A   	fcall	_EEP_READ
  4862  056A  1283               	bcf	3,5	;RP0=0, select bank0
  4863  056B  1303               	bcf	3,6	;RP1=0, select bank0
  4864  056C  0654               	xorwf	check_eep_checksum@checksum_data,w
  4865  056D  1D03               	skipz
  4866  056E  2D83               	goto	l2351
  4867                           
  4868                           ;eep.c: 227: {
  4869                           ;eep.c: 228: if(EEP_READ(7)==0)
  4870  056F  3007               	movlw	7
  4871  0570  118A  203E  118A   	fcall	_EEP_READ
  4872  0573  3800               	iorlw	0
  4873  0574  1D03               	skipz
  4874  0575  2D81               	goto	l2347
  4875                           
  4876                           ;eep.c: 229: {
  4877                           ;eep.c: 230: if(EEP_READ(4)!=0)
  4878  0576  3004               	movlw	4
  4879  0577  118A  203E  118A   	fcall	_EEP_READ
  4880  057A  3A00               	xorlw	0
  4881  057B  1903               	skipnz
  4882  057C  2D7F               	goto	l2343
  4883                           
  4884                           ;eep.c: 231: {
  4885                           ;eep.c: 232: return(3);
  4886  057D  3003               	movlw	3
  4887                           
  4888                           ;eep.c: 233: }
  4889  057E  0008               	return
  4890  057F                     l2343:	
  4891                           
  4892                           ;eep.c: 234: else
  4893                           ;eep.c: 235: {
  4894                           ;eep.c: 236: return(0);
  4895  057F  3000               	movlw	0
  4896                           
  4897                           ;eep.c: 237: }
  4898                           ;eep.c: 238: }
  4899  0580  0008               	return
  4900  0581                     l2347:	
  4901                           
  4902                           ;eep.c: 239: else
  4903                           ;eep.c: 240: {
  4904                           ;eep.c: 241: return(2);
  4905  0581  3002               	movlw	2
  4906                           
  4907                           ;eep.c: 242: }
  4908                           ;eep.c: 244: }
  4909  0582  0008               	return
  4910  0583                     l2351:	
  4911                           
  4912                           ;eep.c: 245: else
  4913                           ;eep.c: 246: {
  4914                           ;eep.c: 247: return(1);
  4915  0583  3001               	movlw	1
  4916  0584  0008               	return
  4917  0585                     __end_of_check_eep_checksum:	
  4918                           
  4919                           	psect	text25
  4920  003E                     __ptext25:	
  4921 ;; *************** function _EEP_READ *****************
  4922 ;; Defined at:
  4923 ;;		line 176 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pl
      +atform/Pic_16f690_Platform_build.X/files/os/eep.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  Index           1    wreg     unsigned char 
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;  Index           1    0[BANK0 ] unsigned char 
  4928 ;;  temp_data       1    1[BANK0 ] unsigned char 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      unsigned char 
  4931 ;; Registers used:
  4932 ;;		wreg
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4938 ;;      Params:         0       0       0       0
  4939 ;;      Locals:         0       2       0       0
  4940 ;;      Temps:          1       0       0       0
  4941 ;;      Totals:         1       2       0       0
  4942 ;;Total ram usage:        3 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:    2
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_EEP_to_RAM
  4949 ;;		_check_eep_checksum
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           
  4954                           ;psect for function _EEP_READ
  4955  003E                     _EEP_READ:	
  4956                           
  4957                           ;incstack = 0
  4958                           ; Regs used in _EEP_READ: [wreg]
  4959                           ;EEP_READ@Index stored from wreg
  4960  003E  1283               	bcf	3,5	;RP0=0, select bank0
  4961  003F  1303               	bcf	3,6	;RP1=0, select bank0
  4962  0040  00D2               	movwf	EEP_READ@Index
  4963                           
  4964                           ;eep.c: 178: _UBYTE temp_data;
  4965                           ;eep.c: 179: EEADR=Index;
  4966  0041  0852               	movf	EEP_READ@Index,w
  4967  0042  1283               	bcf	3,5	;RP0=0, select bank2
  4968  0043  1703               	bsf	3,6	;RP1=1, select bank2
  4969  0044  008D               	movwf	13	;volatile
  4970                           
  4971                           ;eep.c: 180: RD=1;
  4972  0045  1683               	bsf	3,5	;RP0=1, select bank3
  4973  0046  1703               	bsf	3,6	;RP1=1, select bank3
  4974  0047  140C               	bsf	12,0	;volsfr
  4975                           
  4976                           ;eep.c: 181: temp_data=EEDAT;
  4977  0048  1283               	bcf	3,5	;RP0=0, select bank2
  4978  0049  1703               	bsf	3,6	;RP1=1, select bank2
  4979  004A  080C               	movf	12,w	;volatile
  4980  004B  00F6               	movwf	??_EEP_READ
  4981  004C  0876               	movf	??_EEP_READ,w
  4982  004D  1283               	bcf	3,5	;RP0=0, select bank0
  4983  004E  1303               	bcf	3,6	;RP1=0, select bank0
  4984  004F  00D3               	movwf	EEP_READ@temp_data
  4985                           
  4986                           ;eep.c: 182: return(temp_data);
  4987  0050  0853               	movf	EEP_READ@temp_data,w
  4988  0051  0008               	return
  4989  0052                     __end_of_EEP_READ:	
  4990                           
  4991                           	psect	text26
  4992  06D1                     __ptext26:	
  4993 ;; *************** function _Dio_Ini *****************
  4994 ;; Defined at:
  4995 ;;		line 4 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/plat
      +form/Pic_16f690_Platform_build.X/files/os/dio.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;		None               void
  5002 ;; Registers used:
  5003 ;;		None
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5009 ;;      Params:         0       0       0       0
  5010 ;;      Locals:         0       0       0       0
  5011 ;;      Temps:          0       0       0       0
  5012 ;;      Totals:         0       0       0       0
  5013 ;;Total ram usage:        0 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    2
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_Systm_Ini_Proc_1
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           
  5024                           ;psect for function _Dio_Ini
  5025  06D1                     _Dio_Ini:	
  5026                           
  5027                           ;dio.c: 14: TRISA5=0;
  5028                           
  5029                           ;incstack = 0
  5030                           ; Regs used in _Dio_Ini: []
  5031  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  5032  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  5033  06D3  1285               	bcf	5,5	;volatile
  5034                           
  5035                           ;dio.c: 18: TRISA4=1;
  5036  06D4  1605               	bsf	5,4	;volatile
  5037                           
  5038                           ;dio.c: 23: TRISA3=1;
  5039  06D5  1585               	bsf	5,3	;volatile
  5040                           
  5041                           ;dio.c: 28: TRISC5=0;
  5042  06D6  1287               	bcf	7,5	;volatile
  5043                           
  5044                           ;dio.c: 34: TRISC4=0;
  5045  06D7  1207               	bcf	7,4	;volatile
  5046                           
  5047                           ;dio.c: 40: TRISC3=0;
  5048  06D8  1187               	bcf	7,3	;volatile
  5049                           
  5050                           ;dio.c: 46: TRISC6=0;
  5051  06D9  1307               	bcf	7,6	;volatile
  5052                           
  5053                           ;dio.c: 52: TRISC7=0;
  5054  06DA  1387               	bcf	7,7	;volatile
  5055                           
  5056                           ;dio.c: 58: TRISB7=0;
  5057  06DB  1386               	bcf	6,7	;volatile
  5058                           
  5059                           ;dio.c: 64: TRISB6=0;
  5060  06DC  1306               	bcf	6,6	;volatile
  5061                           
  5062                           ;dio.c: 68: TRISB5=1;
  5063  06DD  1686               	bsf	6,5	;volatile
  5064                           
  5065                           ;dio.c: 76: TRISB4=0;
  5066  06DE  1206               	bcf	6,4	;volatile
  5067                           
  5068                           ;dio.c: 82: TRISC2=0;
  5069  06DF  1107               	bcf	7,2	;volatile
  5070                           
  5071                           ;dio.c: 86: TRISC1=1;
  5072  06E0  1487               	bsf	7,1	;volatile
  5073                           
  5074                           ;dio.c: 92: TRISC0=1;
  5075  06E1  1407               	bsf	7,0	;volatile
  5076                           
  5077                           ;dio.c: 100: TRISA2=0;
  5078  06E2  1105               	bcf	5,2	;volatile
  5079                           
  5080                           ;dio.c: 104: TRISA1=1;
  5081  06E3  1485               	bsf	5,1	;volatile
  5082                           
  5083                           ;dio.c: 110: TRISA0=1;
  5084  06E4  1405               	bsf	5,0	;volatile
  5085  06E5  0008               	return
  5086  06E6                     __end_of_Dio_Ini:	
  5087                           
  5088                           	psect	text27
  5089  07CC                     __ptext27:	
  5090 ;; *************** function _Adc_Ini *****************
  5091 ;; Defined at:
  5092 ;;		line 19 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/adc.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;		None               void
  5099 ;; Registers used:
  5100 ;;		wreg, status,2
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5106 ;;      Params:         0       0       0       0
  5107 ;;      Locals:         0       0       0       0
  5108 ;;      Temps:          0       0       0       0
  5109 ;;      Totals:         0       0       0       0
  5110 ;;Total ram usage:        0 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    2
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_Systm_Ini_Proc_1
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           
  5121                           ;psect for function _Adc_Ini
  5122  07CC                     _Adc_Ini:	
  5123                           
  5124                           ;adc.c: 25: ANSEL=0b00000000;
  5125                           
  5126                           ;incstack = 0
  5127                           ; Regs used in _Adc_Ini: [wreg+status,2]
  5128  07CC  1283               	bcf	3,5	;RP0=0, select bank2
  5129  07CD  1703               	bsf	3,6	;RP1=1, select bank2
  5130  07CE  019E               	clrf	30	;volatile
  5131                           
  5132                           ;adc.c: 26: ANSELH=0b00000000;
  5133  07CF  019F               	clrf	31	;volatile
  5134                           
  5135                           ;adc.c: 28: ANS3=1;
  5136  07D0  159E               	bsf	30,3	;volatile
  5137                           
  5138                           ;adc.c: 49: ANS5=1;
  5139  07D1  169E               	bsf	30,5	;volatile
  5140                           
  5141                           ;adc.c: 52: ANS4=1;
  5142  07D2  161E               	bsf	30,4	;volatile
  5143                           
  5144                           ;adc.c: 58: ANS1=1;
  5145  07D3  149E               	bsf	30,1	;volatile
  5146                           
  5147                           ;adc.c: 61: ANS0=1;
  5148  07D4  141E               	bsf	30,0	;volatile
  5149                           
  5150                           ;adc.c: 64: ADCON1=(ADCON1&0x8F)|(0x30);
  5151  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  5152  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  5153  07D7  081F               	movf	31,w	;volatile
  5154  07D8  398F               	andlw	143
  5155  07D9  3830               	iorlw	48
  5156  07DA  009F               	movwf	31	;volatile
  5157                           
  5158                           ;adc.c: 65: VCFG=0;
  5159  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  5160  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  5161  07DD  131F               	bcf	31,6	;volatile
  5162                           
  5163                           ;adc.c: 66: ADFM=1;
  5164  07DE  179F               	bsf	31,7	;volatile
  5165                           
  5166                           ;adc.c: 67: ADIF=0;
  5167  07DF  130C               	bcf	12,6	;volatile
  5168                           
  5169                           ;adc.c: 68: GO=0;
  5170  07E0  109F               	bcf	31,1	;volatile
  5171                           
  5172                           ;adc.c: 69: ADON=1;
  5173  07E1  141F               	bsf	31,0	;volatile
  5174                           
  5175                           ;adc.c: 70: ADIE=0;
  5176  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  5177  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  5178  07E4  130C               	bcf	12,6	;volatile
  5179                           
  5180                           ;adc.c: 71: ADCON0=(ADCON0&0xC3);
  5181  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  5182  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  5183  07E7  081F               	movf	31,w	;volatile
  5184  07E8  39C3               	andlw	195
  5185  07E9  009F               	movwf	31	;volatile
  5186  07EA  0008               	return
  5187  07EB                     __end_of_Adc_Ini:	
  5188                           
  5189                           	psect	text28
  5190  05FC                     __ptext28:	
  5191 ;; *************** function _isr *****************
  5192 ;; Defined at:
  5193 ;;		line 5 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/plat
      +form/Pic_16f690_Platform_build.X/files/os/system.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;		None               void
  5200 ;; Registers used:
  5201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5207 ;;      Params:         0       0       0       0
  5208 ;;      Locals:         0       0       0       0
  5209 ;;      Temps:          4       0       0       0
  5210 ;;      Totals:         4       0       0       0
  5211 ;;Total ram usage:        4 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:    1
  5214 ;; This function calls:
  5215 ;;		_Kernel_Co_Op_Timer_ISR
  5216 ;;		_Uart_Isr
  5217 ;; This function is called by:
  5218 ;;		Interrupt level 1
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           
  5223                           ;psect for function _isr
  5224  05FC                     _isr:	
  5225                           
  5226                           ;system.c: 8: GIE=0;
  5227  05FC  138B               	bcf	11,7	;volatile
  5228                           
  5229                           ;system.c: 11: if(T0IF)
  5230  05FD  1D0B               	btfss	11,2	;volatile
  5231  05FE  2E04               	goto	i1l3007
  5232                           
  5233                           ;system.c: 12: {
  5234                           ;system.c: 15: TMR0=135;
  5235  05FF  3087               	movlw	135
  5236  0600  0081               	movwf	1	;volatile
  5237                           
  5238                           ;system.c: 16: T0IF=0;
  5239  0601  110B               	bcf	11,2	;volatile
  5240                           
  5241                           ;system.c: 18: T0IE =0x00;
  5242  0602  128B               	bcf	11,5	;volatile
  5243                           
  5244                           ;system.c: 19: T0IE =0x01;
  5245  0603  168B               	bsf	11,5	;volatile
  5246  0604                     i1l3007:	
  5247                           
  5248                           ;system.c: 21: }
  5249                           ;system.c: 24: if(TMR1IF)
  5250  0604  1C0C               	btfss	12,0	;volatile
  5251  0605  2E10               	goto	i1l3015
  5252                           
  5253                           ;system.c: 25: {
  5254                           ;system.c: 26: Kernel_Co_Op_Timer_ISR();
  5255  0606  118A  2316  118A   	fcall	_Kernel_Co_Op_Timer_ISR
  5256                           
  5257                           ;system.c: 27: TMR1IF=0;
  5258  0609  1283               	bcf	3,5	;RP0=0, select bank0
  5259  060A  1303               	bcf	3,6	;RP1=0, select bank0
  5260  060B  100C               	bcf	12,0	;volatile
  5261                           
  5262                           ;system.c: 28: TMR1=0xB1DF;
  5263  060C  30B1               	movlw	177
  5264  060D  008F               	movwf	15	;volatile
  5265  060E  30DF               	movlw	223
  5266  060F  008E               	movwf	14	;volatile
  5267  0610                     i1l3015:	
  5268                           
  5269                           ;system.c: 30: }
  5270                           ;system.c: 33: if(TMR2IF)
  5271  0610  1C8C               	btfss	12,1	;volatile
  5272  0611  2E15               	goto	i1l3021
  5273                           
  5274                           ;system.c: 34: {
  5275                           ;system.c: 37: TMR2IF=0;
  5276  0612  108C               	bcf	12,1	;volatile
  5277                           
  5278                           ;system.c: 38: TMR2=0x63BF;
  5279  0613  30BF               	movlw	191
  5280  0614  0091               	movwf	17	;volatile
  5281  0615                     i1l3021:	
  5282                           
  5283                           ;system.c: 39: }
  5284                           ;system.c: 42: if(ADIF)
  5285  0615  1B0C               	btfsc	12,6	;volatile
  5286                           
  5287                           ;system.c: 43: {
  5288                           ;system.c: 44: ADIF=0;
  5289  0616  130C               	bcf	12,6	;volatile
  5290                           
  5291                           ;system.c: 46: }
  5292                           ;system.c: 49: if(INTF)
  5293  0617  188B               	btfsc	11,1	;volatile
  5294                           
  5295                           ;system.c: 50: {
  5296                           ;system.c: 51: INTF=0;
  5297  0618  108B               	bcf	11,1	;volatile
  5298                           
  5299                           ;system.c: 52: }
  5300                           ;system.c: 55: if(RCIF)
  5301  0619  1E8C               	btfss	12,5	;volatile
  5302  061A  2E1E               	goto	i1l3029
  5303                           
  5304                           ;system.c: 56: {
  5305                           ;system.c: 59: Uart_Isr();
  5306  061B  118A  2585  118A   	fcall	_Uart_Isr
  5307  061E                     i1l3029:	
  5308                           
  5309                           ;system.c: 61: }
  5310                           ;system.c: 66: if(EEIF)
  5311  061E  1283               	bcf	3,5	;RP0=0, select bank0
  5312  061F  1303               	bcf	3,6	;RP1=0, select bank0
  5313  0620  1A0D               	btfsc	13,4	;volatile
  5314                           
  5315                           ;system.c: 67: {
  5316                           ;system.c: 68: EEIF=0;
  5317  0621  120D               	bcf	13,4	;volatile
  5318                           
  5319                           ;system.c: 69: }
  5320                           ;system.c: 71: GIE=1;
  5321  0622  178B               	bsf	11,7	;volatile
  5322  0623  0875               	movf	??_isr+3,w
  5323  0624  00FF               	movwf	127
  5324  0625  0874               	movf	??_isr+2,w
  5325  0626  008A               	movwf	10
  5326  0627  0873               	movf	??_isr+1,w
  5327  0628  0084               	movwf	4
  5328  0629  0E72               	swapf	??_isr^(0+-128),w
  5329  062A  0083               	movwf	3
  5330  062B  0EFE               	swapf	126,f
  5331  062C  0E7E               	swapf	126,w
  5332  062D  0009               	retfie
  5333  062E                     __end_of_isr:	
  5334                           
  5335                           	psect	intentry
  5336  0004                     __pintentry:	
  5337                           ;incstack = 0
  5338                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5339                           
  5340  0004                     interrupt_function:	
  5341  007E                     saved_w	set	btemp
  5342  0004  00FE               	movwf	btemp
  5343  0005  0E03               	swapf	3,w
  5344  0006  00F2               	movwf	??_isr
  5345  0007  0804               	movf	4,w
  5346  0008  00F3               	movwf	??_isr+1
  5347  0009  080A               	movf	10,w
  5348  000A  00F4               	movwf	??_isr+2
  5349  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5350  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5351  000D  087F               	movf	btemp+1,w
  5352  000E  00F5               	movwf	??_isr+3
  5353  000F  118A  2DFC         	ljmp	_isr
  5354                           
  5355                           	psect	text29
  5356  0585                     __ptext29:	
  5357 ;; *************** function _Uart_Isr *****************
  5358 ;; Defined at:
  5359 ;;		line 44 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/uart.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;		None               void
  5366 ;; Registers used:
  5367 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5373 ;;      Params:         0       0       0       0
  5374 ;;      Locals:         0       0       0       0
  5375 ;;      Temps:          1       0       0       0
  5376 ;;      Totals:         1       0       0       0
  5377 ;;Total ram usage:        1 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_isr
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           
  5387                           ;psect for function _Uart_Isr
  5388  0585                     _Uart_Isr:	
  5389                           
  5390                           ;uart.c: 46: if(RCIF)
  5391                           
  5392                           ;incstack = 0
  5393                           ; Regs used in _Uart_Isr: [wreg-fsr0h+status,2+status,0]
  5394  0585  1283               	bcf	3,5	;RP0=0, select bank0
  5395  0586  1303               	bcf	3,6	;RP1=0, select bank0
  5396  0587  1E8C               	btfss	12,5	;volatile
  5397  0588  2DA8               	goto	i1l726
  5398                           
  5399                           ;uart.c: 47: {
  5400                           ;uart.c: 48: if(Uart_Net_Mgr.Uart_Rx.com_status!=3)
  5401  0589  1683               	bsf	3,5	;RP0=1, select bank1
  5402  058A  1303               	bcf	3,6	;RP1=0, select bank1
  5403  058B  083E               	movf	_Uart_Net_Mgr^(0+128),w
  5404  058C  3A03               	xorlw	3
  5405  058D  1903               	skipnz
  5406  058E  2DA4               	goto	i1l2853
  5407                           
  5408                           ;uart.c: 49: {
  5409                           ;uart.c: 50: Uart_Net_Mgr.Uart_Rx.rx_period=0;
  5410  058F  01BF               	clrf	(_Uart_Net_Mgr^(0+128)+1)
  5411                           
  5412                           ;uart.c: 51: Uart_Net_Mgr.Uart_Rx.com_status=2;
  5413  0590  3002               	movlw	2
  5414  0591  00F0               	movwf	??_Uart_Isr
  5415  0592  0870               	movf	??_Uart_Isr,w
  5416  0593  00BE               	movwf	_Uart_Net_Mgr^(0+128)
  5417                           
  5418                           ;uart.c: 52: *Uart_Net_Mgr.Uart_Rx.rx_data_ptr=RCREG;
  5419  0594  1283               	bcf	3,5	;RP0=0, select bank0
  5420  0595  1303               	bcf	3,6	;RP1=0, select bank0
  5421  0596  081A               	movf	26,w	;volatile
  5422  0597  00F0               	movwf	??_Uart_Isr
  5423  0598  1683               	bsf	3,5	;RP0=1, select bank1
  5424  0599  1303               	bcf	3,6	;RP1=0, select bank1
  5425  059A  0840               	movf	(_Uart_Net_Mgr+2)^(0+128),w
  5426  059B  0084               	movwf	4
  5427  059C  0870               	movf	??_Uart_Isr,w
  5428  059D  1383               	bcf	3,7	;select IRP bank0
  5429  059E  0080               	movwf	0
  5430                           
  5431                           ;uart.c: 53: Uart_Net_Mgr.Uart_Rx.rx_data_ptr=Uart_Net_Mgr.Uart_Rx.rx_data_ptr+1;
  5432  059F  0840               	movf	(_Uart_Net_Mgr+2)^(0+128),w
  5433  05A0  3E01               	addlw	1
  5434  05A1  00F0               	movwf	??_Uart_Isr
  5435  05A2  0870               	movf	??_Uart_Isr,w
  5436  05A3  00C0               	movwf	(_Uart_Net_Mgr+2)^(0+128)
  5437  05A4                     i1l2853:	
  5438                           
  5439                           ;uart.c: 54: }
  5440                           ;uart.c: 55: if(OERR)
  5441  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  5442  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  5443  05A6  1898               	btfsc	24,1	;volatile
  5444                           
  5445                           ;uart.c: 56: {
  5446                           ;uart.c: 57: CREN=0;
  5447  05A7  1218               	bcf	24,4	;volatile
  5448  05A8                     i1l726:	
  5449                           
  5450                           ;uart.c: 58: }
  5451                           ;uart.c: 59: }
  5452                           ;uart.c: 61: if(TXIF)
  5453  05A8  1E0C               	btfss	12,4	;volatile
  5454  05A9  0008               	return
  5455                           
  5456                           ;uart.c: 62: {
  5457                           ;uart.c: 63: if(Uart_Net_Mgr.Uart_Tx.com_satus==1)
  5458  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  5459  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  5460  05AC  084A               	movf	(_Uart_Net_Mgr^(0+128)+12),w
  5461  05AD  3A01               	xorlw	1
  5462  05AE  1D03               	skipz
  5463  05AF  0008               	return
  5464                           
  5465                           ;uart.c: 64: {
  5466                           ;uart.c: 65: if(Uart_Net_Mgr.Uart_Tx.data_index<Uart_Net_Mgr.Uart_Tx.data_length)
  5467  05B0  0853               	movf	(_Uart_Net_Mgr^(0+128)+21),w
  5468  05B1  0254               	subwf	(_Uart_Net_Mgr^(0+128)+22),w
  5469  05B2  1803               	skipnc
  5470  05B3  2DC5               	goto	i1l731
  5471                           
  5472                           ;uart.c: 66: {
  5473                           ;uart.c: 67: TXREG=Uart_Net_Mgr.Uart_Tx.TX_DATA[Uart_Net_Mgr.Uart_Tx.data_index];
  5474  05B4  0854               	movf	(_Uart_Net_Mgr^(0+128)+22),w
  5475  05B5  3E01               	addlw	1
  5476  05B6  3ECA               	addlw	(_Uart_Net_Mgr+12)& (0+255)
  5477  05B7  0084               	movwf	4
  5478  05B8  1383               	bcf	3,7	;select IRP bank1
  5479  05B9  0800               	movf	0,w
  5480  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  5481  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  5482  05BC  0099               	movwf	25	;volatile
  5483                           
  5484                           ;uart.c: 68: Uart_Net_Mgr.Uart_Tx.data_index=Uart_Net_Mgr.Uart_Tx.data_index+1;
  5485  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  5486  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  5487  05BF  0854               	movf	(_Uart_Net_Mgr^(0+128)+22),w
  5488  05C0  3E01               	addlw	1
  5489  05C1  00F0               	movwf	??_Uart_Isr
  5490  05C2  0870               	movf	??_Uart_Isr,w
  5491  05C3  00D4               	movwf	(_Uart_Net_Mgr^(0+128)+22)
  5492                           
  5493                           ;uart.c: 69: }
  5494  05C4  0008               	return
  5495  05C5                     i1l731:	
  5496                           
  5497                           ;uart.c: 70: else
  5498                           ;uart.c: 71: {
  5499                           ;uart.c: 72: Uart_Net_Mgr.Uart_Tx.data_index=1;
  5500  05C5  01D4               	clrf	(_Uart_Net_Mgr^(0+128)+22)
  5501  05C6  0AD4               	incf	(_Uart_Net_Mgr^(0+128)+22),f
  5502                           
  5503                           ;uart.c: 73: Uart_Net_Mgr.Uart_Tx.com_satus=0;
  5504  05C7  01CA               	clrf	(_Uart_Net_Mgr^(0+128)+12)
  5505  05C8  0008               	return
  5506  05C9                     __end_of_Uart_Isr:	
  5507                           
  5508                           	psect	text30
  5509  0316                     __ptext30:	
  5510 ;; *************** function _Kernel_Co_Op_Timer_ISR *****************
  5511 ;; Defined at:
  5512 ;;		line 92 in file "D:/START_UP/COMPANY_STARTUP/3_platform_based_developments/pic16f690_projects/platform_pic16f690/pla
      +tform/Pic_16f690_Platform_build.X/files/os/os.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;		None
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  i               1    1[COMMON] unsigned char 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;		None               void
  5519 ;; Registers used:
  5520 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5526 ;;      Params:         0       0       0       0
  5527 ;;      Locals:         1       0       0       0
  5528 ;;      Temps:          1       0       0       0
  5529 ;;      Totals:         2       0       0       0
  5530 ;;Total ram usage:        2 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_isr
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function _Kernel_Co_Op_Timer_ISR
  5541  0316                     _Kernel_Co_Op_Timer_ISR:	
  5542                           
  5543                           ;os.c: 94: static _UBYTE ms10_ctr,ms50_ctr,ms200_ctr;
  5544                           ;os.c: 97: Nano_Os.Os_ms_Task_Sts[0]=1;
  5545                           
  5546                           ;incstack = 0
  5547                           ; Regs used in _Kernel_Co_Op_Timer_ISR: [wreg-fsr0h+status,2+status,0]
  5548  0316  3001               	movlw	1
  5549  0317  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5550  0318  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5551  0319  1683               	bsf	3,5	;RP0=1, select bank1
  5552  031A  1303               	bcf	3,6	;RP1=0, select bank1
  5553  031B  00B2               	movwf	(_Nano_Os^(0+128)+18)	;volatile
  5554                           
  5555                           ;os.c: 98: if(ms10_ctr==5)
  5556  031C  087A               	movf	Kernel_Co_Op_Timer_ISR@ms10_ctr,w
  5557  031D  3A05               	xorlw	5
  5558  031E  1D03               	skipz
  5559  031F  2B54               	goto	i1l2805
  5560                           
  5561                           ;os.c: 99: {
  5562                           ;os.c: 100: ms10_ctr=0;
  5563  0320  01FA               	clrf	Kernel_Co_Op_Timer_ISR@ms10_ctr
  5564                           
  5565                           ;os.c: 101: Nano_Os.Os_ms_Task_Sts[1]=1;
  5566  0321  3001               	movlw	1
  5567  0322  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5568  0323  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5569  0324  00B3               	movwf	(_Nano_Os^(0+128)+19)	;volatile
  5570                           
  5571                           ;os.c: 102: ms50_ctr+=1;
  5572  0325  3001               	movlw	1
  5573  0326  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5574  0327  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5575  0328  1283               	bcf	3,5	;RP0=0, select bank0
  5576  0329  1303               	bcf	3,6	;RP1=0, select bank0
  5577  032A  07BE               	addwf	Kernel_Co_Op_Timer_ISR@ms50_ctr,f
  5578                           
  5579                           ;os.c: 103: switch(ms50_ctr)
  5580  032B  2B4B               	goto	i1l2803
  5581  032C                     i1l2787:	
  5582                           ;os.c: 104: {
  5583                           ;os.c: 105: case 4:Nano_Os.Os_ms_Task_Sts[3]=1;
  5584                           
  5585  032C  3001               	movlw	1
  5586  032D  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5587  032E  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5588  032F  1683               	bsf	3,5	;RP0=1, select bank1
  5589  0330  1303               	bcf	3,6	;RP1=0, select bank1
  5590  0331  00B5               	movwf	(_Nano_Os^(0+128)+21)	;volatile
  5591                           
  5592                           ;os.c: 106: ms50_ctr=0;
  5593  0332  1283               	bcf	3,5	;RP0=0, select bank0
  5594  0333  1303               	bcf	3,6	;RP1=0, select bank0
  5595  0334  01BE               	clrf	Kernel_Co_Op_Timer_ISR@ms50_ctr
  5596                           
  5597                           ;os.c: 107: ms200_ctr+=1;
  5598  0335  3001               	movlw	1
  5599  0336  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5600  0337  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5601  0338  07BD               	addwf	Kernel_Co_Op_Timer_ISR@ms200_ctr,f
  5602                           
  5603                           ;os.c: 108: if(ms200_ctr==5)
  5604  0339  083D               	movf	Kernel_Co_Op_Timer_ISR@ms200_ctr,w
  5605  033A  3A05               	xorlw	5
  5606  033B  1D03               	skipz
  5607  033C  2B44               	goto	i1l2799
  5608                           
  5609                           ;os.c: 109: {
  5610                           ;os.c: 110: ms200_ctr=0;
  5611  033D  01BD               	clrf	Kernel_Co_Op_Timer_ISR@ms200_ctr
  5612                           
  5613                           ;os.c: 111: Nano_Os.Os_ms_Task_Sts[4]=1;
  5614  033E  3001               	movlw	1
  5615  033F  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5616  0340  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5617  0341  1683               	bsf	3,5	;RP0=1, select bank1
  5618  0342  1303               	bcf	3,6	;RP1=0, select bank1
  5619  0343  00B6               	movwf	(_Nano_Os^(0+128)+22)	;volatile
  5620  0344                     i1l2799:	
  5621                           ;os.c: 112: }
  5622                           ;os.c: 113: case 2:Nano_Os.Os_ms_Task_Sts[2]=1;
  5623                           
  5624  0344  3001               	movlw	1
  5625  0345  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5626  0346  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5627  0347  1683               	bsf	3,5	;RP0=1, select bank1
  5628  0348  1303               	bcf	3,6	;RP1=0, select bank1
  5629  0349  00B4               	movwf	(_Nano_Os^(0+128)+20)	;volatile
  5630                           
  5631                           ;os.c: 116: }
  5632                           
  5633                           ;os.c: 115: default: break;
  5634                           
  5635                           ;os.c: 114: break;
  5636  034A  2B54               	goto	i1l2805
  5637  034B                     i1l2803:	
  5638  034B  1283               	bcf	3,5	;RP0=0, select bank0
  5639  034C  083E               	movf	Kernel_Co_Op_Timer_ISR@ms50_ctr,w
  5640                           
  5641                           ; Switch size 1, requested type "space"
  5642                           ; Number of cases is 2, Range of values is 2 to 4
  5643                           ; switch strategies available:
  5644                           ; Name         Instructions Cycles
  5645                           ; simple_byte            7     4 (average)
  5646                           ; direct_byte           16    10 (fixed)
  5647                           ; jumptable            263     9 (fixed)
  5648                           ;	Chosen strategy is simple_byte
  5649  034D  3A02               	xorlw	2	; case 2
  5650  034E  1903               	skipnz
  5651  034F  2B44               	goto	i1l2799
  5652  0350  3A06               	xorlw	6	; case 4
  5653  0351  1903               	skipnz
  5654  0352  2B2C               	goto	i1l2787
  5655  0353  2B54               	goto	i1l2805
  5656  0354                     i1l2805:	
  5657                           
  5658                           ;os.c: 117: }
  5659                           ;os.c: 120: for(_UBYTE i = 0;i<2;i++)
  5660  0354  01F1               	clrf	Kernel_Co_Op_Timer_ISR@i
  5661  0355  3002               	movlw	2
  5662  0356  0271               	subwf	Kernel_Co_Op_Timer_ISR@i,w
  5663  0357  1803               	btfsc	3,0
  5664  0358  2B91               	goto	i1l2821
  5665  0359                     i1l2811:	
  5666                           
  5667                           ;os.c: 121: {
  5668                           ;os.c: 123: if(Kernel_stTimer[i].Lock == 0x01)
  5669  0359  0871               	movf	Kernel_Co_Op_Timer_ISR@i,w
  5670  035A  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5671  035B  3001               	movlw	1
  5672  035C                     u213_25:	
  5673  035C  1003               	clrc
  5674  035D  0DF0               	rlf	??_Kernel_Co_Op_Timer_ISR,f
  5675  035E  3EFF               	addlw	-1
  5676  035F  1D03               	skipz
  5677  0360  2B5C               	goto	u213_25
  5678  0361  1003               	clrc
  5679  0362  0D70               	rlf	??_Kernel_Co_Op_Timer_ISR,w
  5680  0363  3E20               	addlw	_Kernel_stTimer& (0+255)
  5681  0364  0084               	movwf	4
  5682  0365  1383               	bcf	3,7	;select IRP bank0
  5683  0366  0800               	movf	0,w
  5684  0367  3A01               	xorlw	1
  5685  0368  1D03               	skipz
  5686  0369  2B89               	goto	i1l2817
  5687                           
  5688                           ;os.c: 124: {
  5689                           ;os.c: 126: if(Kernel_stTimer[i].TimerValue != 0)
  5690  036A  0871               	movf	Kernel_Co_Op_Timer_ISR@i,w
  5691  036B  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5692  036C  3001               	movlw	1
  5693  036D                     u215_25:	
  5694  036D  1003               	clrc
  5695  036E  0DF0               	rlf	??_Kernel_Co_Op_Timer_ISR,f
  5696  036F  3EFF               	addlw	-1
  5697  0370  1D03               	skipz
  5698  0371  2B6D               	goto	u215_25
  5699  0372  1003               	clrc
  5700  0373  0D70               	rlf	??_Kernel_Co_Op_Timer_ISR,w
  5701  0374  3E01               	addlw	1
  5702  0375  3E20               	addlw	_Kernel_stTimer& (0+255)
  5703  0376  0084               	movwf	4
  5704  0377  0880               	movf	0,f
  5705  0378  1903               	skipnz
  5706  0379  2B89               	goto	i1l2817
  5707                           
  5708                           ;os.c: 127: {
  5709                           ;os.c: 128: Kernel_stTimer[i].TimerValue--;
  5710  037A  0871               	movf	Kernel_Co_Op_Timer_ISR@i,w
  5711  037B  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5712  037C  3001               	movlw	1
  5713  037D                     u217_25:	
  5714  037D  1003               	clrc
  5715  037E  0DF0               	rlf	??_Kernel_Co_Op_Timer_ISR,f
  5716  037F  3EFF               	addlw	-1
  5717  0380  1D03               	skipz
  5718  0381  2B7D               	goto	u217_25
  5719  0382  1003               	clrc
  5720  0383  0D70               	rlf	??_Kernel_Co_Op_Timer_ISR,w
  5721  0384  3E01               	addlw	1
  5722  0385  3E20               	addlw	_Kernel_stTimer& (0+255)
  5723  0386  0084               	movwf	4
  5724  0387  3001               	movlw	1
  5725  0388  0280               	subwf	0,f
  5726  0389                     i1l2817:	
  5727  0389  3001               	movlw	1
  5728  038A  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5729  038B  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5730  038C  07F1               	addwf	Kernel_Co_Op_Timer_ISR@i,f
  5731  038D  3002               	movlw	2
  5732  038E  0271               	subwf	Kernel_Co_Op_Timer_ISR@i,w
  5733  038F  1C03               	skipc
  5734  0390  2B59               	goto	i1l2811
  5735  0391                     i1l2821:	
  5736                           
  5737                           ;os.c: 129: }
  5738                           ;os.c: 130: }
  5739                           ;os.c: 131: }
  5740                           ;os.c: 133: ms10_ctr+=1;
  5741  0391  3001               	movlw	1
  5742  0392  00F0               	movwf	??_Kernel_Co_Op_Timer_ISR
  5743  0393  0870               	movf	??_Kernel_Co_Op_Timer_ISR,w
  5744  0394  07FA               	addwf	Kernel_Co_Op_Timer_ISR@ms10_ctr,f
  5745  0395  0008               	return
  5746  0396                     __end_of_Kernel_Co_Op_Timer_ISR:	
  5747  0016                     
  5748                           	psect	functab
  5749  0100                     __pfunctab:	
  5750  0100                     __fptable:	
  5751  0100                     fptable:	
  5752  0100  00FF               	movwf	(btemp+1)& (0+127)
  5753  0101  3001               	movlw	high fptable
  5754  0102  008A               	movwf	10
  5755  0103  087F               	movf	(btemp+1)& (0+127),w
  5756  0104  0782               	addwf	2,f
  5757  0105                     fpbase:	
  5758  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  5759  0106                     fp__Systm_Ini_Proc_2:	
  5760  0106  118A  2888         	ljmp	_Systm_Ini_Proc_2
  5761  0108                     fp__Systm_Ini_Proc_1:	
  5762  0108  118A  2F89         	ljmp	_Systm_Ini_Proc_1
  5763  010A                     fp__usege_timer:	
  5764  010A  118A  2F5E         	ljmp	_usege_timer
  5765  010C                     fp__adc_updator:	
  5766  010C  118A  2DC9         	ljmp	_adc_updator
  5767  010E                     fp__Led_Manager:	
  5768  010E  118A  291C         	ljmp	_Led_Manager
  5769  0110                     fp__Switch_Manager:	
  5770  0110  118A  2B96         	ljmp	_Switch_Manager
  5771  0112                     fp__Eep_Manager:	
  5772  0112  118A  2CF5         	ljmp	_Eep_Manager
  5773  0114                     fp__Uart_Manager:	
  5774  0114  118A  2FEB         	ljmp	_Uart_Manager
  5775  0116                     fp__Api_Uart_Read_Rx:	
  5776  0116  118A  2862         	ljmp	_Api_Uart_Read_Rx
  5777  0118                     fp__System_Status_Indicator:	
  5778  0118  118A  2EA3         	ljmp	_System_Status_Indicator
  5779  011A                     fp__Sw_Timer_Updator:	
  5780  011A  118A  2C4B         	ljmp	_Sw_Timer_Updator
  5781  011C                     __end_of__fptable:	
  5782  007E                     btemp	set	126	;btemp
  5783  007E                     wtemp	set	126
  5784  007E                     wtemp0	set	126
  5785  0080                     wtemp1	set	128
  5786  0082                     wtemp2	set	130
  5787  0084                     wtemp3	set	132
  5788  0086                     wtemp4	set	134
  5789  0088                     wtemp5	set	136
  5790  007F                     wtemp6	set	127
  5791  007E                     ttemp	set	126
  5792  007E                     ttemp0	set	126
  5793  0081                     ttemp1	set	129
  5794  0084                     ttemp2	set	132
  5795  0087                     ttemp3	set	135
  5796  007F                     ttemp4	set	127
  5797  007E                     ltemp	set	126
  5798  007E                     ltemp0	set	126
  5799  0082                     ltemp1	set	130
  5800  0086                     ltemp2	set	134
  5801  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    31
    Data        34
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     21      75
    BANK1            80      0      53
    BANK2            80      0       0

Pointer List with Targets:

    S514$rx_data_ptr	PTR unsigned char  size(1) Largest target is 13
		 -> Uart_Net_Mgr.Uart_Rx(BANK1[13]), 

    Uart_Net_Mgr.Uart_Rx.rx_data_ptr	PTR unsigned char  size(1) Largest target is 13
		 -> Uart_Net_Mgr.Uart_Rx.RX_DATA(BANK1[8]), Uart_Net_Mgr.Uart_Rx(BANK1[13]), 

    Kernel_vRunContainer@afpContainerArray	PTR const PTR FTN()void  size(2) Largest target is 3
		 -> Kernel_vHWReset(CODE[3]), 

    S251$cb	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    Kernel_stTimer.cb	PTR FTN()void  size(1) Largest target is 0
		 -> Absolute function(), 

    Os_Task_Ptr_Temp	PTR FTN()void  size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    S256$Os_ms_Task_Ptr	PTR const PTR FTN()void [6] size(2) Largest target is 3
		 -> Os_Back_Ground_Task(CODE[3]), Os_1000ms_Task(CODE[2]), Os_200ms_Task(CODE[3]), Os_100ms_Task(CODE[2]), 
		 -> Os_50ms_Task(CODE[2]), Os_10ms_Task(CODE[3]), 

    Nano_Os.Os_ms_Task_Ptr	PTR const PTR FTN()void [6] size(2) Largest target is 3
		 -> Os_Back_Ground_Task(CODE[3]), Os_1000ms_Task(CODE[2]), Os_200ms_Task(CODE[3]), Os_100ms_Task(CODE[2]), 
		 -> Os_50ms_Task(CODE[2]), Os_10ms_Task(CODE[3]), 

    Os_Back_Ground_Task	const PTR FTN()void [3] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_1000ms_Task	const PTR FTN()void [2] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_200ms_Task	const PTR FTN()void [3] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_100ms_Task	const PTR FTN()void [2] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_50ms_Task	const PTR FTN()void [2] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Os_10ms_Task	const PTR FTN()void [3] size(1) Largest target is 0
		 -> Sw_Timer_Updator(), System_Status_Indicator(), Api_Uart_Read_Rx(), Uart_Manager(), 
		 -> Absolute function(), usege_timer(), Eep_Manager(), Switch_Manager(), 
		 -> Led_Manager(), adc_updator(), 

    Kernel_vHWReset	const PTR FTN()void [3] size(1) Largest target is 0
		 -> Absolute function(), Systm_Ini_Proc_2(), Systm_Ini_Proc_1(), 


Critical Paths under _main in COMMON

    _main->_Eep_Manager
    _System_Status_Indicator->_Api_Led_Control
    _Switch_Manager->_Dio_Read
    _Led_Manager->_Dio_Write
    _Systm_Ini_Proc_2->_delay_ms
    _Systm_Ini_Proc_1->_usage_time_ini
    _Pwm_Ini->_set_bit_position
    _EEP_to_RAM->_check_eep_checksum
    _check_eep_checksum->_EEP_READ

Critical Paths under _isr in COMMON

    _isr->_Kernel_Co_Op_Timer_ISR

Critical Paths under _main in BANK0

    _main->_Led_Manager
    _System_Status_Indicator->_Api_Led_Control
    _Switch_Manager->_Dio_Read
    _Led_Manager->_Dio_Write
    _Kernel_vRunContainer->_Systm_Ini_Proc_1
    _Systm_Ini_Proc_2->_delay_ms
    _Systm_Ini_Proc_1->_EEP_to_RAM
    _Pwm_Ini->_set_bit_position
    _EEP_to_RAM->_check_eep_checksum
    _check_eep_checksum->_EEP_READ

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3177
                                             17 BANK0      4     4      0
                   Absolute function *
                   _Api_Uart_Read_Rx *
                        _Eep_Manager *
               _Kernel_vRunContainer
                        _Led_Manager *
                   _Sw_Timer_Updator *
                     _Switch_Manager *
            _System_Status_Indicator *
                       _Uart_Manager *
                        _adc_updator *
                        _usege_timer *
 ---------------------------------------------------------------------------------
 (1) _usege_timer                                          1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_updator                                          3     3      0      23
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Uart_Manager                                         1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _System_Status_Indicator                              1     1      0     216
                                              1 BANK0      1     1      0
                    _Api_Led_Control
 ---------------------------------------------------------------------------------
 (2) _Api_Led_Control                                      3     2      1     216
                                              6 COMMON     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Switch_Manager                                       5     5      0     578
                                              4 BANK0      5     5      0
                           _Dio_Read
 ---------------------------------------------------------------------------------
 (1) _Sw_Timer_Updator                                     4     4      0     156
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Led_Manager                                          5     5      0    1386
                                             12 BANK0      5     5      0
                           _Dio_Read
                          _Dio_Write
 ---------------------------------------------------------------------------------
 (2) _Dio_Write                                           14    12      2     742
                                              6 COMMON     2     0      2
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (2) _Dio_Read                                             5     4      1     267
                                              6 COMMON     1     0      1
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Kernel_vRunContainer                                 2     0      2     795
                                             12 BANK0      2     0      2
                   Absolute function *
                   _Systm_Ini_Proc_1 *
                   _Systm_Ini_Proc_2 *
 ---------------------------------------------------------------------------------
 (2) _Systm_Ini_Proc_2                                     0     0      0     144
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             4     2      2     144
                                              6 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Systm_Ini_Proc_1                                     1     1      0     553
                                             11 BANK0      1     1      0
                            _Adc_Ini
                            _Dio_Ini
                         _EEP_to_RAM
                            _Eep_Ini
                             _Os_Ini
                            _Pwm_Ini
                           _Uart_Ini
                     _usage_time_ini
 ---------------------------------------------------------------------------------
 (3) _usage_time_ini                                       6     6      0      23
                                              6 COMMON     2     2      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _Uart_Ini                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Pwm_Ini                                              0     0      0      97
                   _set_bit_position
 ---------------------------------------------------------------------------------
 (4) _set_bit_position                                     3     2      1      97
                                              6 COMMON     2     1      1
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Os_Ini                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Eep_Ini                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EEP_to_RAM                                           7     7      0     433
                                              4 BANK0      7     7      0
                           _EEP_READ
                 _check_eep_checksum
 ---------------------------------------------------------------------------------
 (4) _check_eep_checksum                                   3     3      0     159
                                              7 COMMON     1     1      0
                                              2 BANK0      2     2      0
                           _EEP_READ
 ---------------------------------------------------------------------------------
 (5) _EEP_READ                                             3     3      0      45
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Dio_Ini                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Adc_Ini                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Eep_Manager                                          2     2      0      23
                                              6 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Api_Uart_Read_Rx                                     1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0     112
                                              2 COMMON     4     4      0
             _Kernel_Co_Op_Timer_ISR
                           _Uart_Isr
 ---------------------------------------------------------------------------------
 (7) _Uart_Isr                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _Kernel_Co_Op_Timer_ISR                               2     2      0     112
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   Absolute function(Fake) *
   _Api_Uart_Read_Rx *
   _Eep_Manager *
   _Kernel_vRunContainer *
     Absolute function(Fake) *
     _Systm_Ini_Proc_1 *
       _Adc_Ini
       _Dio_Ini
       _EEP_to_RAM
         _EEP_READ
         _check_eep_checksum
           _EEP_READ
       _Eep_Ini
       _Os_Ini
       _Pwm_Ini
         _set_bit_position
       _Uart_Ini
       _usage_time_ini
     _Systm_Ini_Proc_2 *
       _delay_ms
   _Led_Manager *
     _Dio_Read
     _Dio_Write
   _Sw_Timer_Updator *
   _Switch_Manager *
     _Dio_Read
   _System_Status_Indicator *
     _Api_Led_Control
   _Uart_Manager *
   _adc_updator *
   _usege_timer *

 _isr (ROOT)
   _Kernel_Co_Op_Timer_ISR
   _Uart_Isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      35       5       66.3%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      4B       3       93.8%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8E      10        0.0%
ABS                  0      0      8E       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Mon May 30 01:47:32 2016

                            __CFG_CP$ON 0000                                       _i 0041  
                                     pc 0002                  Led_Manager@u8_temp_led 0061  
                                    l60 05D8                                      l61 05FA  
                                    l63 05DD                                      _GO 00F9  
                                    _RD 0C60                             __CFG_CPD$ON 0000  
                                    _WR 0C61                                      fsr 0004  
               __size_of_Switch_Manager 005B                     fp__Sw_Timer_Updator 011A  
                     fp__Switch_Manager 0110                                     l144 03E5  
                                   l321 075B                                     l192 0287  
                                   l268 053D                                     l681 0792  
                                   _GIE 005F                                     _PR2 0092  
                                   _HTS 047A                                     _Dio 0043  
                                   _isr 05FC                                     fsr0 0004  
                                   indf 0000                             _usege_timer 075E  
                ??_Kernel_vRunContainer 0078                    __size_of_adc_updator 0033  
                           EEP_to_RAM@i 005B                             EEP_to_RAM@j 0059  
              __end_of_Sw_Timer_Updator 04A4                                    l2331 0566  
                                  l2323 0551                                    l2317 054A  
                                  l2413 04D6                                    l2405 04BD  
                                  l2343 057F                                    l2351 0583  
                                  l2327 055E                                    l2511 01F9  
                                  l2505 01E0                                    l2347 0581  
                                  l2523 022D                                    l2515 0211  
                                  l2611 05EA                                    l2603 05DB  
                                  l2517 0214                                    l2551 0408  
                                  l2535 0261                                    l2527 0245  
                                  l2543 027C                                    l2607 05E4  
                                  l2615 05EC                                    l2631 0173  
                                  l2481 0692                                    l2553 040D  
                                  l2529 0248                                    l2563 0438  
                                  l2547 03F5                                    l2539 0279  
                                  l2627 0149                                    l2485 069A  
                                  l2565 043D                                    l2557 0420  
                                  l2637 01D0                                    l2487 0687  
                                  l2559 0425                                    l2639 01D5  
                                  l2911 02E7                                    l2903 0299  
                                  l2569 043F                                    l2657 03D9  
                                  l2673 0510                                    l2921 0304  
                                  l2659 03E1                                    l2683 052B  
                                  l2675 0512                                    l2667 04F6  
                                  l2691 0530                                    l2915 02F0  
                                  l2837 049F                                    l2925 030C  
                                  l2871 06B0                                    l2777 07AD  
                                  l2769 0783                                    l2877 07F7  
                                  l2895 0291                                    _ADIE 0466  
                                  _ADIF 0066                                    _ADFM 00FF  
                                  ?_isr 0070                                    _ADON 00F8  
                                  _CHS0 00FA                                    _CHS1 00FB  
                                  _EEIE 046C                                    _EEIF 006C  
                                  _ANS0 08F0                                    _ANS1 08F1  
                                  _ANS3 08F3                                    _ANS4 08F4  
                                  _ANS5 08F5                                    _BRGH 04C2  
                                  _T0IE 005D                                    _T0IF 005A  
                                  _CREN 00C4                                    u2205 0455  
                                  u2225 0466                                    u2085 076F  
                                  u2245 0476                                    u2255 0484  
                                  u2265 0493                                    u2434 02C8  
                                  u2435 02C6                                    u1804 0255  
                                  u1724 01ED                                    u1805 0253  
                                  u1725 01EB                                    u1814 026B  
                                  u1734 0203                                    u1655 0757  
                                  u1815 0268                                    u1735 0200  
                                  u1584 007A                                    u1585 0078  
                                  u1834 03FF                                    u1835 03FD  
                                  u1764 0221                                    u1765 021F  
                                  u1854 0417                                    u1774 0237  
                                  u1855 0415                                    u1775 0234  
                                  u1874 042F                                    u1875 042D  
                                  _PEIE 005E                                    _INTF 0059  
                                  _RCIE 0465                                    _RCIF 0065  
                                  _OERR 00C1                                    _VCFG 00FE  
                                  _TMR0 0001                                    _TMR1 000E  
                                  _TMR2 0011                                    _SPEN 00C7  
                                  _WREN 0C62                                    _TXEN 04C5  
                                  _TXIF 0064                                    _SYNC 04C4  
                         _eep10_absaddr 2109                                    _eep0 2100  
                                  _eep1 2101                                    _eep2 2102  
                                  _eep3 2103                                    _eep4 2104  
                                  _eep5 2105                                    _eep6 2106  
                                  _eep7 2107                                    _eep8 2108  
                   __end_of_Led_Manager 01DC                      Dio_Write@bit_value 0077  
                                  _main 0288                         __end_of_Adc_Ini 07EB  
                                  btemp 007E                                    ltemp 007E  
                                  start 0011                                    ttemp 007E  
                                  wtemp 007E                           __CFG_IESO$OFF 0000  
                       __end_of_Eep_Ini 0094                         __end_of_Dio_Ini 06E6  
        Kernel_Co_Op_Timer_ISR@ms10_ctr 007A          Kernel_Co_Op_Timer_ISR@ms50_ctr 003E  
                      __end_of_EEP_READ 0052                                   ??_isr 0072  
                       __end_of_Pwm_Ini 066A                                   ?_main 0070  
                                 _EEADR 010D                              _Led_Matrix 0712  
                                 _EEDAT 010C                                   _BRG16 04DB  
                         __CFG_WDTE$OFF 0000                                   _ANSEL 011E  
                                 _T2CON 0012                                   i1l731 05C5  
                                 i1l726 05A8                                   _RCREG 001A  
                                 _SPBRG 0099                                   _PORTA 0005  
                                 _PORTB 0006                                   _PORTC 0007  
                                 _TXREG 0019                     fp__Systm_Ini_Proc_1 0108  
                   fp__Systm_Ini_Proc_2 0106                           __CFG_PWRTE$ON 0000  
                        __CFG_FCMEN$OFF 0000                                   _abc11 210A  
                                 _abc12 210B                                   _eep10 2109  
                           _Eep_Manager 04F5                     __size_of_EEP_to_RAM 0051  
                         _Switch_Matrix 0718                                   fpbase 0105  
                        _usage_time_ini 0731                          __CFG_BOREN$OFF 0000  
                                 pclath 000A                                   ltemp0 007E  
                                 ltemp1 0082                                   ltemp2 0086  
                                 ltemp3 0080                     check_eep_checksum@i 0055  
              __end_of_Systm_Ini_Proc_1 07AD                __end_of_Systm_Ini_Proc_2 0090  
              __size_of_Api_Led_Control 0017                                   ttemp0 007E  
                                 ttemp1 0081                                   ttemp2 0084  
                                 ttemp3 0087                                   ttemp4 007F  
                                 status 0003                                   wtemp0 007E  
                                 wtemp1 0080                                   wtemp2 0082  
                                 wtemp3 0084                                   wtemp4 0086  
                                 wtemp5 0088                                   wtemp6 007F  
       Kernel_Co_Op_Timer_ISR@ms200_ctr 003D                            _eep0_absaddr 2100  
                      __end_of_Dio_Read 044B                            _eep1_absaddr 2101  
                         _adc_chn0_data 0034                           _adc_chn1_data 0036  
                         _adc_chn2_data 0038                          __CFG_MCLRE$OFF 0000  
                         _adc_chn3_data 003A                            _eep2_absaddr 2102  
                       __initialization 0013                            __end_of_eep0 2101  
                          __end_of_eep1 2102                            __end_of_eep2 2103  
                          __end_of_eep3 2104                            __end_of_eep4 2105  
                          __end_of_eep5 2106                            __end_of_eep6 2107  
                          __end_of_eep7 2108                            __end_of_eep8 2109  
                          _eep3_absaddr 2103                            __end_of_main 0316  
               num_to_string@num_string 0067                            _eep4_absaddr 2104  
                          _eep5_absaddr 2105                         _EEPRAM_APP_DATA 0032  
                          _eep6_absaddr 2106                      __size_of_Dio_Write 00AC  
                                ??_main 0063                            _eep7_absaddr 2107  
                  __end_of_Os_10ms_Task 0725                            _eep8_absaddr 2108  
                      __end_of_Uart_Ini 06FA                        __end_of_Uart_Isr 05C9  
                     ?_set_bit_position 0076                             _Led_Manager 011C  
                __end_of_usage_time_ini 075E                                  _ADCON0 001F  
                                _ADCON1 009F                      ??_set_bit_position 0077  
                             ??_Adc_Ini 0076                                  _ADRESH 001E  
                                _ADRESL 009E                                  _CCPR1L 0015  
                  __end_of_Os_50ms_Task 0731                                  _EECON2 018D  
                                _ANSELH 011F                                  i1l3021 0615  
                                i1l3015 0610                                  i1l3007 0604  
                                i1l3029 061E                                  i1l2811 0359  
                                i1l2803 034B                                  i1l2821 0391  
                                i1l2805 0354                                  i1l2817 0389  
                                i1l2853 05A4                                  i1l2787 032C  
                                i1l2799 0344                                  u213_25 035C  
                                u215_25 036D                                  u217_25 037D  
                             ??_Eep_Ini 0076                               ??_Dio_Ini 0076  
                                _OSCCON 008F                                  _TMR1IE 0460  
                                _TMR1IF 0060                                  _TMR1CS 0081  
                                _TMR2IF 0061                                  _TMR1ON 0080  
                                _TMR2ON 0092                       adc_updator@adc_no 0042  
                                _TRISA0 0428                                  _TRISA1 0429  
                                _TRISA2 042A                                  _TRISA3 042B  
                                _TRISC0 0438                                  _TRISA4 042C  
                                _TRISC1 0439                                  _TRISA5 042D  
                                _TRISC2 043A                                  _TRISB4 0434  
                                _TRISC3 043B                                  _TRISB5 0435  
                                _TRISC4 043C                                  _TRISB6 0436  
                                _TRISC5 043D                                  _TRISB7 0437  
                                _TRISC6 043E                                  _TRISC7 043F  
                      __end_of__fptable 011C                            __p_eep0_text 2100  
                          __p_eep1_text 2101                            __p_eep2_text 2102  
                          __p_eep3_text 2103                   __end_of_Os_100ms_Task 072F  
                          __p_eep4_text 2104                            __p_eep5_text 2105  
                          __p_eep6_text 2106                            __p_eep7_text 2107  
                          __p_eep8_text 2108                          _Kernel_stTimer 0020  
                      __end_of_delay_ms 06A3                                  _Os_Ini 066A  
                        _Os_1000ms_Task 072B                   __end_of_Os_200ms_Task 0728  
                             ??_Pwm_Ini 0078             __end_of_Os_Back_Ground_Task 072B  
       check_eep_checksum@checksum_data 0054                      _check_eep_checksum 053E  
                        _Switch_Manager 0396                ??_Kernel_Co_Op_Timer_ISR 0070  
              ?_System_Status_Indicator 0070                     ?_check_eep_checksum 0070  
                                fptable 0100                                  fptotal 0016  
             Api_Led_Control@led_status 0076                                  saved_w 007E  
                       ?_usage_time_ini 0070                               ?_EEP_READ 0070  
                       fp__Uart_Manager 0114                 __end_of__initialization 003B  
                     __end_of_Dio_Write 0288                    ??_check_eep_checksum 0077  
                __end_of_Os_1000ms_Task 072D                          fp__usege_timer 010A  
Switch_Manager@u8_st_temp_switch_ststus 0059                usage_time_ini@maint_time 0076  
                          ??_EEP_to_RAM 0056                    Eep_Manager@temp_data 0077  
                     ??_Api_Led_Control 0077                          __pcstackCOMMON 0070  
                         __end_of_abc11 210B                           __end_of_abc12 210C  
                __end_of_Switch_Manager 03F1                           __end_of_eep10 210A  
                          __pidataBANK0 06FA                            __pidataBANK1 062E  
                         __p_abc11_text 210A                           __p_abc12_text 210B  
             __size_of_Api_Uart_Read_Rx 000F                          _OPTION_REGbits 0081  
                          ?_usege_timer 0070                               ?_Dio_Read 0076  
                     ?_Sw_Timer_Updator 0070                              ??_EEP_READ 0076  
                    __end_of_EEP_to_RAM 04F5                              __pbssBANK0 0020  
                            __pbssBANK1 00BE                      ??_Sw_Timer_Updator 0052  
                        fp__Eep_Manager 0112                           ?_Uart_Manager 0070  
                               ?_Os_Ini 0070                               ?_Uart_Ini 0070  
                             ?_Uart_Isr 0070                              __pmaintext 0288  
                       ?_Switch_Manager 0070                         _Kernel_vHWReset 071F  
                            __pintentry 0004                                 _CCP1CON 0017  
                         __p_eep10_text 2109                        _Os_Task_Ptr_Temp 003F  
       __size_of_Kernel_Co_Op_Timer_ISR 0080                                 _T1OSCEN 0083  
                         ??_adc_updator 0076                 Kernel_Co_Op_Timer_ISR@i 0071  
                            ??_Dio_Read 0052                               ?_delay_ms 0076  
                          ?_Eep_Manager 0070                                 _PSTRCON 019D  
                               _Adc_Ini 07CC           __size_of_Kernel_vRunContainer 001F  
                            __stringtab 0700                                 _Eep_Ini 0090  
                               _Eep_Mgr 002E                                 _Dio_Ini 06D1  
                     ?_Systm_Ini_Proc_1 0070                       ?_Systm_Ini_Proc_2 0070  
                       Dio_Write@pin_no 0076                                 _Nano_Os 00A0  
                        ??_Uart_Manager 0076                            _Os_10ms_Task 0722  
                    ??_Systm_Ini_Proc_1 005D                      ??_Systm_Ini_Proc_2 0078  
                        fp__Led_Manager 010E                         __size_of_Os_Ini 001D  
                            ??_Uart_Ini 0076                              ??_Uart_Isr 0070  
                               _Pwm_Ini 064C            set_bit_position@bit_position 0076  
                          _Os_50ms_Task 072F                          Dio_Read@pin_no 0076  
                               __ptext1 044B                                 __ptext2 06A3  
                               __ptext3 0062                                 __ptext4 07EB  
                               __ptext5 04F5                                 __ptext6 0396  
                               __ptext7 011C                                 __ptext8 05C9  
                               __ptext9 075E                            __size_of_isr 0032  
                            ??_delay_ms 0052                            ?_Led_Manager 0070  
                               clrloop0 0081                    end_of_initialization 003B  
                   __end_of_adc_updator 05FC                  _Kernel_Co_Op_Timer_ISR 0316  
               __end_of_Kernel_vHWReset 0722                           _abc11_absaddr 210A  
             __size_of_set_bit_position 000F                           _abc12_absaddr 210B  
              Api_Get_Pwm@dutycycle_old 003C                            __pstringtext 0700  
                      _Api_Uart_Read_Rx 0062                        ??_usage_time_ini 0052  
           EEP_to_RAM@eep_error_stetegy 0057                    __size_of_usege_timer 002B  
                            _usage_time 0078        __size_of_System_Status_Indicator 0017  
                       _Api_Led_Control 06BA                       __size_of_EEP_READ 0014  
                         _Dio_Write$120 0058                           _Dio_Write$121 005A  
                         _Dio_Write$122 005C                      __end_of_Led_Matrix 0718  
                             _Dio_Write 01DC                       Sw_Timer_Updator@i 0076  
                        __end_of_Os_Ini 0687         usege_timer@usage_time_res_count 007D  
                    _EEPRAM_SYSTEM_DATA 0028                             _adc_updator 05C9  
                  __end_of_Uart_Manager 0800                     start_initialization 0013  
                           __end_of_isr 062E                       __size_of_Dio_Read 005A  
                   EEP_to_RAM@temp_data 0058                    __size_of_Eep_Manager 0049  
                  adc_updator@temp_data 0052                         EEP_to_RAM@i_191 005C  
                       EEP_to_RAM@j_192 005A             __size_of_check_eep_checksum 0047  
                      ??_Switch_Manager 0056                                ??_Os_Ini 0076  
                            ?_Dio_Write 0076                   Api_Led_Control@led_no 0052  
             __size_of_Sw_Timer_Updator 0059                              init_fetch0 0052  
                     __size_of_Uart_Ini 0014                           EEP_READ@Index 0052  
                     __size_of_Uart_Isr 0044                             __pdataBANK0 0067  
                           __pdataBANK1 00A0                 __end_of_Api_Led_Control 06D1  
                           __pbssCOMMON 0078                               ___latbits 0001  
                         __pcstackBANK0 0052                       __size_of__fptable 001C  
                 __end_of_Switch_Matrix 071E                                ?_Adc_Ini 0070  
                     __size_of_delay_ms 001C                    __size_of_Led_Manager 00C0  
                              ?_Eep_Ini 0070                                ?_Dio_Ini 0070  
                      _set_bit_position 0071                           _Os_100ms_Task 072D  
                              ?_Pwm_Ini 0070                               __pfunctab 0100  
                         _Os_200ms_Task 0725            __end_of_Kernel_vRunContainer 07CC  
             __size_of_Systm_Ini_Proc_1 0024               __size_of_Systm_Ini_Proc_2 0008  
               set_bit_position@number1 0052                     fp__Api_Uart_Read_Rx 0116  
               ?_Kernel_Co_Op_Timer_ISR 0070                 _System_Status_Indicator 06A3  
            fp__System_Status_Indicator 0118                                _EEP_READ 003E  
              __end_of_Api_Uart_Read_Rx 0071                       interrupt_function 0004  
                             delay_ms@i 0053                               clear_ram0 0080  
                           ??_Dio_Write 0052                   __size_of_Uart_Manager 0015  
                           __stringbase 0712                        ?_Api_Led_Control 0076  
                              _Dio_Read 03F1          __end_of_Kernel_Co_Op_Timer_ISR 0396  
                      __size_of_Adc_Ini 001F                        Dio_Write@port_no 0057  
                      __size_of_Eep_Ini 0004                        __size_of_Dio_Ini 0015  
                        fp__adc_updator 010C                     _Os_Back_Ground_Task 0728  
                       _BACKGROUND_TASK 071E                      _start_stop_tmr_val 007C  
                          _Uart_Manager 07EB                                _Uart_Ini 06E6  
                          _Uart_Net_Mgr 00BE                                _Uart_Isr 0585  
                      _Sw_Timer_Updator 044B                        __size_of_Pwm_Ini 001E  
                          Led_Manager@i 0062                      __end_of__stringtab 0712  
                              __fptable 0100                            ?_adc_updator 0070  
                         ??_usege_timer 0076               ??_System_Status_Indicator 0053  
                              _delay_ms 0687                                __ptext10 06BA  
                              __ptext11 01DC                                __ptext20 0071  
                              __ptext12 03F1                                __ptext21 066A  
                              __ptext13 07AD                                __ptext30 0316  
                              __ptext22 0090                                __ptext14 0789  
                              __ptext23 04A4                                __ptext15 0088  
                              __ptext24 053E                                __ptext16 0687  
                              __ptext25 003E                                __ptext17 0731  
                              __ptext26 06D1                                __ptext18 06E6  
                              __ptext27 07CC                                __ptext19 064C  
                              __ptext28 05FC                                __ptext29 0585  
                       Dio_Read@port_no 0054          _Sys_u8_st_Globle_System_Status 0040  
                  _Kernel_vRunContainer 07AD                           __size_of_main 008E  
                            _EEP_to_RAM 04A4                        _Systm_Ini_Proc_1 0789  
                      _Systm_Ini_Proc_2 0088                __end_of_set_bit_position 0080  
                   delay_ms@delay_count 0076                           ??_Eep_Manager 0076  
                              init_ram0 0056                 __end_of_BACKGROUND_TASK 071F  
                 ?_Kernel_vRunContainer 005E                                intlevel1 0100  
                   __end_of_usege_timer 0789   Kernel_vRunContainer@afpContainerArray 005E  
            __end_of_check_eep_checksum 0585                 __size_of_usage_time_ini 002D  
                     EEP_READ@temp_data 0053         __end_of_System_Status_Indicator 06BA  
                             stringcode 070A                         Switch_Manager@i 005A  
                              stringtab 0700                           ??_Led_Manager 005E  
                    _maintainace_status 007B                  Dio_Read@temp_port_data 0055  
                   __end_of_Eep_Manager 053E                       ?_Api_Uart_Read_Rx 0070  
                     __CFG_FOSC$INTRCIO 0000                      ??_Api_Uart_Read_Rx 0076  
                           ?_EEP_to_RAM 0070  
